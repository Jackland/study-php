{% trans_default_category 'catalog/view/customerpartner/message_center/platform_secretary/index' %}

{{ js(['js/common/orisComponents.js']) }}

{{ css([
  'css/common/common-ext.css',
  'static/message/message-common.css',
  'static/customerpartner/message_center/my-message-common.css'
]) }}

<link rel="stylesheet" type="text/css" href="catalog/view/javascript/bootstrap-select18/bootstrap-select.min.css">
<link rel="stylesheet" type="text/css" href="catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css">
<script type="text/javascript" src="/catalog/view/javascript/bootstrap/js/bootstrap-paginator.min.js"></script>
<script type="text/javascript" src="catalog/view/javascript/layer/layer.js"></script>

<div id="page-inbox">
  {# 搜索栏部分 #}
  <div class="search-container msgcent">
    <div class="oris-row msgcent msg-search__row mb-20 msgb-search-row">
      <div class="oris-col-3 mymessage-col">
        <label class="msgcent msg-search__label">Subject</label>
        <input type="text" maxlength="200" placeholder="Enter Subject" id="filter-subject" value="{{ search.filter_subject }}" class="oris-input" autocomplete="off"/>
      </div>
      <div class="oris-col-3 oris-select mymessage-col">
        <label class="msgcent msg-search__label">Marked</label>
        <select id="marked" class="selectpicker">
          <option value="">All</option>
          <option value="1" {% if '1' == search.filter_mark_status %}selected{% endif %}>Marked</option>
          <option value="0" {% if '0' == search.filter_mark_status %}selected{% endif %}>Unmarked</option>
        </select>
      </div>
      <div class="oris-col-3 oris-select mymessage-col">
        <label class="msgcent msg-search__label">Status</label>
        <select id="filter-status" class="selectpicker">
          <option value="">All</option>
          <option value="1" {% if '1' == search.filter_read_status %}selected{% endif %}> Read</option>
          <option value="0" {% if '0' == search.filter_read_status %}selected{% endif %}> Unread</option>
          <option value="5" {% if '5' == search.filter_replied_status %}selected{% endif %}>Not Replied</option>
          <option value="6" {% if '6' == search.filter_replied_status %}selected{% endif %}>Replied</option>
          <option value="7" {% if '7' == search.filter_replied_status %}selected{% endif %}>Ignore</option>
        </select>
      </div>
      <div class="oris-col-3 mymessage-col">
        <label class="msgcent msg-search__label">Post Time</label>
        <div class="oris-ingroup action-clear">
          <input type="text" name="sent_creation_time" readonly class="oris-input" id="sent_creation_time" value=""
                placeholder="From ~ To"/>
          <i class="giga icon-v10quxiao-01 oris-clear " data-action-range="1"></i>
        </div>
      </div>
    </div>
    <div class="oris-row msgcent msg-search__row mb-20">
      <button class="oris-button oris-button-bigger msgcent msg-search__btn" onclick="inboxFilter()">Filter</button>
      <button class="oris-button oris-button-bigger msgcent msg-search__btn oris-button-default msg-w80" onclick="inboxReset()">Reset</button>
    </div>
    <div class="oris-row msgcent msg-markas__row">
      <button class="oris-button oirs-button-default msgcent msg-search__btn" onclick="handleInboxDelete()" disabled>Delete</button>
      <div class="oris-select msgcent msg-markas__select">
        <select id="markas" class="selectpicker" onchange="handleInboxSetup()" disabled title="Mark As">
          <option value="1">Unread</option>
          <option value="2">Read</option>
          <option value="3">Unmarked</option>
          <option value="4">Marked </option>
          <option value="5">Not Replied</option>
          <option value="6">Replied</option>
          <option value="7">Ignore</option>
        </select>
      </div>
    </div>
  </div>
  {# 列表数据部分 #}
  <div class="msgcent msg-table__container" style="margin-top:20px;">
    <table class="oris-table oris-table-minicheck">
      <thead>
        <tr>
          <th class="oris-w42"><input type="checkbox" name="all_select" onclick="$('#page-inbox input[name*=\'selected\']').prop('checked', this.checked);"/></th>
          <th class="oris-w42"></th>
          <th class="text-left oris-w400">Subject</th>
          <th class="text-left">Sender</th>
          <th class="text-left">Status</th>
          <th>Marked</th>
          <th class="text-left">Post Time</th>
        </tr>
      </thead>
      <tbody>
        {# 样式逻辑： 1.未读状态加粗，其余状态正常; 2.已回复状态绿色圆点，其他状态均为红色圆点; 3.绿色回复图标的显示和绿色圆点保持一致 #}
        {# tr class 控制行内加粗或者绿点显示 #}
        
        {% if list %}
          {% for message in list %}
            <tr class="{{ message.replied_status == 1 ? ' msg-table__row-replied ' : '' }} {{ message.is_read == 1 ? '' : ' msg-table__row-unanswered ' }}">
              <td class="oris-w42"><input type="checkbox" name="selected[]" style="margin: 0" value="{{ message.id }}"/></td>
              <td class="oris-w42">
                {% if message.replied_status == 1 %}
                  <i class="giga icon-huifu-01 msg-replyicon"></i>
                {% endif %}
              </td>
              <td class="text-left">
                <a href="{{ url('customerpartner/message_center/message/detail', {msg_id: message.msg_id, from: 'giga'}) }}">
                  {# {% if message.is_read %}
                    <i class="gcl gclxinfengxinjian" style="color: #ddd"></i>
                  {% else %}
                    <i class="gcl gclxinfeng" style="color: red;"></i>
                  {% endif %} #}
                  <span {% if message.is_read %} style="color:#333333" {% else %} style="color:#333333;font-weight: bold" {% endif %} class="msg-clickable msg-subject-tdspan" title="{{message.subject}}">{{ message.subject }}</span>
                </a>
              </td>
              <td class="text-left">Giga Help Desk</td>
              <td class="text-left"><div class="msg-state__cell"><div class="msgcent msg-state__icon"></div>{{ message.replied_status_name }}</div></td>
              <td>
                <a onclick="inboxMarked(this, {{ message.id }})" style="color: #888">
                  {% if message.is_marked %}
                    <i class="fa fa-star msg-markicon__active" id="marked_{{ message.id }}" data="{{ message.is_marked }}"></i>
                  {% else %}
                    <i class="fa fa-star-o msg-markicon__default" id="marked_{{ message.id }}" data="{{ message.is_marked }}"></i>
                  {% endif %}
                </a>
              </td>
              <td class="text-left">{{ message.post_time }}</td>
            </tr>
          {% endfor %}
          </tbody>
        </table>
        {% else %}
          </tbody>
        </table>
        <div class="msg-empty">
          <div class="msg-empty-container">
            <div class="msg-empty-icon">
              <img src="{{ asset("image/icons/empty.png") }}"></img>
            </div>
            <div class="msg-empty-title">No Records Found !</div>
          </div>
        </div>
        {% endif %}
    </table>
  </div>
  <div class="oris-row oris-pagination">
    <ul id="pagination"></ul>
  </div>
</div>

<script src="catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.js" type="text/javascript"></script>
<script type="text/javascript" src="catalog/view/javascript/bootstrap-select18/bootstrap-select.min.js"></script>

<script>
const dateRangeto = '   To   ';
$(function(){
  //选择框初始化
  $('#page-inbox #filter-status').selectpicker();
  $('#page-inbox #marked').selectpicker();
  $('#page-inbox #markas').selectpicker();

  initTimePicker();
  //初始化分页
  initPagination();

  orisComponents.initClearInputIcon();
  orisComponents.clearInputIcon();
});


//初始化日期选择控件
var startDate = moment().subtract(1, 'y').format('YYYY-MM-DD');
var endDate = moment().format('YYYY-MM-DD');

function initTimePicker() {
  var searchStartDateFrom = "{{ search.filter_post_time_from }}";
  var searchStartDateTo = "{{ search.filter_post_time_to }}";
  if (searchStartDateFrom && searchStartDateTo) {
    startDate = searchStartDateFrom.substr(0, 10);
    endDate = searchStartDateTo.substr(0, 10);
    // 初始化数据
    $('#page-inbox #sent_creation_time').val(startDate + dateRangeto + endDate);
  }

  $('#sent_creation_time').daterangepicker({
    separator: dateRangeto,
    startDate: startDate,
    endDate: endDate,
    format: 'YYYY-MM-DD'
  }, function (start, end, label) {
    orisComponents.triggerInputClear($('#page-inbox #sent_creation_time'));
  });
}

function initPagination() {
  //需要返回分页数据
  $('#page-inbox #pagination').bootstrapPaginator({
    bootstrapMajorVersion: 3,
    size: 'normal',
    currentPage: {{ paginator.getPage() }},
    /*一共多少页*/
    totalPages: {{ max(paginator.getPageCount(), 1) }},
    /*页面上最多显示几个含数字的分页按钮*/
    numberOfPages: 5,
    pageRange: [10, 20, 30, 50, 100],
    rowsOfPage: {{ paginator.getPageSize()}},
    total: {{ paginator.getTotalCount() }},
    onPageClicked: function (event, originalEvent, type, page) {
      block.blockUI();
      $('#tab_content').load('{{ paginator.getUrlWithNoPage() }}&page=' + page, function () {
        block.unBlockUI();
      });
    }
  }); 
}

function inboxMarked(domEle, message_id) {
  var is_marked = $("#page-inbox #marked_" + message_id).attr('data');
  var param = {tab_type: 'inbox', ids: message_id, is_marked: is_marked == 0 ? 1 : 0};
  $.ajax({
    url: "{{ url('customerpartner/message_center/message/handleMarked') }}",
    type: 'post',
    data: param,
    dataType: 'json',
    success: function (json) {
      if (json.code == 200) {
        if (0 == is_marked) {
          $("#page-inbox #marked_" + message_id).attr('data', 1).attr('class', 'fa fa-star msg-markicon__active').attr('style', 'color: #f3ab09d1');
          $(domEle).attr("data-cnzz-event", "Message Center|MS_fromseller_unmarked");
        } else {
          $("#page-inbox #marked_" + message_id).attr('data', 0).attr('class', 'fa fa-star-o msg-markicon__default').attr('style', 'color: none');
          $(domEle).attr("data-cnzz-event", "Message Center|MS_fromseller_marked");
        }
      } else {
        $.toast({
          heading: false,
          text: 'Please try again later',
          position: 'top-center',
          showHideTransition: 'fade',
          icon: 'error',
          hideAfter: 3000,
          allowToastClose: false,
          loader: false,
        });
      }
    }
  });
}

//勾选框控制按钮是否禁用
$("#page-inbox input[name='selected[]'] ,#page-inbox input[name='all_select']").on('change', function() {

  if ($('#page-inbox input[name="selected[]"]').length == $('#page-inbox input[name="selected[]"]:checked').length) {
    $('#page-inbox input[name=all_select]').prop('checked', true);
  } else {
    $('#page-inbox input[name=all_select]').prop('checked', false);
  }

  var length = $("#page-inbox input[name='selected[]']:checked").length;
  if(length <= 0) {
    $("#page-inbox .msg-markas__row button").attr('disabled', true);
    $("#page-inbox .msg-markas__row select").attr('disabled', true);
  } else {
    $("#page-inbox .msg-markas__row button").removeAttr('disabled')
    $("#page-inbox .msg-markas__row select").removeAttr('disabled')
  }
  $("#page-inbox #markas").selectpicker('refresh');
});

function handleInboxSetup() {
  var length = $("#page-inbox input[name='selected[]']:checked").length;
  if (length <= 0) {
    layer.alert('Please select at least one message.', {
      title: 'Message',
      btn: 'OK',
      skin: 'yzc_layer', //样式类名
      closeBtn: 0
    });
    $("#markas").val('');
    return false;
  }

  var ids = '';
  $("#page-inbox input[name='selected[]']:checked").each(function () {
    ids += Number($(this).val()) + ',';
  });

  var type = 'inbox';
  var status = $("#page-inbox #markas").val();

  // #6774 中去除去所有用户的全选
  // let is_all_select = $('#page-inbox input[name=all_select]').is(':checked') ? 1 : 0;
  // if (is_all_select) {
  //   batchSetUpCurrentMsg(type, status)
  //   return;
  // }

  switch (status) {
    case '1':
      batchInboxRead({tab_type: type, ids: ids, is_read: 0})
      break;
    case '2':
      batchInboxRead({tab_type: type, ids: ids, is_read: 1})
      break;
    case '3':
      batchInboxMarked({tab_type: type, ids: ids, is_marked: 0})
      break;
    case '4':
      batchInboxMarked({tab_type: type, ids: ids, is_marked: 1})
      break;
    case '5':
      batchInboxReplied({tab_type: type, ids: ids, replied_status: 0})
      break;
    case '6':
      batchInboxReplied({tab_type: type, ids: ids, replied_status: 1})
      break;
    case '7':
      batchInboxReplied({tab_type: type, ids: ids, replied_status: 2})
      break;
  }
}

function batchSetUpCurrentMsg(tab_type, setup_type, exclude_ids = '') {
  if (!setup_type) {
    return ;
  }

  var url = "{{ url('customerpartner/message_center/message/handleAllData') }}" + getInboxFilter();

  $.ajax({
    url: url,
    type: 'post',
    data: {
      tab_type: tab_type,
      setup_type: setup_type,
      exclude_ids: exclude_ids,
      user_type: 2,
    },
    dataType: 'json',
    success: function (json) {
      if (json.code == 200) {
        $.toast({
          heading: false,
          text: setupSuccessMsg(setup_type),
          position: 'top-center',
          showHideTransition: 'fade',
          icon: 'success',
          hideAfter: 3000,
          allowToastClose: false,
          loader: false,
          afterHidden: function () {
            reloadInbox();
          }
        });
      } else {
        $.toast({
          heading: false,
          text: 'Please try again later!',
          position: 'top-center',
          showHideTransition: 'fade',
          icon: 'error',
          hideAfter: 3000,
          allowToastClose: false,
          loader: false,
        });
      }
    }
  });
}

function setupSuccessMsg(status) {
  switch (status) {
    case '1':
      return 'Unread successfully';
    case '2':
      return 'Read successfully';
    case '3':
      return 'Unmarked successfully';
    case '4':
      return 'Marked successfully';
    case '5':
      return 'Not Replied successfully';
    case '6':
      return 'Replied successfully';
    case '7':
      return 'Ignore successfully';
  }
}

function batchInboxReplied(param) {
  $.ajax({
    url: "{{ url('customerpartner/message_center/message/handleReplied') }}",
    type: 'post',
    data: param,
    dataType: 'json',
    success: function (json) {
      if (json.code == 200) {
        $.toast({
          heading: false,
          text: param.replied_status == 0 ? 'Not Replied successfully' : (param.replied_status == 1 ? 'Replied successfully' : 'Ignore successfully'),
          position: 'top-center',
          showHideTransition: 'fade',
          icon: 'success',
          hideAfter: 3000,
          allowToastClose: false,
          loader: false,
          afterHidden: function () {
            reloadInbox();
          }
        });
      } else {
        $.toast({
          heading: false,
          text: 'Please try again later!',
          position: 'top-center',
          showHideTransition: 'fade',
          icon: 'error',
          hideAfter: 3000,
          allowToastClose: false,
          loader: false,
        });
      }
    }
  });
}

function batchInboxRead(param) {
  $.ajax({
    url: "{{ url('customerpartner/message_center/message/handleRead') }}",
    type: 'post',
    data: param,
    dataType: 'json',
    success: function (json) {
      if (json.code == 200) {
        $.toast({
          heading: false,
          text: param.is_read == 1 ? 'Read successfully' : 'Unread successfully',
          position: 'top-center',
          showHideTransition: 'fade',
          icon: 'success',
          hideAfter: 3000,
          allowToastClose: false,
          loader: false,
          afterHidden: function () {
            reloadInbox();
          }
        });
      } else {
        $.toast({
          heading: false,
          text: 'Please try again later!',
          position: 'top-center',
          showHideTransition: 'fade',
          icon: 'error',
          hideAfter: 3000,
          allowToastClose: false,
          loader: false,
        });
      }
    }
  });
}

function batchInboxMarked(param) {
  $.ajax({
    url: "{{ url('customerpartner/message_center/message/handleMarked') }}",
    type: 'post',
    data: param,
    dataType: 'json',
    success: function (json) {
      if (json.code == 200) {
        $.toast({
          heading: false,
          text: param.is_marked == 1 ? 'Marked successfully' : 'Unmarked successfully',
          position: 'top-center',
          showHideTransition: 'fade',
          icon: 'success',
          hideAfter: 3000,
          allowToastClose: false,
          loader: false,
          afterHidden: function () {
            reloadInbox();
          }
        });
      } else {
        $.toast({
          heading: false,
          text: 'Please try again later!',
          position: 'top-center',
          showHideTransition: 'fade',
          icon: 'error',
          hideAfter: 3000,
          allowToastClose: false,
          loader: false,
        });
      }
    }
  });
}

function handleInboxDelete() {
  var length = $("input[name='selected[]']:checked").length;
  if (length <= 0) {
    layer.alert('Please select at least one message.', {
      title: 'Message',
      btn: 'OK',
      skin: 'yzc_layer', //样式类名
      closeBtn: 0
    });
    return false;
  }

  var ids = '';
  $("#page-inbox input[name='selected[]']:checked").each(function () {
    ids += Number($(this).val()) + ',';
  });

  layer.confirm("Are you sure you want to delete these messages?", {
      title: 'Message',
      skin: 'yzc_layer', //样式类名
      btn: ['Yes', 'No']
    }, //按钮
    function (index) {
      layer.close(index);
      $.ajax({
        url: "{{ url('customerpartner/message_center/message/handleInboxDeleted') }}",
        type: 'post',
        data: {tab_type: 'inbox', ids:ids, delete_status: 1},
        dataType: 'json',
        success: function (json) {
          if (json.code == 200) {
            $.toast({
              heading: false,
              text: 'Delete successfully.',
              position: 'top-center',
              showHideTransition: 'fade',
              icon: 'success',
              hideAfter: 3000,
              allowToastClose: false,
              loader: false,
              afterHidden: function () {
                reloadInbox();
              }
            });
          } else {
            $.toast({
              heading: false,
              text: 'Please try again later!',
              position: 'top-center',
              showHideTransition: 'fade',
              icon: 'error',
              hideAfter: 3000,
              allowToastClose: false,
              loader: false,
            });
          }
        }
      });
    });
}

function getInboxFilter() {
  let url = '';

  let subject = encodeURIComponent($('#page-inbox #filter-subject').val().trim());
  if (subject) {
    url += "&filter_subject=" + subject;
  }

  let dateArr = $('#page-inbox #sent_creation_time').val().split(dateRangeto);
  let filter_date_from = dateArr[0] ? encodeURIComponent(dateArr[0] + ' 00:00:00') : '';
  let filter_date_to = dateArr[1] ? encodeURIComponent(dateArr[1] + ' 23:59:59') : '';

  if (filter_date_from) {
    url += "&filter_post_time_from=" + filter_date_from;
  }
  if (filter_date_to) {
    url += "&filter_post_time_to=" + filter_date_to;
  }

  let marked = $("#page-inbox #marked").val();
  if (marked != '') {
    url += "&filter_mark_status=" + marked;
  }

  let status = $("#page-inbox #filter-status").val();
  if (status != '') {
    if (status > 1) {
      url += "&filter_replied_status=" + status;
    } else {
      url += "&filter_read_status=" + status;
    }
  }

  return url;
}

function inboxFilter() {
  block.blockUI();
  let url = '{{ url('customerpartner/message_center/platform_secretary/inbox') }}' + getInboxFilter();
  $('#tab_content').load(url, 'page_limit={{ paginator.getPageSize() }}', function () {
    block.unBlockUI();
  });
}

function reloadInbox() {
  block.blockUI();
  let url = '{{ url('customerpartner/message_center/platform_secretary/inbox') }}' + getInboxFilter();
  $('#tab_content').load(url, 'page_limit={{ paginator.getPageSize() }}', function () {
    block.unBlockUI();
  });
}

function inboxReset() {
  block.blockUI();
  $('#tab_content').load('{{ url('customerpartner/message_center/platform_secretary/inbox') }}', function () {
    block.unBlockUI();
  });
}

</script>