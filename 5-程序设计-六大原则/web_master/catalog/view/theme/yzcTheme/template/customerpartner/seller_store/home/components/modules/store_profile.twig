{% trans_default_category 'catalog/view/customerpartner/seller_store/home/index' %}
{# @file 店铺介绍 #}

{{ css([
  'static/customerpartner/seller_store/home/components/modules/store_profile.css'
]) }}

<script type="text/x-template" id="store-profile-module">
  <div class="store-profile-container">
    {# 首次进入显示骨架图 #}
    <div v-if="isInit"> 
       <div class="infomation-module">
        <img class="w1200" src="{{ asset('static/customerpartner/seller_store/home/images/blanks/store-profile.png') }}">
      </div>
    </div>
    {# 编辑后内容显示模块 #}
    <div v-else>
      <div class="infomation-module m20-b" v-if="data">
        <div class="common-title">Why Choose Us</div>
        <div class="information-content w1200">
          <div class="module-flex">
            <div v-if="data.pics&&data.pics.length>0" class="banner-image">
              <div class="swiper-container">
                <img class="banner-image" :src="data.pics[0]['pic_show']">
              </div>
              <div v-if="data.pics&&data.pics.length>1" class="swiper-pagination action-pagination swiper-pagination-clickable swiper-pagination-bullets">
                <span v-for="(pic,pIndex) in data.pics" class="swiper-pagination-bullet" :class="{'swiper-pagination-bullet-active':pIndex==0}"></span>
              </div>
              <div v-if="data.pics&&data.pics.length>1" class="swiper-pager">
                <div class="swiper-button-next"></div>
                <div class="swiper-button-prev"></div>
              </div>
            </div>
            <div class="right-content">${data.desc}</div>
          </div>
          <div class="module-flex">
            <div v-for="(one,i) in data.tags" class="tag-item">
              <img :src="one.icon_show">
              <div class="p10-l" v-if="data.tags[0]['content']||data.tags[1]['content']||data.tags[2]['content']||data.tags[3]['content']">
                <div class="module-largef text-bold">${one.title}</div>
                <div class="module-grey module-bigf module-line2">${one.content}</div>
              </div>
              <div v-else class="p10-l flex-layout module-largef text-bold">${one.title}</div>
            </div>
          </div>
        </div>
      </div>
    </div>
    {# 编辑弹窗部分 #}
    <div v-if="showEdit">
      <el-dialog class="module-modal ele ele-modal store-profile-modal" :class="{'active-modal': showEdit}" title="{{__('Why Choose Us 设置')}}" :visible="showEdit" 
        @close="closeEdit" append-to-body destory-on-close modal-append-to-body="false" width="800px" :close-on-click-modal="false"> 
        <div class="content-container">
          <div class="module-modal-tip">
            <ul>
              <li>{{__('本模块适用于供应商的优势及优秀标签介绍，如高品质的客服服务，质量问题包退等。')}}
              </li>
            </ul>
          </div>

          <div class="module-edit-container">
            <el-tabs v-model="activeTab" class="ele ele-tabs">
              <el-tab-pane label="{{__('内容设置')}}">
                <div class="module-form-body store-profile-form scrollable-container" id="profile-content">
                  {# 供应商介绍部分 #}
                  <div class="intro-container">
                    <div class="title-row">
                      <div class="tag-icon"></div>
                      <div class="title-text">{{__('供应商介绍')}}</div>
                      <div class="oper-icon" @click="toggleContainer('intro')" v-show="showIntro"><i class="el-arrow-icon giga icon-V10_shouyeyouxiaTOP"></i></div>
                      <div class="oper-icon" @click="toggleContainer('intro')" v-show="!showIntro"><i class="el-arrow-icon giga icon-V10_shouyeyouxiadown"></i></div>
                    </div>
                    <div class="intro-content-container ele ele-form" v-show="showIntro">
                      <div class="intro-content-title-row">
                        <div class="intro-content-title-row__label"><li></li><div>{{__('图片')}}</div></div>
                      </div>
                      <div class="ele ele-upload ele-form-item-required" id="intro-images" prop="">
                        {{
                        dynamicWidget('upload_image', {
                          autoInit: false,
                          quickInitFn: 'quickInitIntroUpload',
                          upload_options: {
                            maxCount: 5,
                            width: '116px',
                            height: '75px',
                            accept: 'image/jpg,image/png,image/jpeg',
                          }
                        })
                        }}
                        <div id="intro-upload"></div>
                      </div>
                      <div class="title-tip">{{__('最多可上传:num张，建议上传产品或生产图片，图片要求宽度:width，高度:height，格式为:ext。', {num: 5, width: '580px', height: '375px', ext: '.jpg/.png/.jpeg'})}}</div>
                      <div class="intro-content-title-row intro-desc-part">
                        <li><span>{{__('文字介绍')}}</span></li>
                      </div>
                      <div class="intro-desc-input">
                        <el-input class="intro-input" id="intro-textarea" @input="inputIntroTextarea" v-model="introData.desc" type="textarea" maxlength="2000"
                          show-word-limit resize="none" placeholder="{{ __('请输入介绍文案，:num字以内', {num:'2000'}) }}"></el-input>
                      </div>
                    </div>
                  </div>
                  <div class="split-line"></div>
                  {# 特色标签部分 #}
                  <div class="tags-container">
                    <div class="title-row">
                      <div class="tag-icon"></div>
                      <div class="title-text">{{__('特色标签')}}</div>
                      <div class="oper-icon" @click="toggleContainer('tag')" v-show="showTag"><i class="el-arrow-icon giga icon-V10_shouyeyouxiaTOP"></i></div>
                      <div class="oper-icon" @click="toggleContainer('tag')" v-show="!showTag"><i class="el-arrow-icon giga icon-V10_shouyeyouxiadown"></i></div>
                    </div>
                    <div v-show="showTag">
                      <el-form ref="form" label-width="90px" class="ele ele-form">
                        <div class="tag-item-container" v-for="(tag,index) of tagsData" :class="{'header-has-error': tag.error }">
                          <div class="tag-item__header"  @click="toggleTag(index)">
                            <div class="tag-item__header-title">
                              {{__('标签')}} ${index + 1}
                              <div class="tag-item__header-errortip" v-show="tag.error">{{__('请填写内容')}}</div>
                            </div>
                            <div class="tag-item__header-icongroup">
                              <div class="oper-icon" v-show="tag.show"><i class="giga icon-V10_shouyeyouxiaTOP"></i></div>
                              <div class="oper-icon" v-show="!tag.show"><i class="giga icon-V10_shouyeyouxiadown"></i></div>
                            </div>
                          </div>
                          <div class="tag-item__content" v-show="tag.show">
                            <el-form-item label="{{__('图标')}}" class="ele-form-item is-required">
                              <div class="icon-group-container">
                                <div v-for="(url, value) in options.module_introduction_icon" class="icon-item" @click="pickIcon(tag,value)">
                                  <img :src="url" />
                                  <div class="tag-checked" v-if="value == tag.icon"><i class="el-icon-success"></i></div>
                                </div>
                              </div>
                            </el-form-item>
                            <el-form-item label="{{__('标题')}}" class="title-form ele-form-item is-required" :class="{'is-error': tag.error}">
                              <el-input :value="tag.title" @input="forceInput($event, tag, 'title')" maxlength="50" class="ele ele-input-limit"
                                show-word-limit resize="none" placeholder="{{ __('请输入') }}"></el-input>
                            </el-form-item>
                            <el-form-item label="{{__('内容')}}" class="content-form ele-form-item">
                              <el-input :id="'textarea_' + index" v-model="tag.content" @input="forceInput($event, tag, 'content', index)" maxlength="200" type="textarea"
                                show-word-limit resize="none" placeholder="{{ __('特色的详细介绍，可不填写，:num字以内', {num:'200'}) }}"></el-input>
                            </el-form-item>
                          </div>
                        </div>
                      </el-form>
                    </div>
                  </div>
                </div>
              </el-tab-pane>
            </el-tabs>
          </div>
        </div>
        <template slot="footer">
          <div class="ele ele-btn ele-btn-group">
            <el-button class="oper-btn" @click="closeEdit">{{__('取消')}}</el-button>
            <el-button class="oper-btn" type="primary" @click="saveEdit" :loading="btnLoading">{{__('保存')}}</el-button>
          </div>
        </template>
      </el-dialog>
    </div> 
  </div>
</script>
<script>
const STORE_PROFILE_TRANSLATE = {
  IMAGE_OVER: "{{ __('超出最大上传张数') }}"
}
</script>
<script>
  Vue.component('store-profile', {
    template: '#store-profile-module',
    delimiters: ['${', '}'],
    data: () => {
      return {
        showEdit: false,
        activeTab: '',
        loading: false, // 加载动画
        btnLoading: false,
        axios: null,
        introUpload: null,

        showIntro: true, // 显示供应商介绍模块
        introFiles: [], 
        //供应商介绍数据
        introData: {
          desc: ''
        },

        //特色标签部分
        showTag: true, // 显示特色标签模块
        tagsRules: {
          title: [{ required: true, trigger: 'blur' }]
        }
      }
    },
    props: {
      data: {
        type: Object,
        default: () => ({})
      },
    },
    created() {
      this.axios = axios.create({});
      this.tagsData = [];
      for(let i in _.range(4)) {
        this.tagsData.push({
          icon: Object.keys(this.options.module_introduction_icon || {})[0],
          title: '',
          content: '',
          show: true,
          error: false,
        });
      }
    },
    watch: {
      showEdit: {
        immediate: true,
        handler: function(res) {
          this.$nextTick(function() {
            this.initDefault(this.data)
            let height = $(".active-modal.module-modal .el-dialog__body").height() - $(".active-modal .module-modal-tip").height();
            $(".active-modal .module-edit-container").height(height);
            if (res) {
              this.initIntroUpload()
            }
          })
        }
      },
    },
    computed: {
      isInit() {
        return jQuery.isEmptyObject(this.data)
      },
      options() {
        return store.state.options;
      }
    },
    methods: {
      /**
      * 编辑时初始化默认值
      */
      initDefault(data) {
        this.tagsData = [];
        if (!jQuery.isEmptyObject(data)) {
          for(let tag of data.tags) {
            this.tagsData.push({
              icon: tag.icon,
              title: tag.title,
              content: tag.content,
              show: true,
              error: false,
            })
          }
          this.introData.desc = data.desc;
          this.introFiles = [];
          let that = this;
          data.pics.map(function(item, index) {
            that.introFiles.push({
              url: item['pic_show'],
              path: item['pic'],
            });
          })
        } else {
          for(let i in _.range(4)) {
            this.tagsData.push({
              icon: Object.keys(this.options.module_introduction_icon || {})[0],
              title: '',
              content: '',
              show: true,
              error: false,
            });
          }
        }
      },

      initIntroUpload() {
        this.$nextTick(() => {
          $(() => {
            this.introUpload = quickInitIntroUpload('intro-upload', this.introFiles)
          })
        })
      },

      /**
      * 编辑操作
      */
      handleEdit() {
        this.showEdit = true;
      },

      closeEdit() {
        this.clearModal();
        this.showEdit = false;
      },

      //清空弹窗
      clearModal() {
        this.tagsData = [];
        this.introFiles = [], 
        //供应商介绍数据
        this.introData = {
          desc: ''
        }
        this.$refs['form'].resetFields();
      },

      //验证特色标签数据
      validateForm() {
        for(let tag of this.tagsData) {
          tag.error = tag.title.trim() == '';
        }
        this.$forceUpdate();
        this.$nextTick(function(){
          let $error = $(".header-has-error");
          if ($error.length > 0) {
            let offsetTop = document.getElementById('profile-content').scrollTop;
            let goTo = $(".header-has-error").first().offset().top + offsetTop - 320;
            $('#profile-content').animate({
                scrollTop: goTo
            }, 100);
          }
        })
        return this.tagsData.every(function(tag) { return !tag.error });
      },

      //保存弹窗按钮
      saveEdit() {
        this.introFiles = this.introUpload.getImageList()
        if (this.validateForm()){
          let that = this;
          let data = { 
            type: MODULE_TYPE.STORE_PROFILE,
            data: {
              pics: [],
              desc: this.introData.desc,
              tags: []
            }
          };
          // 设置图片对象
          data.data.pics = _.map(this.introFiles, function(item) {
            return {
              pic: item.path
            }
          });
          data.data.tags = _.map(this.tagsData, function(item) {
            return {
              icon: item.icon,
              title: item.title,
              content: item.content
            }
          });
          that.axios.post(API.MODULE_SAVE, data).then(res => {
            if(res.data.code == 200) {
              that.closeEdit();
              that.$emit("set-module", _.cloneDeep(res.data.data));
            } else {
              that.$message({...ALERT_OPTION, message: res.data.msg});
            }
          }).catch(err => {
            that.$message.error(err);
          })
        }
    },

      //触发展开或关闭
      toggleContainer(type) {
        if (type == 'intro') {
          this.showIntro = !this.showIntro;
        } else {
          this.showTag = !this.showTag;
        }
      },

      toggleTag(index) {
        this.tagsData[index].show = !this.tagsData[index].show;
        this.$forceUpdate();
      },

      //供应商介绍部分

      //特色标签部分 start ----
      pickIcon(tag, value) {
        tag.icon = value;
        this.$forceUpdate();
      },
      //特色标签部分 end ----

      //嵌套太深 双向绑定疑似无法自动渲染视图，进行手动渲染 @lijun
      forceInput(value, tag, type, index) {
        if (index != null) {
          var textarea = document.getElementById(`textarea_${index}`);
          textarea.scrollTop = textarea.scrollHeight;
        }
        tag[type] = value;
        this.$forceUpdate();
      },

      inputIntroTextarea () {
        var textarea = document.getElementById('intro-textarea');
        textarea.scrollTop = textarea.scrollHeight;
      }
    }
  })
</script>