{{ header }}
{{ separate_column_left }}
<style>
  .h2 {
    color: #1865a4;
    margin-bottom: 15px;
  }

  .activity_title {
    font-size: 16px;
    margin-left: 20px;
    color: #000;
  }

  .box-shadow {
    overflow: hidden;
    /*margin-top: 15px;*/
    margin-right: 0 !important;
    border-radius: 3px;
    background-color: #fff;
    padding: 20px;
    box-shadow: #aaa 0 0 6px;
  }

  .red-font {
    color: red;
  }

  .form-control:hover {
    border-width: 1px;
  }

  .pull-left.search {
    width: 250px;
  }
  .product_image{
    width: 36px;
    height: 36px;
    max-width: 8%!important;
  }
  .product_name{
    float: right;
    width: 92%;
  }
</style>
<link rel="stylesheet" href="catalog/view/javascript/bootstrap-table/bootstrap-table.min.css">
<script type="text/javascript" src="catalog/view/javascript/bootstrap-table/bootstrap-table.js"></script>
<div class="container-fluid" id="content" style="margin-left: 15%;margin-right: 20px">
  <ul class="breadcrumb">
    {% for breadcrumb in breadcrumbs %}
      <li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
    {% endfor %}
  </ul>
  {% if success %}
    <div class="alert alert-success"><i class="fa fa-exclamation-circle"></i> {{ success }}</div>
  {% endif %}
  <div class="row" id="main-content">
    {{ column_left }}
    {% if column_left and column_right %}
      {% set class = 'col-sm-6' %}
    {% elseif column_left or column_right %}
      {% set class = 'col-sm-9' %}
    {% else %}
      {% set class = 'col-sm-12' %}
    {% endif %}

    <div id="content" class="{{ class }}">
      {{ content_top }}
      <h2 class="h2">
        {{ heading_title }} <span class="activity_title">{{ activity_title }}</span>
        <div class="pull-right">
          <a onclick="save()" class="btn btn-primary">Submit</a>
          <a href="{{ url_page_back }}" data-toggle="tooltip" title="{{ tips_back }}" class="btn btn-default"><i class="fa fa-reply"></i></a>
        </div>
      </h2>

      <p style="margin-left: 5px">
        <span class="selected_num red-font">0</span> product(s) selected. A maximum of <span class="product_max_num red-font">{{ product_num_per }}</span> can be selected.
      </p>
      <div class="box-shadow">
        <table id="table_selected" class="table table-striped table-hover"></table>
      </div>

      <p style="margin-top: 20px;margin-left: 5px">
        A total of <span class="product_total_num red-font">0</span> product(s) can be promoted. You have selected <span class="selected_num red-font">0</span> product(s) .
      </p>
      <div class="box-shadow">
        <table id="table_selecting" class="table table-striped table-hover"></table>
      </div>
      {{ content_bottom }}
    </div>
    {{ column_right }}
  </div>
</div>
{{ footer }}

<script>

  let upload;
  let id = '{{ id }}';
  let image = '{{ banner_image }}';
  let url_save = '{{ url_save }}';
  let data_selected = [];
  let product_max_num = '{{ product_num_per }}';
  let url_image_prefix = '{{ url_image_prefix }}';
  let old_product_ids = [{{ old_product_ids }}];
  let flag = false;

  $(function () {
    if ('{{ error_message }}'.length > 0) {
      layer.alert('{{ error_message }}', {
        skin: 'yzc_layer' //样式类名
        , closeBtn: 0
        , btn: 'Ok'
        , title: 'Message'
      }, function () {
        window.location.href = '{{ url_page_history }}';
      });
    } else {
      init_tb_selecting();
      init_tb_selected();

    }
  })

  function init_tb_selected() {
    $('#table_selected').bootstrapTable({
      data: data_selected,
      sidePagination: false,
      striped: true,
      showRefresh: false,
      pagination: false, // 是否分页
      sortable: true, // 是否启用排序
      selectItemName: '',
      uniqueId: 'product_id',
      columns: [
        {
          field: 'sku',
          title: 'Item Code',
          halign: 'center',
          valign: 'center',
          align: 'center',
          sortable: true,
          width: 125,
        },
        {
          field: 'mpn',
          title: 'MPN',
          halign: 'center',
          valign: 'center',
          align: 'center',
          sortable: true,
          width: 125,
        },
        {
          field: 'product_name',
          title: 'Product Name',
          halign: 'center',
          valign: 'center',
          align: 'left',
          width: '45%',
          formatter: function (value, row, index) {
            let html = '<img src="' + row.image + '" class="pull-left product_image">';
            html += '<span class="product_name">' + value + '</span>';
            return html;
          }
        },
        {
          field: 'price_str',
          title: 'Current Price',
          halign: 'center',
          valign: 'center',
          align: 'center',
          sortable: true,
          width: 125,
        },
        {
          field: 'quantity',
          title: 'Available Quantity',
          halign: 'center',
          valign: 'center',
          align: 'center',
          sortable: true,
          width: 125,
        },
        {
          field: '',
          title: 'Action',
          halign: 'center',
          valign: 'center',
          align: 'center',
          formatter: function (value, row, index) {
            return '<a data-toggle="tooltip" title="{{ tips_cancel }}"' +
              ' class="btn btn-default" onclick="func_cancel(' + row.product_id + ')"><i class="fa fa-trash-o"></i></a>';
          }
        },
      ],
      onResetView: function () {
        $('[data-toggle="tooltip"]').tooltip();
      },
      formatNoMatches: function () {
        return '{{ text_no_data_selected }}';
      },
    });
  }

  function init_tb_selecting() {
    $('#table_selecting').bootstrapTable({
      url: '{{ url_get_products }}',
      sidePagination: true,
      striped: true,
      search: true,
      searchAlign: 'left',
      formatSearch: function () {
        return 'Item Code/ MPN / Product Name'
      },
      showSearchButton: true,
      pageSize: "10",
      showRefresh: false,
      pagination: false, // 是否分页
      sortable: true, // 是否启用排序
      selectItemName: '',
      checkboxHeader: false,
      columns: [
        {
          field: '',
          title: '',
          halign: 'center',
          valign: 'center',
          align: 'center',
          checkbox: true
        },
        {
          field: 'sku',
          title: 'Item Code',
          halign: 'center',
          valign: 'center',
          align: 'center',
          sortable: true,
          width: 125,
        },
        {
          field: 'mpn',
          title: 'MPN',
          halign: 'center',
          valign: 'center',
          align: 'center',
          sortable: true,
          width: 125,
        },
        {
          field: 'product_name',
          title: 'Product Name',
          halign: 'center',
          valign: 'center',
          align: 'left',
          width: '50%',
          formatter: function (value, row, index) {
            let html = '<img src="' + row.image + '" class="pull-left product_image">';
            html += '<span class="product_name">' + value + '</span>';
            return html;
          }
        },
        {
          field: 'price_str',
          title: 'Current Price',
          halign: 'center',
          valign: 'center',
          align: 'center',
          sortable: true,
          width: 125,
        },
        {
          field: 'quantity',
          title: 'Available Quantity',
          halign: 'center',
          valign: 'center',
          align: 'center',
          sortable: true,
          width: 125,
        },

      ],
      uniqueId: 'product_id',
      onCheck: function (row, e) {
        if (data_selected.indexOf(row) >= 0) {
          return;
        }
        if (data_selected.length > product_max_num - 1) {
          layerMsg('{{ error_max_product }}', 2000);
          $("#table_selecting").bootstrapTable('uncheckBy', {field: 'product_id', values: [row.product_id]});
          return;
        }
        data_selected.unshift(row);
        func_update_selected_table();
      },
      onUncheck: function (row, e) {
        func_remove_row(row);
      },
      onLoadSuccess: function (data, status, jrXHR) {
        $(".product_total_num").text(data.rows.length);
        if (old_product_ids.length > 0 && !flag) {
          $("#table_selecting").bootstrapTable('checkBy', {field: 'product_id', values: old_product_ids});
          flag = true;
        }
      },
      formatNoMatches: function () {
        return '{{ text_no_data_selecting }}';
      },
    })
  }

  // 更新 selected 表
  function func_update_selected_table() {
    $("#table_selected").bootstrapTable('load', data_selected);
    $('.selected_num').text(data_selected.length);
  }

  // bootstrapTable 刷新
  function func_table_refresh(table_id) {
    $("#" + table_id).bootstrapTable('refresh');
  }

  function func_cancel(product_id) {
    func_remove_row($("#table_selected").bootstrapTable('getRowByUniqueId', product_id));
    $("#table_selecting").bootstrapTable('uncheckBy', {field: 'product_id', values: [product_id]});
  }

  // 移除row并更新 selected 表
  function func_remove_row(row) {
    let idx = data_selected.indexOf(row);
    if (idx >= 0) {
      data_selected.splice(idx, 1);
    }
    func_update_selected_table();
  }

  function save() {
    let postData = {id: id, product_ids: []};
    if (data_selected.length === 0) {
      layerMsg('{{ error_no_select }}');
      return;
    }
    if (data_selected.length > product_max_num) {
      layer.alert('{{ error_timeout }}', {
        skin: 'yzc_layer' //样式类名
        , closeBtn: 0
        , btn: 'Ok'
        , title: 'Message'
      }, function () {
        window.location.reload();
      });
      return;
    }

    $.each(data_selected, function (k, v) {
      postData.product_ids.push(v.product_id);
    });

    ajax(postData, url_save, save_success_callback);
  }

  function save_success_callback(result, otherParams = null) {
    layer.closeAll();
    if (result.code == 500) {
      layer.alert(result.msg, {
        skin: 'yzc_layer' //样式类名
        , closeBtn: 0
        , btn: 'Ok'
        , title: 'Message'
      }, function () {
        window.location.reload();
      });
    } else {
      if (result.code == 200) {
        layer.alert(result.msg, {
          skin: 'yzc_layer' //样式类名
          , closeBtn: 0
          , btn: 'Ok'
          , title: 'Message'
        }, function () {
          window.location.href = '{{ url_page_back }}';
        });
      } else {
        layerMsg(result.msg, 3000);
      }
    }
  }

  //region common functions
  function trim_keyup(e) {
    lucene_objInput = $(this);
    if (e.keyCode != 38 && e.keyCode != 40 && e.keyCode != 13) {
      let im = $.trim(lucene_objInput.val());
      lucene_objInput.val(im);
    }
  }

  function layerMsg(message, time = 2000) {
    layer.msg(message, {time: time});
  }

  function ajax(data, url, successCallback, otherParams = null, errorCallback = undefined) {
    $.ajax({
      url: url,
      type: 'POST',
      dataType: 'json',
      data: data,
      beforeSend: function () {
        layer.load();
      },
      success: function (json) {
        successCallback(json, otherParams);
      },
      error: function (xhr, ajaxOptions, thrownError,) {
        if (!errorCallback === undefined) {
          alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
        }
      }
    })
  }

  //endregion
</script>