{% trans_default_category 'catalog/view/customerpartner/seller_store/home/index' %}

{{ this.title(__('店铺首页设计', {}, 'catalog/document')) }}

{# 店铺页面通用样式引用 #}
{{ css(['css/common/common.css', 'static/seller_store/home/common.css'], 1) }}
{# 模块操作页面通用样式引用 #}
{{ css(['static/customerpartner/seller_store/home/components/modules/modules_common.css']) }}
{{ css(['static/customerpartner/seller_store/home/index.css']) }}

{# vue相关引用 #}
{{ cssOrigin(['catalog/view/javascript/product/element-ui.css']) }}
{# TODO: 目前存放在 catalog/view/javascript 后期统一转移至 public/js (可能) #}
{{ jsOrigin([
  'catalog/view/javascript/product/vue.min.js',
  'catalog/view/javascript/product/element-ui.js',
  'catalog/view/javascript/product/element-ui-en.js',
  'catalog/view/javascript/product/axios.min.js'
], 1) }}

{# 页面组件引用 #}
{{ js([
  'js/common/lodash.js',
  'js/common/vue/vuex.js',
  'js/common/sortable/Sortable.min.js',
  'js/common/sortable/vuedraggable.umd.min.js',
  
  'static/customerpartner/seller_store/home/store.js',
], 1) }}

{# 拖动框架 #}
{% include 'yzcTheme/template/customerpartner/seller_store/home/components/edit_layout.twig' %}
{# 组件模板引用 #}
{% include 'yzcTheme/template/customerpartner/seller_store/home/components/modules/banner.twig' %}
{% include 'yzcTheme/template/customerpartner/seller_store/home/components/modules/complex_transactions.twig' %}
{% include 'yzcTheme/template/customerpartner/seller_store/home/components/modules/featured_products.twig' %}
{% include 'yzcTheme/template/customerpartner/seller_store/home/components/modules/product_recommend.twig' %}
{% include 'yzcTheme/template/customerpartner/seller_store/home/components/modules/product_category.twig' %}
{% include 'yzcTheme/template/customerpartner/seller_store/home/components/modules/product_ranking.twig' %}
{% include 'yzcTheme/template/customerpartner/seller_store/home/components/modules/store_profile.twig' %}
{# 产品选择弹窗 #}
{% include 'yzcTheme/template/customerpartner/seller_store/home/components/product_select_dialog.twig' %}
{# 分类选择框 #}
{% include 'yzcTheme/template/customerpartner/seller_store/components/category_select_input.twig' %}
{# 门店页面头部 #}
{% include 'yzcTheme/template/customerpartner/seller_store/home/components/store_header.twig' %}

{{ js([
    'js/common/lodash.js',
    'static/customerpartner/seller_store/util/publish_helper.js'
  ])
}}

{# 发布部分翻译 #}
{% include 'yzcTheme/template/customerpartner/seller_store/publish_config.twig' %}

{# 页面入口 #}
<div id="page-index" v-loading="loading">
  <el-container>
    {# 编辑模块部分内容 #}
    <edit-layout inline-template>
      <div>
        <edit-layout :defaultInstances="defaultInstances" @aftersave="handleAfterSave" ref="editlayout"></edit-layout>
      </div>
    </edit-layout>
  </el-container>

  {# 选择模块或初始模块弹窗 #}
  <el-dialog class="ele ele-modal template-modal" title="{{ __('请选择创建页面类型') }}" :visible="noData && !chooseTemplate"
    width="400px" :show-close="false">
    <div class="ele ele-btn btn-group">
      <div>
        <el-button class="blank-btn" @click="handleBlankBtn">{{__('创建空白页面')}}</el-button>
      </div>
      <div>
        <el-button class="template-btn" type="primary" @click="handleRecommendBtn">{{__('平台推荐页面')}}</el-button>
      </div>
    </div>
  </el-dialog>
</div>
<script>
$(window).on('resize', function() {
  if($(".active-modal.module-modal").height() > 620) {
    let height = $(".active-modal.module-modal .el-dialog__body").height() - $(".active-modal .module-modal-tip").height();
    console.log(height);
    $(".active-modal .module-edit-container").height(height);
  }
})
</script>
<script>
/** 模块公共翻译提示 */
// 局部翻译在对应的模块文件中
const MODULE_COMMON_TRANSLATE = {
  SAVE_SUCCESS: "{{__('保存成功')}}",
  DELETE_SUCCESS: "{{__('删除成功')}}"
}


const API = {
  //初始化数据
  INIT_DATA: '{{ url('customerpartner/seller_store/home/initData') }}',
  //模块编辑保存
  MODULE_SAVE: '{{ url('customerpartner/seller_store/home/moduleSave') }}',
  //搜索产品
  PRODUCT_SERACH: '{{ url('customerpartner/seller_store/home/search') }}',
}

//错误信息提示框选项
const ALERT_OPTION = {
  customClass: "ele-alert",
  showClose: false,
  duration: 2000,
  type: 'toast',
  dangerouslyUseHTMLString: true
}

// 页面入口vue对象
new Vue({
  el: '#page-index',
  delimiters: ['${', '}'], //修改变量标识，避免与twig冲突
  mounted: function () {
    this.axios = axios.create({});
    this.initPage(window.location.href.split('storetab=')[1] ? window.location.href.split('storetab=')[1] : '');
  },
  data: function () {
    return {
      axios: null, 
      unpublishedData: {}, //未发布数据
      publishedData: {}, //已发布数据
      noData: false, //未发布过数据，需要生成初始数据 
      chooseTemplate: false, //是否选择初始模块
      loading: false, //加载中
      options: {}, //模块编辑中使用的选项
      defaultInstances: [], //初始模块默认实例
    }
  },
  computed: {
  },
  methods: {
    initPage(activeTab=null) {
      this.loading = true;
      let url = API.INIT_DATA;
      let that = this;
      this.axios.post(url).then(res => {
        if(res.data.code == 200) {
          this.unpublishedData = res.data.data.unpublished;
          this.publishedData = res.data.data.published;
          store.dispatch('setOptions', res.data.data.options);
          store.dispatch('setUnpublished', this.unpublishedData);
          store.dispatch('setPublished', this.publishedData);
          if(activeTab) {
            let tab = null;
            if(activeTab == "unpublished" && this.unpublishedData.modules.length) {
              tab = 'unpublished';
            } else if (activeTab == "published" && this.publishedData.modules.length) {
              tab = 'published';
            } else {
              if (this.publishedData.modules.length) {
                tab = 'published';
              } else if(this.unpublishedData.modules.length) {
                tab = 'unpublished';
              }
            }
            store.dispatch('setActiveTab', tab)
          } else {
            if (!this.publishedData.modules || !this.publishedData.modules.length) {
              store.dispatch('setActiveTab', 'unpublished');
            } else {
              store.dispatch('setActiveTab', 'published');
            }
          }
          
          if(activeTab != "unpublished") {
            //审核驳回弹窗
            PublishHelper.instance('home').auditRejectedDialog(res.data.data.published);
          }

          if (res.data.data.unpublished.modules.length > 0 || res.data.data.published.modules.length > 0) {
            this.noData = false;
            store.dispatch('showSide', true);
            store.dispatch('showContent', true);
          } else {
            this.noData = true;
          }
        } else {
          this.$message.error(res.msg)
        }
        this.loading = false;
      }).catch(() => {
        this.loading = false;
      })
    },

    //模块选择弹窗操作
    //空弹框
    handleBlankBtn() {
      this.chooseTemplate = true;
      store.dispatch('showSide', true);
      store.dispatch('showContent', true);
    },

    //推荐弹窗
    handleRecommendBtn() {
      this.chooseTemplate = true;
      // 是否从模块开始创建
      store.dispatch('startFromTpl', true);
      store.dispatch('showSide', true);
      store.dispatch('showContent', true);
    },

    //保存后更新数据
    handleAfterSave(dontSaveDraft) {
      //this.initPage('unpublished');
      let storetab = dontSaveDraft ? 'published' : 'unpublished';
      top.location.href = window.location.href.split('#storetab=')[0] + `#storetab=${storetab}`;
      top.location.reload();
    } 
  }
})
</script>


