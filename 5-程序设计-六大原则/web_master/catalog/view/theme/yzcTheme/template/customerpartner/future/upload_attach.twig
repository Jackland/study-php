<!-- import CSS -->
<link rel="stylesheet" href="catalog/view/javascript/product/element-ui.css">
<!-- import Vue before Element -->
{#<script src="https://unpkg.com/vue/dist/vue.js"></script>#}
<script src="catalog/view/javascript/product/vue.min.js"></script>
<!-- import JavaScript -->
<script src="catalog/view/javascript/product/element-ui.js"></script>
<script src="catalog/view/javascript/product/element-ui-en.js"></script>
<!-- import axios -->
<script src="catalog/view/javascript/product/axios.min.js"></script>
<style>
  input[type="file"] {
    display: none;
  }

  .wrap_content_top_form {
    position: absolute;
    top: 0;
    display: block;
    width: 100%;
    text-align: center;
    background: 1px 1px rgba(0, 0, 0, 0.5);
    color: white;
    z-index: 1999;
  }

  .my-promise-tip {
    font-size: 12px;
    color: #bbb;
    vertical-align: middle;
  }
</style>

{{ upload_input }}

<div id="app_form" v-cloak>
  <upload-input
    :on-confirm="handlerOnConfirmMaterialManual"
    :on-change="handlerOnConfirmMaterialManual"
    :file-list="attach"
    {% if allow_types %}
      :select-range="{{ allow_types }}"
    {% endif %}
    :show-preview="function() {  return false;  }"
    ref="upload_input">
  </upload-input>
  <input type="hidden" name="attach" v-model="file_ids">
</div>
<script>
  let attach_url = '{{ attach_url }}';
  let vm_4396 = new Vue({
    el: '#app_form',
    data: function () {
      return {
        attach: [],
        file_ids: '',
      }
    },
    mounted: function () {
      let _this = this;
      axios.get(attach_url).then(function (res) {
        _this.attach = res.data
        _this.file_ids = _this.attach.map((val) => {
          return val.file_id;
        })
      })
    },
    methods: {
      handlerOnConfirmMaterialManual: function () {
        let _this = this;
        _this.attach = _this.$refs['upload_input'].getFileList();
        _this.file_ids = _this.attach.map((val) => {
          return val.file_id;
        })
        // add by kimi
        $('.el-upload-list__item-delete').css("cssText", "display:inline-block !important;");
      },
    }
  });
</script>
