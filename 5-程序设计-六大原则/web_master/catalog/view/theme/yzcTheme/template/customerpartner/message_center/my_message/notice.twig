{% trans_default_category 'catalog/view/customerpartner/message_center/my_message/notice' %}

{{ this.title('Notifications and Announcements') }}
{{ this.params('breadcrumbs', [
  {
    text: 'Message Center',
    href: 'javascript:void(0)',
  },
  {
    text: 'My Messages',
    href: 'javascript:void(0)',
  },
  'current'
]) }}

{{
this.params('pageTitle', {
  show: true,
  title: 'My Messages',
  backUrl: '',
  buttons: []
})
}}

{{ css([
  'css/common/common-ext.css',
  'static/message/message-common.css',
  'static/customerpartner/message_center/my-message-common.css'
]) }}

<link rel="stylesheet" type="text/css" href="catalog/view/javascript/bootstrap-select18/bootstrap-select.min.css">
<link rel="stylesheet" type="text/css" href="catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css">
<script type="text/javascript" src="/catalog/view/javascript/bootstrap/js/bootstrap-paginator.min.js"></script>
<script type="text/javascript" src="catalog/view/javascript/layer/layer.js"></script>

<div id="page-notice" class="msgcent-mymessage msgcent">
  {{ message_column }}
  <div id="table_content" class="tab-content mymessage-content pt-16"  style="{{ table_div_class }}">

    {# 子菜单 #}
    <div class="seller-tabs" >
      <ul class="oris-tabs">
        <li class="oris-tab-pane {% if tab == 0 %} oris-pane-active {% endif %}">
          <a class="noticeTab" onclick="tab_toggle('0')" data-toggle="tab">
            All
            {% set all_count = unread_notice_count + unread_station_letter_count %}
            {% if all_count > 0 and all_count <= 99 %}
              <span class="oris-tab-num">{{ all_count }}</span>
            {% elseif all_count > 99 %}
              <span class="oris-tab-num">99+</span>
            {% endif %}
          </a>
        </li>
        <li class="oris-tab-pane {% if tab == 1 %} oris-pane-active {% endif %}">
          <a class="noticeTab" onclick="tab_toggle('1')" data-toggle="tab">
            Marketplace Notifications
            {% if unread_notice_count > 0 and unread_notice_count <= 99 %}
              <span class="oris-tab-num">{{ unread_notice_count }}</span>
            {% elseif unread_notice_count > 99 %}
              <span class="oris-tab-num">99+</span>
            {% endif %}
          </a>
        </li>
        <li class="oris-tab-pane {% if tab == 2 %} oris-pane-active {% endif %}">
          <a class="noticeTab" onclick="tab_toggle('2')" data-toggle="tab">
            Announcements
            {% if unread_station_letter_count > 0 and unread_station_letter_count <= 99 %}
              <span class="oris-tab-num">{{ unread_station_letter_count }}</span>
            {% elseif unread_station_letter_count > 99 %}
              <span class="oris-tab-num">99+</span>
            {% endif %}
          </a>
        </li>
      </ul>
    </div>

    {# 面板 #}
    <div>
      <div id="message">
        <div class="tab-pane active">
          <div class="tab-content">
            <div>
              <div class="oris-row msgb-search-row">
                <div class="oris-col-3">
                  <label class="control-label mymessage-label" for="input-name">Subject</label>
                  <input type="text" name="filter_subject" value="{{ search.filter_subject }}"
                      placeholder="Enter subject" id="filter_subject" class="oris-input"/>                
                </div>

                {# <div class="oris-col-3 mymessage-col">
                  <label class="control-label mymessage-label" for="filter_post_time">Creation Time</label>
                  <div class="datetimepicker-range">
                    <div class="oris-ingroup datetimepicker" style="margin-left: unset">
                      <input type="text" name="date_from"
                          id="date_from"
                          data-date-format="YYYY-MM-DD 00:00:00"
                          placeholder="Pick a date..."
                          class="date oris-input"
                          value="{{ search.filter_post_time_from }}"/>
                      <span class="title">From</span>
                      <span class="oris-ingroup-date">
                        <i class="fa fa-calendar"></i>
                      </span>
                    </div>
                  </div>
                </div>

                <div class="oris-col-3 mymessage-col">
                  <label class="control-label mymessage-label" for="filter_post_time">&nbsp;</label>
                  <div class="datetimepicker-range">
                    <div class="oris-ingroup datetimepicker">
                      <input type="text" name="date_to" id="date_to"
                              data-date-format="YYYY-MM-DD 23:59:59"
                              placeholder="Pick a date..."
                              class="date oris-input"
                              value="{{ search.filter_post_time_to }}"/>
                      <span class="title">To</span>
                      <span class="oris-ingroup-date">
                        <i class="fa fa-calendar"></i>
                      </span>
                    </div>
                  </div>
                </div> #}

                <div class="oris-col-3 mymessage-col">
                  <label class="msgcent mymessage-label">Post Time</label>
                  <div class="oris-ingroup action-clear">
                    <input type="text" name="notice_creation_time" readonly class="oris-input" id="notice_creation_time"
                          placeholder="From ~ To"/>
                    <i class="giga icon-v10quxiao-01 oris-clear" data-action-range="1"></i>
                  </div>
                </div>

                <div class="oris-col-3 mymessage-col oris-select">
                  <label class="control-label mymessage-label">Status</label>
                  <select name="filter_status" id="filter_status" class="selectpicker">
                    <option value="">All</option>
                    <option value="0" {% if '0' == search.filter_read_status  %}selected{% endif %} > Unread </option>
                    <option value="1" {% if '1' == search.filter_read_status  %}selected{% endif %} > Read </option>
                  </select>
                </div>

                <div class="oris-col-3 mymessage-col oris-select">
                  <label class="control-label mymessage-label">Marked</label>
                  <select name="filter_marked" id="filter_marked" class="selectpicker">
                    <option value="">All</option>
                    <option value="0" {% if '0' == search.filter_mark_status  %}selected{% endif %} >
                      <i class="fa fa-star"></i> Unmarked</option>
                    <option value="1" {% if '1' == search.filter_mark_status  %}selected{% endif %} >
                      <i class="fa fa-star-o" style="color: yellow"></i> Marked</option>
                  </select>
                </div>

                {% if(tab == 0) %}
                <div class="oris-col-3 mymessage-col oris-select">
                  <label class="control-label mymessage-label">Type</label>
                  <select name="select_category_index" id="select_category_index"
                          class="selectpicker">
                      <option value="0" {% if 0 == search.filter_type_id %}selected{% endif %}>All</option>
                      <option value="1" {% if 1 == search.filter_type_id %}selected{% endif %}>Marketplace Notifications</option>
                      <option value="2" {% if 2 == search.filter_type_id %}selected{% endif %}>Announcements</option>
                  </select>
                </div>
                {% endif %}

                <div class="oris-col-3 mymessage-col oris-select">
                  <label class="control-label mymessage-label">{{ tab == 0 ? '&nbsp;': 'Type' }}</label>
                  <select name="filter_type_id" id="filter_type_id" class="selectpicker" {{ tab == 0 and search.filter_type_id == 0 ? 'disabled' : '' }}>
                    {% if tab == 1 or search.filter_type_id == 1 %}
                      <option value="">All</option>
                      {% for key,dic_value in platform_type %}
                        <option value="{{ key }}" {% if key == search.filter_child_type_id %}selected{% endif %}>{{ dic_value }}</option>
                      {% endfor %}
                    {% elseif tab == 2 or search.filter_type_id == 2 %}
                      <option value="">All</option>
                      {% for key,dic_value in letter_type %}
                        <option value="{{ key }}" {% if key == search.filter_child_type_id %}selected{% endif %}>{{ dic_value }}</option>
                      {% endfor %}
                    {% endif %}
                  </select>
                </div>

                <div class="oris-col-3 mymessage-col search-btn">
                  <button class="oris-button mymessage-a-btn oris-button-bigger width80" style="margin-top:24px" onclick="filterNotice();">
                    <a id="quote_filter_btn">Filter</a>
                  </button>
                  <button type="button" onclick="reset()" class="oris-button oris-button-default oris-button-bigger msg-w80">Reset</button>

                </div>

              </div>

              <div class="oris-row msgcent msg-markas__row mymessage-markas__row">
                <button class="oris-button oirs-button-default msgcent msg-search__btn" onclick="confirm_multiple_delete();return false;" disabled>Delete</button>
                <div class="oris-select msgcent msg-markas__select">
                  <select name="action_setup" id="action_setup" class="selectpicker" style="display: inline-flex" title="Mark As"
                          onchange="confirm_multiple()" disabled>
                    <option value="1"
                      {% if tab==0 %}
                        data-cnzz-event-extra="Message Center|MS_fromnotice_setup_type|Unread"
                      {% else %}
                        data-cnzz-event-extra="Message Center|MS_fromnotice_kind_setup_type|Unread"
                      {% endif %}
                    > Unread </option>
                    <option value="2"
                      {% if tab==0 %}
                        data-cnzz-event-extra="Message Center|MS_fromnotice_setup_type|Read"
                      {% else %}
                        data-cnzz-event-extra="Message Center|MS_fromnotice_kind_setup_type|Read"
                      {% endif %}
                    > Read </option>
                    <option value="3"
                      {% if tab==0 %}
                        data-cnzz-event-extra="Message Center|MS_fromnotice_setup_type|Unmarked"
                      {% else %}
                        data-cnzz-event-extra="Message Center|MS_fromnotice_kind_setup_type|Unmarked"
                      {% endif %}
                    > Unmarked </option>
                    <option value="4"
                      {% if tab==0 %}
                        data-cnzz-event-extra="Message Center|MS_fromnotice_setup_type|Marked"
                      {% else %}
                        data-cnzz-event-extra="Message Center|MS_fromnotice_kind_setup_type|Marked"
                      {% endif %}
                    > Marked </option>
                  </select>
                </div>
              </div>
            </div>

          </div>
          <form action="" method="post" enctype="multipart/form-data" id="form-template" style="margin-top: 20px">
            <div class="table-responsive msgcent msg-table__container" id="input">
              <table class="oris-table oris-table-minicheck">
                <thead>
                <tr>
                  <th width="1"><input type="checkbox"  style="margin: 0" name="all_select" onclick="$('input[name*=\'selected\']').prop('checked', this.checked);"/></th>
                  <th class="text-left">Subject</th>
                  <th class="text-left">Type</th>
                  <th class="text-center">Marked</th>
                  <th class="text-left">Post Time</th>
                </tr>
                </thead>
                <tbody>
                {% if list %}
                  {% for notice in list %}
                    <tr class="{{ notice.is_read == 1 ? '' : ' msg-table__row-unanswered ' }}">
                      <td class="text-center oris-w42">
                        <input type="checkbox" name="selected[]" style="margin: 0"  onclick="inputChecked()" value="{{ notice.notice_id }}" data-make-sure-status="{{ notice.make_sure_status }}" data-data-model="{{ notice.data_model ?? 'notice' }}"/>
                      </td>
                      <td class="text-left col-sm-6 pl-24" style="word-break: break-all">
                        {# {% if notice.is_read %}
                          <i class="gcl gclxinfengxinjian" style="color: #ddd"></i>
                        {% else %}
                          <i class="gcl gclxinfeng" style="color: red"></i>
                        {% endif %} #}
                        <div class="msg-flex">
                          {% if notice.make_sure_status and notice.p_make_sure_status != 1 %}
                            {#102075需要确认且没有确认的显示#}
                            <i class='giga icon-suoding' style="font: normal normal normal 13px/1 FontAwesome;color: #FB873A; padding-right:4px;" data-toggle="tooltip" title="{{ sure_tooltip }}" ></i>
                          {% endif %}
                          <a href="{{ url('customerpartner/message_center/notice/detail', {notice_id: notice.notice_id, type:notice.data_model}) }}"
                            {% if notice.is_read %}
                              class="read"
                            {% else %}
                              class="no-read"
                            {% endif %}
                            {% if tab==0 %}
                              data-cnzz-event="Message Center|MS_fromnotice_viewdetail"
                            {% else %}
                              data-cnzz-event="Message Center|MS_fromnotice_kind_viewdetail"
                            {% endif %}
                          ><span class="msg-subject-tdspan msg-clickable" title="{{ notice.title }}">{{ notice.title }}</span></a>
                        </div>
                      </td>
                      <td class="text-left">
                        {% if tab == 0 %}
                          {% if notice.data_model == 'station_letter' %}
                            Announcements
                          {% else %}
                            Marketplace Notifications
                          {% endif %}
                          -
                        {% endif %}
                        {{ notice.type_name }}
                      </td>
                      {#<td class="text-left">#}
                      {#    {{ text_sender_marketplace }}#}
                      {#</td>#}
                      <td class="text-center">
                        <a onclick="marked(this, {{ notice.notice_id }},'{{ notice.data_model ?? 'notice' }}')" style="color: #888"
                          {% if tab==0 %}
                            {% if notice.is_marked %}
                              data-cnzz-event="Message Center|MS_fromnotice_unmarked"
                            {% else %}
                              data-cnzz-event="Message Center|MS_fromnotice_marked"
                            {% endif %}
                          {% else %}
                            {% if notice.is_marked %}
                              data-cnzz-event="Message Center|MS_fromnotice_kind_unmarked"
                            {% else %}
                              data-cnzz-event="Message Center|MS_fromnotice_kind_marked"
                            {% endif %}
                          {% endif %}
                        >
                          {% if notice.is_marked %}
                            <i class="fa fa-star msg-markicon__active" id="marked_{{ notice.data_model ?? 'notice' }}_{{ notice.notice_id }}" style="color: #f3ab09d1"
                               data="{{ notice.is_marked }}"></i>
                          {% else %}
                            <i class="fa fa-star-o msg-markicon__default" id="marked_{{ notice.data_model ?? 'notice' }}_{{ notice.notice_id }}"
                               data="{{ notice.is_marked }}"></i>
                          {% endif %}
                        </a>
                      </td>
                      <td class="text-left">
                        {{ notice['publish_date'] }}
                      </td>
                    </tr>

                  {% endfor %}
                  </tbody>
                </table>
                {% else %}
                    </tbody>
                  </table>
                  <div class="msg-empty">
                    <div class="msg-empty-container">
                      <div class="msg-empty-icon">
                        <img src="{{ asset("image/icons/empty.png") }}"></img>
                      </div>
                      <div class="msg-empty-title">No Records Found !</div>
                    </div>
                  </div>
                {% endif %}
            </div>
          </form>
          <div class="oris-row oris-pagination">
            <ul id="bos_pagination"></ul>
          </div>
        </div>

      </div>
    </div>

  </div>
</div>

<script src="catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.js" type="text/javascript"></script>
<script type="text/javascript" src="catalog/view/javascript/bootstrap-select18/bootstrap-select.min.js"></script>

<script type="text/javascript">
  const dateRangeto = '   To   ';
  $(function(){
    $("#filter_status").selectpicker();
    $("#filter_marked").selectpicker();
    $("#select_category_index").selectpicker();
    $("#filter_type_id").selectpicker();
    $("#action_setup").selectpicker();

    initTimePicker();
  })

  //初始化日期选择控件
  var startDate = moment().subtract(1, 'y').format('YYYY-MM-DD');
  var endDate = moment().format('YYYY-MM-DD');
  var searchStartDateFrom = "{{ search.filter_post_time_from }}";
  var searchStartDateTo = "{{ search.filter_post_time_to }}";
  function initTimePicker() {
    if (searchStartDateFrom && searchStartDateTo) {
      startDate = searchStartDateFrom.substr(0, 10);
      endDate = searchStartDateTo.substr(0, 10);
      // 初始化数据
      $('#notice_creation_time').val(startDate + dateRangeto + endDate)
    }

    $('#notice_creation_time').daterangepicker({
      separator: dateRangeto,
      startDate: startDate,
      endDate: endDate,
      format: 'YYYY-MM-DD'
    }, function (start, end, label) {
      orisComponents.triggerInputClear($('#notice_creation_time'));
    });
  }

  //勾选框控制按钮是否禁用
  $("#page-notice input[name='selected[]'] ,#page-notice input[name='all_select']").on('change', function() {
    var length = $("#page-notice input[name='selected[]']:checked").length;
    if(length <= 0) {
      $(".msg-markas__row button").attr('disabled', true);
      $(".msg-markas__row select").attr('disabled', true);
    } else {
      $(".msg-markas__row button").removeAttr('disabled')
      $(".msg-markas__row select").removeAttr('disabled')
    }
    $("#action_setup").selectpicker('refresh');
  });

  var category_index = "{{ tab }}";

  function reset() {
    var url = "{{ url('customerpartner/message_center/my_message/notice') }}" + "&tab="+category_index;
    window.location.href = url;
  }

  function filterNotice(page,page_info){
    var subject = encodeURIComponent($("#filter_subject").val().trim());

    let dateArr = $('#notice_creation_time').val().split(dateRangeto);
    let date_from = dateArr[0] ? encodeURIComponent(dateArr[0] + ' 00:00:00') : '';
    let date_to = dateArr[1] ? encodeURIComponent(dateArr[1] + ' 23:59:59') : '';

    var category_index = {{ tab }};
    var status = $("#filter_status").val();
    var marked = $("#filter_marked").val();
    var filter_type_id = $("#filter_type_id").val();
    var select_category_index = $("#select_category_index").val();

    var url = "{{ url('customerpartner/message_center/my_message/notice') }}";
    if (category_index) {
      url += "&tab="+category_index;
    }
    if (select_category_index) {
      url += "&filter_type_id="+select_category_index;
    }
    if (subject) {
      url += "&filter_subject="+subject;
    }
    if (filter_type_id) {
      url += "&filter_child_type_id="+filter_type_id;
    }
    if (date_from) {
      url += "&filter_post_time_from="+date_from;
    }
    if (date_to) {
      url += "&filter_post_time_to="+date_to;
    }
    if (status) {
      url += "&filter_read_status="+status;
    }
    if (marked) {
      url += "&filter_mark_status="+marked;
    }
    if (page){
      url += "&page="+page;
    }
    if (page_info){
      for (let i in page_info){
        url += "&"+i+"="+page_info[i];
      }
    }

    location.href=url;
  }

  function tab_toggle(categoryIndex) {
    window.location = "{{ url('customerpartner/message_center/my_message/notice') }}&tab=" + categoryIndex;
  }
  //分页
  $('#bos_pagination').bootstrapPaginator({
    /*当前使用的是3版本的bootstrap*/
    bootstrapMajorVersion: 3,
    /*配置的字体大小是小号*/
    size: 'normal',
    /*当前页*/
    currentPage: {{ paginator.getPage() }},
    /*一共多少页*/
    totalPages: {{ max(paginator.getPageCount(), 1) }},
    /*页面上最多显示几个含数字的分页按钮*/
    numberOfPages: 5,
    pageRange: [10, 20, 30, 50, 100],
    total: {{ paginator.getTotalCount() }},
    rowsOfPage: {{ paginator.getPageSize() }},
    onPageClicked: function (event, originalEvent, type, page) {
      filterNotice(page,originalEvent['page_info'] || {});
    }
  });

  function marked(domEle, notice_id,dataModel) {
    var is_marked = $("#marked_"+dataModel+"_"+notice_id).attr('data');
    var param = {notices:[{id:notice_id, type:dataModel}],is_marked:is_marked == 0 ? 1 : 0};
    $.ajax({
      url: "{{ url('customerpartner/message_center/notice/handleMarked') }}",
      type: 'post',
      data: param,
      dataType: 'json',
      success: function (json) {
        if (json){
          if (0 == is_marked){
            $("#marked_"+dataModel+"_"+notice_id).attr('data', 1).attr('class', 'fa fa-star msg-markicon__active').attr('style', 'color: #f3ab09d1');
            if (category_index == "0") {
              $(domEle).attr("data-cnzz-event", "Message Center|MS_fromnotice_unmarked");
            } else {
              $(domEle).attr("data-cnzz-event", "Message Center|MS_fromnotice_kind_unmarked");
            }
          }else {
            $("#marked_"+dataModel+"_"+notice_id).attr('data', 0).attr('class', 'fa fa-star-o msg-markicon__default').attr('style', 'color: none');
            if (category_index == "0") {
              $(domEle).attr("data-cnzz-event", "Message Center|MS_fromnotice_marked");
            } else {
              $(domEle).attr("data-cnzz-event", "Message Center|MS_fromnotice_kind_marked");
            }
          }

        }else {
          $.toast({
            heading: false,
            text: 'Please try again later',
            position: 'top-center',
            showHideTransition: 'fade',
            icon: 'error',
            hideAfter: 3000,
            allowToastClose: false,
            loader: false,
          });
        }
      }
    });

  }


  $('#date_from').datetimepicker({
    pickDate: true,
    pickTime: false,
    format: 'YYYY-MM-DD'
  });
  $('#date_to').datetimepicker({
    pickDate: true,
    pickTime: false,
    format: 'YYYY-MM-DD'
  });

  function confirm_multiple_delete() {
    var length = $("input[name='selected[]']:checked").length;
    if (length <= 0) {
      layer.alert('{{ error_select_one }}', {
        title: 'Message',
        btn : 'OK',
        skin: 'oris-layer', //样式类名
        closeBtn: 0
      });
    } else {
      layer.confirm('Are you sure you want to delete these messages?', {
          title: 'Message',
          skin: 'oris-layer', //样式类名
          btn: ['Yes', 'No']
        }, //按钮
        function () {
          var notices = [];
          $("input[name='selected[]']:checked").each(function () {
            let noticeId = Number($(this).val());
            let dataModel = $(this).data('data-model');
            notices.push({id: noticeId, type: dataModel})
          });
          layer.closeAll();
          $.ajax({
            url: "{{ url('customerpartner/message_center/notice/handleDeleted') }}",
            type: 'post',
            data: {notices: notices},
            dataType: 'json',
            async : true,
            success: function (json) {
              filterNotice();
            }
          });
        });
    }
  }

  function confirm_multiple() {
    var type = $("#action_setup").val();
    var length = $("input[name='selected[]']:checked").length;
    if (length <= 0) {
      layer.alert('Please select at least one message.', {
        title: 'Message',
        btn: 'OK',
        skin: 'oris-layer', //样式类名
        closeBtn: 0
      });
      $("#action_setup").val('');

    } else {
      var notices = [];
      var sureNotices = [];
      var selectMakeSure = false;
      $("input[name='selected[]']:checked").each(function () {
        let noticeId = Number($(this).val());
        let dataModel = $(this).data('data-model');
        notices.push({id: noticeId, type: dataModel})
        //判断这条信息是否要确认
        let make_sure_status = $(this).data('make-sure-status');
        if (make_sure_status && dataModel == 'notice') {
          sureNotices.push({id: noticeId, type: dataModel})
          //需要确认
          selectMakeSure = true;
        }
      });
      if(type == 2 && selectMakeSure){
        //批量设置已读且需要确认的
        layer.confirm('Marking messages that require confirmation as ‘read’ will result in messages being automatically marked as confirmed.', {
            title: 'Confirm',
            skin: 'oris-layer', //样式类名
            btn: ['Yes', 'No']
          }, //按钮
          function () {
            layer.closeAll();
            postSetup(type, notices, sureNotices);
          });
      } else {
        postSetup(type, notices);
      }
    }

  }

  //提交请求
  function postSetup(type,notices, sureNotices = []) {
    let eventInfo = $("#action_setup option:selected").attr('data-cnzz-event-extra');
    let eventArr = (typeof eventInfo =="string") ? eventInfo.split('|') : [];
    if(window.CNZZ && eventArr.length >=2){
      window.CNZZ.triggerEvent(eventArr[0], eventArr[1], eventArr[2]);
    }

    if (type == 1 || type == 2) {
      $.ajax({
        url: "{{ url('customerpartner/message_center/notice/handleRead') }}",
        type: 'post',
        data: {notices: notices, is_read: type == 1 ? 0 : 1},
        dataType: 'json',
        success: function (json) {
          let type_name = type == 1 ? 'Unread' : 'Read';
          if (json.code == 200) {
            if (sureNotices.length > 0 && type == 2) {
              $.ajax({
                url: '{{ url("customerpartner/message_center/notice/handleSure") }}',
                data: {notices: sureNotices },
                dataType: 'json',
                type: "post",
                success: function (response) {}
              });
            }

            $.toast({
              heading: false,
              text: type_name + ' successfully.',
              position: 'top-center',
              showHideTransition: 'fade',
              icon: 'success',
              hideAfter: 3000,
              allowToastClose: false,
              loader: false,
              afterHidden: function () {
                filterNotice();
              }
            });
          } else {
            $.toast({
              heading: false,
              text: type_name + ' failed.',
              position: 'top-center',
              showHideTransition: 'fade',
              icon: 'error',
              hideAfter: 3000,
              allowToastClose: false,
              loader: false,
            });
          }
        }
      });
    }
    if (type == 3 || type == 4) {
      $.ajax({
        url: "{{ url('customerpartner/message_center/notice/handleMarked') }}",
        type: 'post',
        data: {notices: notices, is_marked: type == 3 ? 0 : 1},
        dataType: 'json',
        success: function (json) {
          let type_name = type == 3 ? 'Unmarked' : 'Marked';
          if (json.code == 200) {
            $.toast({
              heading: false,
              text: type_name + ' successfully.',
              position: 'top-center',
              showHideTransition: 'fade',
              icon: 'success',
              hideAfter: 3000,
              allowToastClose: false,
              loader: false,
              afterHidden: function () {
                filterNotice();
              }
            });
          } else {
            $.toast({
              heading: false,
              text: type_name + ' failed.',
              position: 'top-center',
              showHideTransition: 'fade',
              icon: 'error',
              hideAfter: 3000,
              allowToastClose: false,
              loader: false,
            });
          }
        }
      });
    }
  }

  function inputChecked() {
    if ($('input[name="selected[]"]').length == $('input[name="selected[]"]:checked').length) {
      $('input[name=all_select]').prop('checked', true);
    } else {
      $('input[name=all_select]').prop('checked', false);
    }
  }

</script>

<script type="text/javascript">
  //类型联级选择器
  $('#select_category_index').change(function() {
    var platformTypeList = JSON.parse('{{ platform_type | json_encode() }}');
    var letterTypeList = JSON.parse('{{ letter_type | json_encode() }}');
    var selectVal = $(this).val();
    var parentSelect = $("#filter_type_id");
    var typeList = [];
    parentSelect.html('');
    if (selectVal == 0) {
      parentSelect.attr("disabled","disabled");
    } else {
      if (selectVal == 1) {
        typeList = platformTypeList;
      } else {
        typeList = letterTypeList;
      }
      parentSelect.removeAttr("disabled");
      parentSelect.append('<option value="">All</option>')
      $.each(typeList, function (key, value) {
        parentSelect.append(' <option value="' + key + '">' + value + '</option>')
      })
    }
    $("#filter_type_id").selectpicker('refresh');
  })
</script>