<script src="catalog/view/javascript/jquery/jquery-2.1.1.min.js" type="text/javascript"></script>
<link href="catalog/view/javascript/bootstrap/css/bootstrap.min.css" rel="stylesheet" media="screen"/>
<script src="catalog/view/javascript/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
{#<link href="catalog/view/javascript/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css"/>#}
{#<link href="catalog/view/theme/yzcTheme/stylesheet/font_demo/iconfont.css" rel="stylesheet" type="text/css"/>#}
{#<link href="catalog/view/theme/yzcTheme/stylesheet/fonts.googleapis.com_open+sans.css" rel="stylesheet" type="text/css"/>#}
<link href="catalog/view/theme/yzcTheme/stylesheet/stylesheet.css?v={{ app_version }}" rel="stylesheet">
<script type="text/javascript" src="catalog/view/javascript/diyUpload/js/vue.min.js"></script>
{#<link rel="icon" href="data:;base64,=">#}
{#<script type="text/javascript" src="catalog/view/javascript/layui/layui.all.js"></script>#}
<style>



  .upload_warp_img_div_del {
    position: absolute;
    top: 6px;
    width: 16px;
    right: 4px;
  }

  .upload_warp_img_div_top {
    position: absolute;
    top: 0;
    width: 100%;
    height: 30px;
    background-color: rgba(0, 0, 0, 0.4);
    line-height: 30px;
    text-align: left;
    color: #fff;
    font-size: 12px;
    text-indent: 4px;
  }

  .upload_warp_img_div_text {
    white-space: nowrap;
    width: 80%;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .upload_warp_img_div img {
    max-width: 100%;
    max-height: 100%;
    vertical-align: middle;
  }

  .upload_warp_img_div {
    position: relative;
    height: 100px;
    width: 120px;
    border: 1px solid #ccc;
    margin: 0px 30px 10px 0px;
    float: left;
    line-height: 100px;
    display: table-cell;
    text-align: center;
    background-color: #eee;
    cursor: pointer;
  }

  .upload_warp_img {
    border-top: 1px solid #D2D2D2;
    padding: 14px 0 0 14px;
    overflow: hidden
  }

  .upload_warp_left img {
    margin-top: 35px;
  }

  .upload_warp {
    margin: 10px;
  }

  .upload {
    border: 1px solid #ccc;
    background-color: #fff;
    width: 100%;
    box-shadow: 0px 1px 0px #ccc;
    border-radius: 4px;
  }

  .hello {
    width: 100%;
    /*text-align: center;*/
  }

</style>


<div class="modal-body" >

      <div style="width:96%;margin: 0 auto;float: left;">
        <div style="float: left;width: 100%;">
          {% for key,value in details_info %}
            <div style="float: left;width: 100%;text-align: center;margin-left: 2%">
              <div style="background-color: #eee;width: 100%;font-size:12px;line-height: 35px;height: 35px;">
                {{ value.platform_sku }}&nbsp;&nbsp;-&nbsp;&nbsp;{{ value.b2b_sku }}&nbsp;&nbsp;-&nbsp;&nbsp;{{ value.name }}
              </div>
            </div>
            <div style="float: left;width: 100%;text-align:left;margin-left: 2%;margin-top: 10px;">
              <span style="font-size: 12px;">{{ text_rejected_reason }}:</span>
              <div style="word-wrap: break-word;word-break: break-all;overflow: hidden;margin-top: 5px;">{{ value.memo }}</div>
              <div style="margin-top: 5px;text-align: right">{{ value.time }}</div>
            </div>
          {% endfor %}
          <div  id="commit"  style="float: left;width: 100%;text-align:left;margin-left: 2%;padding-top: 10px;border-top: 1px solid #eee;display: none">
            <span><span style="color: red">*</span>Comments</span>
            <div class="form-group" style="margin-top: 10px;">
              <textarea name="comments"   style="resize: none;"  id="comments" class="form-control" rows="3" maxlength="200"   ></textarea>
              <i style="position: relative;top:-20px;float: right;right:10px;"><span class="count-change">0</span>/200</i>
            </div>
            <span style="margin-top: 5px ;">Attach Images</span>
            <div class="fileDiv" style="margin-top: 10px;">
              <div id="appFile">
                <div class="hello">
                  <div class="upload">
                    <div class="upload_warp">
                      <a style="margin-right: 10px;" class="btn btn-success" @click="fileClick">Upload
                        File</a>
                      ${imgList.length}$ files are selected, ${bytesToSize(this.size)}$ in total.
                    </div>
                    <input @change="fileChange($event)" type="file" id="upload_file"
                           name="upload_image" multiple
                           style="display: none" accept="image/*"/>
                    <div class="upload_warp_img">
                      <div class="upload_warp_img_div" v-for="(item,index) of imgList">
                        <div class="upload_warp_img_div_top">
                          <div class="upload_warp_img_div_text">
                            ${item.file.name}$
                          </div>
                          <img src="catalog/view/theme/yzcTheme/stylesheet/diyUpload/images/del.png"
                               class="upload_warp_img_div_del" @click="fileDel(index)">
                        </div>
                        <img :src="item.file.src" >
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <form></form>

</div>
<div class="modal-footer" style="width:100%;float: right;text-align: center;margin-top: 30px;">
  <div >
    <button type="button" title="Submit again by supplying comments and attachments without changing original data."
            class="btn btn-primary" onclick="resubmit(this)"  data-toggle="tooltip" style="margin-right: 10px;"
    >
      Resubmit
    </button>
    <button type="button" id="submit_button" onclick="submit('{{ id }}')"; class="btn btn-primary"  style="margin-right: 10px;display: none" >Submit</button>
    <button type="button" id="edit_button" class="btn btn-default" onclick="getEditInfo('{{ id }}',this)" style="margin-left: 10px;">Edit</button>
  </div>
</div>

<script>
  var appFileArray = [];
  $(function () {
//    $('[data-toggle="tooltip"]').tooltip();
    var text = $('#comments').val();
    var len = text.length;
    $('#comments').next().find('span').html(len);
    $('textarea').keyup(function () {
      var text = $(this).val();
      len = text.length;
      if (len > 200) {
        return false;
      }
      $(this).next().find('span').html(len);
    })

  });
  function submit(id) {
      $('#submit_button').attr('disabled',true);
      var len = $('textarea').val().length;
      if(len == 0){
        window.parent.layerMsg('Comments can not be left blank',3000);
        $('#submit_button').attr('disabled',false);
        return false;
      }
      var fileList = [];
      var formData = new FormData();
      for (var j = 0; j < appFileArray[0].imgList.length; j++) {
        fileList.push(appFileArray[0].imgList[j].file);
      }
      fileList.forEach(function (file) {
        formData.append("files[]", file, file.name);
      });
      formData.append('memo', $('textarea').val());
      formData.append('mapping_id', id);
      $.ajax({
        url: 'index.php?route=account/item_code_mapping/mappingHistoryResubmit',
        type: 'post',
        data: formData,
        processData: false,
        contentType: false,
        beforeSend: function () {
          window.parent.layer.load();
        },
        success: function (json) {
            window.parent.layer.closeAll('loading');
            window.parent.layerMsg(json.msg, 3000);
            if(json['code'] == 1){
              var index = parent.layer.getFrameIndex(window.name);
              parent.layer.close(index);
              window.parent.initHistory();
            }

        },
        error: function (xhr, ajaxOptions, thrownError) {
          alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
        }
      });



  }
  function resubmit(obj) {
      $(obj).hide();
      $('#submit_button').show();
      $('#edit_button').hide();
      $('#commit').show();
  }
  function getEditInfo(id,obj) {
    $(obj).attr('disabled',true);
    var index = parent.layer.getFrameIndex(window.name);
    parent.layer.close(index);
    window.parent.getCodeChooseByReject(id);
  }
  var appFile = new Vue({
    el: '#appFile',
    delimiters: ['${', '}$'],
    data() {
      return {
        imgList: [],
        size: 0
      }
    },
    methods: {
      fileClick() {
        document.getElementById('upload_file').click()
      },
      fileChange(el) {
        if (!el.target.files[0].size) return;
        this.fileList(el.target);
        el.target.value = ''
      },
      fileList(fileList) {
        let files = fileList.files;
        if ((this.imgList.length + files.length) > 20) {
          window.parent.layer.alert('The number of uploaded files cannot exceed 20.', {
            title: 'Message',
            btn : 'OK',
            skin: 'yzc_layer' //样式类名
            ,closeBtn: 0
          });
          return;
        }
        for (let i = 0; i < files.length; i++) {
          if (i == 20 || this.imgList.length == 20) {
            return;
          }
          //判断是否为文件夹
          if (files[i].type != '') {
            if (files[i].type.indexOf('image') == -1) {
              window.parent.layer.alert('Please upload image type files!', {
                title: 'Message',
                btn : 'OK',
                skin: 'yzc_layer' //样式类名
                ,closeBtn: 0
              });
            } else {
              if (this.imgList.length > 20) {
                window.parent.layer.alert('The number of uploaded files cannot exceed 20.', {
                  title: 'Message',
                  btn : 'OK',
                  skin: 'yzc_layer' //样式类名
                  ,closeBtn: 0
                });
              } else {
                this.fileAdd(files[i]);
              }
            }
          } else {
            //文件夹处理
            if (fileList.items == undefined) {
              window.parent.layer.alert('Upload file type is incorrect!', {
                title: 'Message',
                btn : 'OK',
                skin: 'yzc_layer' //样式类名
                ,closeBtn: 0
              });
            } else {
              if (this.imgList.length > 20) {
                window.parent.layer.alert('The number of uploaded files cannot exceed 20.', {
                  title: 'Message',
                  btn : 'OK',
                  skin: 'yzc_layer' //样式类名
                  ,closeBtn: 0
                });
              } else {
                this.folders(fileList.items[i]);
              }
            }
          }
        }
      },
      //文件夹处理
      folders(files) {
        let _this = this;
        //判断是否为原生file
        if (files.kind) {
          files = files.webkitGetAsEntry();
        }
        files.createReader().readEntries(function (file) {
          for (let i = 0; i < file.length; i++) {
            if (file[i].isFile) {
              _this.foldersAdd(file[i]);
            } else {
              _this.folders(file[i]);
            }
          }
        })
      },
      foldersAdd(entry) {
        let _this = this;
        entry.file(function (file) {
          _this.fileAdd(file)
        })
      },
      fileAdd(file) {
        //总大小
        this.size = this.size + file.size;
        //判断是否为图片文件
        if (file.type.indexOf('image') == -1) {
          file.src = 'catalog/view/theme/yzcTheme/stylesheet/diyUpload/images/wenjian.png';
          this.imgList.push({
            file
          });
        } else {
          let reader = new FileReader();
          reader.vue = this;
          reader.readAsDataURL(file);
          reader.onload = function () {
            file.src = this.result;
            this.vue.imgList.push({
              file
            });
          }
        }
      },
      fileDel(index) {
        this.size = this.size - this.imgList[index].file.size;//总大小
        this.imgList.splice(index, 1);
      },
      bytesToSize(bytes) {
        if (bytes === 0) return '0 B';
        let k = 1000, // or 1024
          sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
          i = Math.floor(Math.log(bytes) / Math.log(k));
        return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];
      },
      dragenter(el) {
        el.stopPropagation();
        el.preventDefault();
      },
      dragover(el) {
        el.stopPropagation();
        el.preventDefault();
      },
      drop(el) {
        el.stopPropagation();
        el.preventDefault();
        this.fileList(el.dataTransfer);
      }
    }
  });
  appFileArray.push(appFile);
</script>
