<div class="page_inactive msgcent-mymessage msgcent">
  <div class="oris-row">
    <div class="oris-col-3 mymessage-col">
      <label for="input-filter-buyer_name_inactive" class="control-label mymessage-label">{{ f_column_name_or_buyer_number }}</label>
      <input type="text" placeholder="{{ f_column_name_or_buyer_number }}" id="input-filter-buyer_name_inactive"
              class="form-control oris-input"/>
    </div>
    <div class="oris-col-3 mymessage-col search-button mt-24">
      <button type="button" onclick="filter_inactive(this);" class="oris-button oris-button-bigger">
        Filter
      </button>
      <button type="button" style="margin-left:15px" onclick="reset_filter_inactive(this);" class="oris-button oris-button-bigger oris-button-default" data-toggle="tooltip"  data-original-title="Reset">
        Reset</button>
    </div>
  </div>
</div>

{#批量操作按钮#}
<div class="oris-row msgcent">
  <button type="button" onclick="func_batch_recovery(this)" class="oris-button oris-button-outline mb-24 mt-12">
  <!-- <i class="fa fa-recycle"> </i> -->
    {{ text_batch_recovery }}
  </button>
</div>

<table class="table table-striped table-bordered table-hover oris-table" id="table_inactive">

</table>

<script>
  let url_page_inactive = '{{ url_page_inactive }}';
  let url_list_inactive = '{{ url_list_inactive }}';
  let can_show_contacts_phone = '{{ can_show_contacts_phone }}';

  let url_recovery = '{{ url_recovery }}';
  let url_batch_recovery = '{{ url_batch_recovery }}';
  $(function () {
    init_table_inactive();
  });

  function filter_inactive(_this) {
    $("#table_inactive").bootstrapTable('refreshOptions', {
      pageNumber: 1,
    });
  }

  function reset_filter_inactive(_this) {
    $('#pane-inactive_page').load(url_page_inactive);
  }

  function query_params_inactive(params) {
    let query_params = {};
    let filter_name = $(".page_inactive #input-filter-buyer_name_inactive").val().trim();

    filter_name && (query_params.filter_name = filter_name);
    query_params.pageSize = params.limit;
    query_params.page = parseInt((params.offset + 1) / params.limit + 1);
    return query_params;
  }

  function init_table_inactive() {
    $("#table_inactive").bootstrapTable({
      url: url_list_inactive,
      sidePagination: "server",
      queryParams: query_params_inactive,
      striped: true, // 是否显示行间隔色
      uniqueId: "id",
      idField: "num",
      pagination: true, // 是否分页
      pageSize: "10",
      pageList: [20, 30, 50],
      sortable: true, // 是否启用排序
      selectItemName: 'select_inactive',
      columns: [
        {
          field: '',
          title: '',
          halign: 'center',
          valign: 'center',
          align: 'center',
          checkbox: true,
        },
        {
          field: 'num',
          title: 'No.',
          halign: 'center',
          valign: 'center',
          align: 'center',
        },
        {
          field: 'nickname',
          title: '{{ column_name }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
          width: '200px',
          formatter: function (value, row, index) {
            // let html = row.nickname + '(' + row.user_number + ')';
              let html = '<span class="user_portrait" data-user_customer_id="'+row.buyer_id+'">'+row.nickname + '(' + row.user_number + ')'+'</span>';
            html += '<span>' +
              '<img data-toggle="tooltip" style="padding-left: 1px"' +
              ' src="' + (row.is_home_pickup ? img_home_pickup : img_drop_shipping) + '"' +
              ' data-original-title="' + (row.is_home_pickup ? tip_home_pickup_logo : tip_drop_shipping_logo) + '">' +
              '</span>';
            return html + row.ex_vat;
          }
        },
        {
          field: 'number_of_transaction',
          title: '{{ column_number_of_transaction }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
        },
        {
          field: 'money_of_transaction',
          title: '{{ column_money_of_transaction }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
        },
        {
          field: 'last_transaction_time',
          title: '{{ column_column_last_transaction_time }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
          formatter: function (value,row,index){
            if (value == '0000-01-01 00:00:00') {
              return 'N/A';
            }
            return value;
          }
        },
        {
          field: 'remark',
          title: '{{ column_remark }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
          width: '300px',
        },
        {
          field: '',
          title: '{{ column_action }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
          class: 'action',
          //width: '90px',
          formatter: function (value, row, index) {
            let active_html = '';
            active_html += '<a onclick="func_recovery(' + index + ',' + row.id + ',this);" data-toggle="tooltip" title="{{ tip_btn_recovery }}"' +
              ' class="btn-text"><i class="fa fa-recycle"></i></a>';
            return active_html;
          }
        }
      ],
      // maintainSelected: true,
      detailView: true,
      detailViewIcon: false,
      detailViewByClick: false,
      detailFormatter: function (index, row, element) {
        return render_buyers(row.id);
      },
      onLoadSuccess: function (data) {

      },
      formatNoMatches: function () {
        return ` <div class="msg-empty">
          <div class="msg-empty-container">
            <div class="msg-empty-icon">
              <img src="{{ asset("image/icons/empty.png") }}"></img>
            </div>
            <div class="msg-empty-title">No Records Found !</div>
          </div>
        </div>`;
      }
    });
  }

  function func_recovery(index, id, _this) {
    if (!id) {
      layerMsg('{{ error_common }}', 2000);
      return false;
    }

    layer.confirm('{{ alert_recovery }}',
      {skin: 'yzc_layer',icon: 3, title: 'Message', btn:['Yes','No']},
      function (index) {
        ajax({id: id}, url_recovery, cb_recovery);
      }
    );
  }

  function func_batch_recovery(_this) {
    let selected_rows = $("#table_inactive").bootstrapTable('getSelections');
    let ids = [];
    $.each(selected_rows, function (k, v) {
      ids[k] = v.id;
    });
    if (ids.length <= 0) {
      layerMsg('{{ error_choose_checkboxes }}', 1500);
      return;
    }

    layer.confirm('{{ alert_batch_recovery }}',
      {skin: 'yzc_layer',icon: 3, title: 'Message', btn:['Yes','No']},
      function (index) {
        ajax({ids: ids}, url_batch_recovery, cb_recovery);
      }
    );
  }

  function cb_recovery(response, otherParams) {
    layer.closeAll();
    layerMsg(response.msg, 1500);
    refresh_table('table_inactive');
  }

</script>

<style>
  .bootstrap-table{
    padding-bottom: 40px;
  }

  .btn-text:hover {
    cursor: pointer;
  }

  {# vat 覆盖样式 #}
  .bootstrap-table .fixed-table-container .fixed-table-body {
    overflow-x: initial;
    overflow-y: initial;
  }

</style>