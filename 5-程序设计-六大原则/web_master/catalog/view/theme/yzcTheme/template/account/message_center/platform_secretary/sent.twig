{{ js(['js/common/orisComponents.js']) }}

{{ css([
  'css/common/common.css',
  'css/common/common-ext.css',
  'static/message/message-common.css',
  'static/message/buyer-message-common.css',
  'static/customerpartner/message_center/my-message-common.css',
]) }}

<link rel="stylesheet" type="text/css" href="catalog/view/javascript/bootstrap-select18/bootstrap-select.min.css">
<link rel="stylesheet" type="text/css" href="catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css">

<div id="page-sent" class="msgcent-mymessage">
  {# 搜索栏部分 #}
  <div class="search-container">
    <div class="oris-row msgcent msgb-search-row">
      <div class="oris-col-3 mymessage-col">
        <label class="msgcent msg-search__label">Subject</label>
        <input type="text" placeholder="Enter Subject" class="oris-input" id="filter-subject" value="{{ search.filter_subject }}" autocomplete="off"/>
      </div>
      <div class="oris-col-3 oris-select mymessage-col">
        <label class="msgcent msg-search__label">Marked</label>
        <select id="marked" class="selectpicker" data-dropup-auto=false>
          <option value="">All</option>
          <option value="1" {% if '1' == search.filter_mark_status %}selected{% endif %}>Marked</option>
          <option value="0" {% if '0' == search.filter_mark_status %}selected{% endif %}>Unmarked</option>
        </select>
      </div>
      <div class="oris-col-3 mymessage-col">
        <label class="msgcent mymessage-label">Post Time</label>
        <div class="oris-ingroup action-clear">
          <input type="text" name="creation_time" readonly class="oris-input" id="creation_time"
                placeholder="From ~ To"/>
          <i class="giga icon-v10quxiao-01 oris-clear" data-action-range="1"></i>
        </div>
      </div>
      <div class="oris-col-3 mymessage-col mt-24">
        <button class="oris-button msgcent msg-search__btn" onclick="filter()">Filter</button>
        <button class="oris-button msgcent msg-search__btn oris-button-default msg-w80" onclick="reset()">Reset</button>
      </div>
    </div>
    <div class="oris-row msgcent msg-markas__row mymessage-markas__row">
      <button class="oris-button oirs-button-default msgcent msg-search__btn" onclick="handleDelete()" disabled>Delete</button>
      <div class="oris-select msgcent msg-markas__select">
        <select id="markas" class="selectpicker" onchange="handleSetup()" title="Mark As" disabled data-dropup-auto=false>
          <option value="3">Unmarked</option>
          <option value="4">Marked</option>
        </select>
      </div>
    </div>
  </div>
  {# 列表数据部分 #}
  <div class="msgcent msg-table__container" style="margin-top: 20px;">
    <table class="oris-table oris-table-minicheck">
      <thead>
      <tr>
        <th class="oris-w42">
          <input type="checkbox" name="all_select" onclick="$('input[name*=\'selected\']').prop('checked', this.checked);"/>
        </th>
        <th class="text-left oris-w400">Subject</th>
        <th class="text-left" style="width: 160px">Recipient</th>
        <th>Marked</th>
        <th class="text-left" style="width: 170px">Post Time</th>
      </tr>
      </thead>
      <tbody>
      {# 样式逻辑： 1.未读状态加粗，其余状态正常; 2.已回复状态绿色圆点，其他状态均为红色圆点; 3.绿色回复图标的显示和绿色圆点保持一致 #}
      {# tr class 控制行内加粗或者绿点显示 #}
      {% if list %}
        {% for message in list %}
          <tr>
            <td class="oris-w42">
              <input type="checkbox" name="selected[]" style="margin: 0" onclick="inputChecked()" value="{{ message.id }}"/>
            </td>
            <td class="text-left">
              <a href="{{ url('account/message_center/message/detail', {msg_id: message.msg_id}) }}">
                <span class="msg-subject-tdspan">{{ message.subject }}</span>
              </a>
            </td>
            <td class="text-left">Giga Help Desk</td>
            <td>
              <a onclick="marked(this, {{ message.id }})" style="color: #888">
                {% if message.is_marked %}
                  <i class="fa fa-star msg-markicon__active" id="marked_{{ message.id }}" data="{{ message.is_marked }}"></i>
                {% else %}
                  <i class="fa fa-star-o msg-markicon__default" id="marked_{{ message.id }}" data="{{ message.is_marked }}"></i>
                {% endif %}
              </a>
            </td>
            <td class="text-left">{{ message.post_time }}</td>
          </tr>
        {% endfor %}
        </tbody>
      </table>
      {% else %}
        </tbody>
      </table>
      <div class="msg-empty">
        <div class="msg-empty-container">
          <div class="msg-empty-icon">
            <img src="{{ asset("image/icons/empty.png") }}"></img>
          </div>
          <div class="msg-empty-title">No Records Found !</div>
        </div>
      </div>
      {% endif %}
  </div>
  <div class="oris-row oris-pagination">
    <ul id="pagination"></ul>
  </div>
</div>

<script src="catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.js" type="text/javascript"></script>
<script type="text/javascript" src="catalog/view/javascript/bootstrap-select18/bootstrap-select.min.js"></script>

<script>
  const dateRangeto = ' ~ ';
  $(function () {
    //选择框初始化
    $('#page-sent #marked').selectpicker();
    $('#page-sent #markas').selectpicker();

    //初始化分页
    initPagination();
    initTimePicker();
    orisComponents.initClearInputIcon();
    orisComponents.clearInputIcon();
  });

  function initPagination() {
    //需要返回分页数据
    $('#page-sent #pagination').bootstrapPaginator({
      bootstrapMajorVersion: 3,
      size: 'normal',
      currentPage: {{ paginator.getPage() }},
      /*一共多少页*/
      totalPages: {{ max(paginator.getPageCount(), 1) }},
      /*页面上最多显示几个含数字的分页按钮*/
      numberOfPages: 5,
      pageRange: [10, 20, 30, 50, 100],
      rowsOfPage: {{ paginator.getPageSize()}},
      total: {{ paginator.getTotalCount() }},
      onPageClicked: function (event, originalEvent, type, page) {
        block.blockUI();
        $('#tab-content').load('{{ paginator.getUrlWithNoPage() }}&page=' + page, function () {
          block.unBlockUI();
        });
      }
    });
  }

  function marked(domEle, message_id) {
    var is_marked = $("#page-sent #marked_" + message_id).attr('data');
    var param = {tab_type: 'sent', ids: message_id, is_marked: is_marked == 0 ? 1 : 0};
    $.ajax({
      url: "{{ url('account/message_center/message/handleMarked') }}",
      type: 'post',
      data: param,
      dataType: 'json',
      success: function (json) {
        if (json.code == 200) {
          if (0 == is_marked) {
            $("#page-sent #marked_" + message_id).attr('data', 1).attr('class', 'fa fa-star msg-markicon__active').attr('style', 'color: #f3ab09d1');
            $(domEle).attr("data-cnzz-event", "Message Center|MS_fromseller_unmarked");
          } else {
            $("#page-sent #marked_" + message_id).attr('data', 0).attr('class', 'fa fa-star-o msg-markicon__default').attr('style', 'color: none');
            $(domEle).attr("data-cnzz-event", "Message Center|MS_fromseller_marked");
          }
        } else {
          $.toast({
            heading: false,
            text: 'Please try again later',
            position: 'top-center',
            showHideTransition: 'fade',
            icon: 'error',
            hideAfter: 3000,
            allowToastClose: false,
            loader: false,
          });
        }
      }
    });
  }

  function handleSetup() {
    var length = $("#page-sent input[name='selected[]']:checked").length;
    if (length <= 0) {
      layer.alert('Please select at least one message.', {
        title: 'Message',
        btn: 'OK',
        skin: 'yzc_layer', //样式类名
        closeBtn: 0
      });
      $("#markas").val('');
      return false;
    }

    var ids = '';
    $("#page-sent input[name='selected[]']:checked").each(function () {
      ids += Number($(this).val()) + ',';
    });

    var type = 'sent';
    var status = $("#page-sent #markas").val();

    /*let is_all_select = $('#page-sent input[name=all_select]').is(':checked') ? 1 : 0;
    if (is_all_select) {
      batchSetUpCurrentMsg(type, status)
      return;
    }*/

    switch (status) {
      case '3':
        batchMarked({tab_type: type, ids: ids, is_marked: 0})
        break;
      case '4':
        batchMarked({tab_type: type, ids: ids, is_marked: 1})
        break;
    }
  }

  function batchSetUpCurrentMsg(tab_type, setup_type, exclude_ids = '') {
    if (!setup_type) {
      return ;
    }

    var url = "{{ url('account/message_center/message/handleAllData') }}&" + getFilter();

    $.ajax({
      url: url,
      type: 'post',
      data: {
        tab_type: tab_type,
        setup_type: setup_type,
        exclude_ids: exclude_ids,
        user_type: 2,
      },
      dataType: 'json',
      success: function (json) {
        if (json.code == 200) {
          $.toast({
            heading: false,
            text: setupSuccessMsg(setup_type),
            position: 'top-center',
            showHideTransition: 'fade',
            icon: 'success',
            hideAfter: 3000,
            allowToastClose: false,
            loader: false,
          });
          reload();
        } else {
          $.toast({
            heading: false,
            text: 'Please try again later!',
            position: 'top-center',
            showHideTransition: 'fade',
            icon: 'error',
            hideAfter: 3000,
            allowToastClose: false,
            loader: false,
          });
        }
      }
    });
  }

  function setupSuccessMsg(status) {
    switch (status) {
      case '1':
        return 'Unread successfully';
      case '2':
        return 'Read successfully';
      case '3':
        return 'Unmarked successfully';
      case '4':
        return 'Marked successfully';
      case '5':
        return 'Not Replied successfully';
      case '6':
        return 'Replied successfully';
      case '7':
        return 'Ignore successfully';
    }
  }

  function batchMarked(param) {
    $.ajax({
      url: "{{ url('account/message_center/message/handleMarked') }}",
      type: 'post',
      data: param,
      dataType: 'json',
      success: function (json) {
        if (json.code == 200) {
          $.toast({
            heading: false,
            text: param.is_marked == 1 ? 'Marked successfully' : 'Unmarked successfully',
            position: 'top-center',
            showHideTransition: 'fade',
            icon: 'success',
            hideAfter: 3000,
            allowToastClose: false,
            loader: false,
          });
          reload();
        } else {
          $.toast({
            heading: false,
            text: 'Please try again later!',
            position: 'top-center',
            showHideTransition: 'fade',
            icon: 'error',
            hideAfter: 3000,
            allowToastClose: false,
            loader: false,
          });
        }
      }
    });
  }

  function handleDelete() {
    var length = $("#page-sent input[name='selected[]']:checked").length;
    if (length <= 0) {
      layer.alert('Please select at least one message.', {
        title: 'Message',
        btn: 'OK',
        skin: 'yzc_layer', //样式类名
        closeBtn: 0
      });
      return false;
    }

    var ids = '';
    $("#page-sent input[name='selected[]']:checked").each(function () {
      ids += Number($(this).val()) + ',';
    });

    layer.confirm("Are you sure you want to delete these messages?", {
        title: 'Message',
        skin: 'oris-layer', //样式类名
        btn: ['Yes', 'No']
      }, //按钮
      function (index) {
        layer.close(index);
        $.ajax({
          url: "{{ url('account/message_center/message/handleDeleted') }}",
          type: 'post',
          data: {tab_type: 'sent', ids:ids, delete_status: 1},
          dataType: 'json',
          success: function (json) {
            if (json.code == 200) {
              $.toast({
                heading: false,
                text: 'Delete successfully.',
                position: 'top-center',
                showHideTransition: 'fade',
                icon: 'success',
                hideAfter: 3000,
                allowToastClose: false,
                loader: false,
              });
              reload();
            } else {
              $.toast({
                heading: false,
                text: 'Please try again later!',
                position: 'top-center',
                showHideTransition: 'fade',
                icon: 'error',
                hideAfter: 3000,
                allowToastClose: false,
                loader: false,
              });
            }
          }
        });
      });
  }

  // 勾选框控制按钮是否禁用
  $("#page-sent input[name='selected[]'] ,#page-sent input[name='all_select']").on('change', function() {
    var length = $("#page-sent input[name='selected[]']:checked").length;
    if(length <= 0) {
      $(".msg-markas__row button").attr('disabled', true);
      $(".msg-markas__row select").attr('disabled', true);
    } else {
      $(".msg-markas__row button").removeAttr('disabled')
      $(".msg-markas__row select").removeAttr('disabled')
    }
    $("#markas").selectpicker('refresh');
  });

  //初始化日期选择控件
  var startDate = moment().subtract(1, 'y').format('YYYY-MM-DD');
  var endDate = moment().format('YYYY-MM-DD');

  function initTimePicker() {
    var searchStartDateFrom = "{{ search.filter_post_time_from }}";
    var searchStartDateTo = "{{ search.filter_post_time_to }}";

    if (searchStartDateFrom && searchStartDateTo) {
      startDate = searchStartDateFrom.substr(0, 10);
      endDate = searchStartDateTo.substr(0, 10);
      // 初始化数据
      $('#creation_time').val(startDate + dateRangeto + endDate);
    }

    $('#creation_time').daterangepicker({
      separator: dateRangeto,
      startDate: startDate,
      endDate: endDate,
      format: 'YYYY-MM-DD'
    }, function (start, end, label) {
      orisComponents.triggerInputClear($('#creation_time'));
    });
  }

  function getFilter() {
    let url = '';

    let subject = encodeURIComponent($('#page-sent #filter-subject').val().trim());
    if (subject) {
      url += "&filter_subject=" + subject;
    }

    let dateArr = $('#creation_time').val().split(dateRangeto);
    let post_date_from = dateArr[0] ? encodeURIComponent(dateArr[0] + ' 00:00:00') : '';
    let post_date_to = dateArr[1] ? encodeURIComponent(dateArr[1] + ' 23:59:59') : '';

    if (post_date_from) {
      url += "&filter_post_time_from=" + post_date_from;
    }

    if (post_date_to) {
      url += "&filter_post_time_to=" + post_date_to;
    }

    let marked = $("#page-sent #marked").val();
    if (marked != '') {
      url += "&filter_mark_status=" + marked;
    }

    return url;
  }

  function filter() {
    block.blockUI();
    let url = '{{ url('account/message_center/platform_secretary/sent') }}&' + getFilter();
    $('#tab-content').load(url, 'page_limit={{ paginator.getPageSize() }}', function () {
      block.unBlockUI();
    });
  }

  function reload() {
    block.blockUI();
    let url = '{{ url('account/message_center/platform_secretary/sent') }}&' + getFilter();
    $('#tab-content').load(url, 'page_limit={{ paginator.getPageSize() }}', function () {
      block.unBlockUI();
    });
  }

  function reset() {
    $('#page-sent #filter-subject').val('');
    $("#page-sent #marked").val('');
    $('#page-sent #marked').selectpicker('refresh');
    $('#page-sent #markas').selectpicker('refresh');
    $('#page-sent #creation_time').val('');
    
    filter();
  }

  function inputChecked() {
    if ($('#page-sent input[name="selected[]"]').length == $('input[name="selected[]"]:checked').length) {
      $('#page-sent input[name=all_select]').prop('checked', true);
    } else {
      $('#page-sent input[name=all_select]').prop('checked', false);
    }
  }

</script>
