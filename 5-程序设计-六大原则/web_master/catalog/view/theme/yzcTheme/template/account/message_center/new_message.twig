{% set titleStr = 'Compose' %}

{{ this.title(titleStr) }}
  {{ this.params('breadcrumbs', [
      'home',
      {
          text: 'Message Center',
          href: 'javascript:void(0)',
      },
      {
          text: titleStr,
          href: url('account/message_center/message/new'),
      }
  ]) }}

{{ css([
    'static/customerpartner/message_center/new-message.css',
    'css/common/common.css',
    'css/common/common-ext.css',
    'static/message/message-common.css',
    'static/message/setting/setting.css',
    'static/message/buyer-message-common.css',
    'static/message/new-message.css'
]) }}

{{ this.registerAssets(['App\\Assets\\Common\\SummernoteAsset']) }}

<script type="text/javascript" src="/catalog/view/javascript/bootstrap/js/bootstrap-paginator.min.js"></script>
<script type="text/javascript" src="catalog/view/javascript/layer/layer.js"></script>
{% if separate_view is defined and separate_view %}
<div class="container-fluid" id="content" style="margin-left: 235px">
    <ul class="breadcrumb">
        {% for breadcrumb in breadcrumbs %}
            <li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
        {% endfor %}
    </ul>
    {% else %}
    <div class="container">
        {% endif %}
        <div class="row">{{ column_left }}
            {% if column_left and column_right %}
                {% set class = 'col-sm-6' %}
            {% elseif column_left or column_right %}
                {% set class = 'col-sm-9' %}
            {% else %}
                {% set class = 'col-sm-12' %}
            {% endif %}
            {% if separate_view == 0 %}
                {% set table_div_class = 'overflow: hidden;' %}
            {% endif %}
            <div ng-app="app" id="setting-content">
                <div id="content" class="{{ class }} msgb">{{ content_top }}
                    {{ message_column }}
                    <div id="table_content" style="{{ table_div_class }}" class="msgcent msg-card msg-h508">
                        <div class="msgcent msg-detail__header msgb msg-card__title">
                            Compose
                        </div>
                        <div id="page-new-message" class="msgcent msg-page-container">
                            <div class="form-container">
                                <div>
                                    <div class="recipient-label-container">
                                        <div class="msgcent msg-form__label-sm">
                                            Recipient:
                                        </div>
                                        <div class="btn-contracts">
                                            <a onclick="addContacts()"><div class="msgcent msg-btn__text add-btn">Add contacts</div></a>
                                        </div>
                                    </div>
                                    <div id="receiver-input-container">
                                        <div class="msgcent msg-receive__container msg-form" id="receiver-container" data-type=""><span class="msg-receive-placeholder">Click the button on the right to add recipients</span></div>
                                        <div class="error-tip text-danger hidden">Recipient can not be blank.</div>
                                    </div>
                                </div>
                                <div class="msgcent msg-form__item mt-16">
                                    <div class="msgcent msg-form__label-sm">
                                        Subject:
                                    </div>
                                    <div class="msgcent msg-form__content" id="subject-input-container">
                                      <input class="oris-input msg-form" maxlength="200" id="message-subject" placeholder="Please enter the message subject" value="{{ subject }}">
                                      <div class="error-tip text-danger hidden">Subject can not be blank.</div>
                                    </div>
                                </div>
                                <div class="msgcent msg-form__item mt-16">
                                    <div class="msgcent msg-form__label-sm">
                                        Content:
                                    </div>
                                    {% if words_type %}
                                        <div class="msgcent msg-form__label-sm common-words-label">
                                            Specific Scenario Corpus:
                                        </div>
                                        <div class="common-words-container">
                                            {% include 'yzcTheme/template/account/message_center/common/common_words/index.twig' %}
                                        </div>
                                    {% endif %}
                                    <div class="content-container msg-richtextarea" id="content-textarea-container">
                                        <textarea class="content-textarea" id="content-textarea" data-toggle="summernote"></textarea>
                                        <div class="error-tip text-danger hidden">Content can not be blank.</div>
                                    </div>

                                    <div class="btn-container">
                                        {% include 'yzcTheme/template/account/message_center/common/file_upload/index.twig' %}
                                        {# <button class="oris-button btn-item oris-button-default upload-btn"><i class="giga icon-shangchuan upload-icon"></i>Upload Files</button> #}
                                        <button id="send-btn" class="oris-button oris-w120 oris-button-bigger" type="button" onclick="sendMsg()">Send</button>
                                    </div>
                                </div>
                                <div id="file-list-container" style="display:none">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{{ footer }}

<script>
    // 返回清空内容
    window.addEventListener('pageshow', (e) => {
        if (e.persisted || (window.performance && 
            window.performance.navigation.type == 2)) {
            location.reload()
        }
    }, false)

    $(window).bind('beforeunload', function(){
        //清除缓存的联系人
        localStorage.removeItem('receivers');
    });

    var customerId = '{{ customer_id }}';
    //var is_jump = {{ is_jump }};

    //绑定联系人删除事件
    $('#receiver-container').on('click', '.msg-receive__item .msg-receive__clear', function() {
        $(this).parent().remove();

        let receivers = new Set();
        $('.msg-receive__item').each(function() {
          receivers.add(JSON.stringify({
            id: $(this).parent().data('id'),
            name: $(this).parent().data('name')
          }))
        })
        if($('.msg-receive__item').length <= 0) {
          $(".msg-receive__container").html(`<span class="msg-receive-placeholder">Click the button on the right to add recipients</span>`)
        }
    })

    $(document).ready(function () {
        // 清除富文本编辑框默认换行
        $("#content-textarea").val("");
        // 发送限制
        let remain_send_count = {{ remain_send_count }}
        if (remain_send_count == 0) {
            layer.alert("The number of messages sent has reached its maximum limit for the day. ", {
                    closeBtn: 0,
                    btnAlign: 'c',
                    title: 'Attention',
                    btn: ['I Know'],
                    skin: 'oris-layer'},
                function () {
                    location.href = '{{ url('account/message_center/seller') }}'
                });
            return;
        }
        if (remain_send_count > 0) {
            var hintStr = ':number times remaining to send messages';
            if (remain_send_count == 1) {
                hintStr = ':number time remaining to send messages';
            }
            hintStr = hintStr.replace(':number', remain_send_count);

            /* $.toast({
                heading: false,
                text: hintStr,
                position: 'top-center',
                showHideTransition: 'fade',
                icon: 'info',
                hideAfter: 2000,
                allowToastClose: false,
                loader: false,
            }); */
            layer.msg(hintStr, {time: 2000});
        }

        let sellers = {{ seller | default('null') }};
        // 设置店铺页面转跳的收件人
        if(sellers) {
          setSellerFromStore(sellers);
        } else {
          setReceivers();
          //清除缓存的联系人
          localStorage.removeItem('receivers');
        }

    })

    // 设置店铺页面转跳的收件人
    function setSellerFromStore(sellers) {
        html = '';
        sellers.forEach(function(s) {
          html += `<div class="msgcent msg-receive__item disabled" data-customer="${s.customer_id}" data-id="${s.customer_id}" data-name="${s.screenname}">
          ${s.screenname}
          </div>`
        })
        $("#receiver-container").html(html);
        
        $("#receiver-input-container").addClass("disabled");
        $(".btn-contracts").addClass("disabled");
    }

    // 设置当前默认选中的
    function setDefaultLocalReceivers() {
      let receivers = new Set();
      $(".msg-receive__item").each(function(){
        receivers.add(JSON.stringify({
          id: $(this).data('id'),
          name: $(this).data('name')
        }))
      });
      localStorage.setItem('receivers', JSON.stringify(Array.from(receivers)));
      localStorage.setItem('temp-receivers', localStorage.getItem('receivers'));
    }

    //弹窗选择后添加联系人到收件人框
    function setReceivers() {
      let receivers = localStorage.getItem('receivers') ? new Set(JSON.parse(localStorage.getItem('receivers'))) : new Set();
      if(receivers.size > 0){
        let html = '';
        receivers.forEach(function(receiver) {
            let r = JSON.parse(receiver);
            html += `<div class="msgcent msg-receive__item" data-customer="${r.id}" data-id="${r.id}" data-name="${r.name}">
            ${r.name}
            <i class="giga icon-sidebar-clear msg-receive__clear"></i>
            </div>`
        })
        $("#receiver-container").html(html);
      } else {
        $("#receiver-container").html(`<span class="msg-receive-placeholder">Click the button on the right to add recipients</span>`)
      }

      toggleFormError(formValidateMap.receiver, false);
    }

    // 显示错误提示
    // @params isRich 是否是富文本
    // @params show 显示错误或者影藏错误
    function toggleFormError(el, show=true, isRich=false) {
      show ? $(el + " .error-tip").removeClass("hidden") : $(el + " .error-tip").addClass("hidden");
      let formRed = isRich ? el + " .note-frame" : el + " .msg-form";
      show ? $(formRed).addClass("error-input") : $(formRed).removeClass("error-input");
    }

    // 表单验证字段dom对应
    var formValidateMap = {
      receiver: "#receiver-input-container",
      subject: "#subject-input-container",
      content: "#content-textarea-container"
    }
    function resetFormValidate() {
      $('.error-tip').addClass('hidden');
      $('.note-frame').removeClass("error-input");
      $('.msg-form').removeClass("error-input");
    }

    //输入时清空局部的错误提示
    $('#message-subject').on('input', function(){
      if ($('#message-subject').val().trim()) {
        toggleFormError(formValidateMap.subject, false);
      }
    })

    $("#content-textarea").on("summernote.change", function (e) {   // callback as jquery custom event 
      if ($("#content-textarea").val().trim()) {
        toggleFormError(formValidateMap.content, false, true);
      }
    });

    function sendMsg() {
        let formData = new FormData();
        let content = $('#content-textarea').summernote("code");
        let hasError = false;
        // if (content.replace(/<.*?>/g,"") === '') {
        if (content.trim() === '') {
          toggleFormError(formValidateMap.content,true,true);
          hasError = true;
        }
        formData.append('content', content);

        let subject = $('#message-subject').val().trim();
        if (!subject) {
          toggleFormError(formValidateMap.subject);
          hasError = true;
        }
        formData.append('subject', subject);

        if ($('.msg-receive__item').length <= 0) {
          toggleFormError(formValidateMap.receiver);
          hasError = true;
        }

        $(".msg-receive__item").each(function () {
            formData.append('ids[]', $(this).data('customer'));
        })

        let files = window.getUploadFiles();
        for (let i=0; i < files.length; i++) {
          formData.append('files[]', files[i]);
        }

        if(hasError) {
          return;
        }

        block.blockUI();
        $.ajax({
            url: "{{ url('account/message_center/message/saveVerify') }}",
            type: "POST",
            data: formData,
            dataType:'json',
            contentType: false,
            processData: false,
            enctype: 'multipart/form-data',
            success: function(res) {
                let text = '';
                switch (res.code) {
                    case 200:
                        buildMsg(formData);
                        return;
                    case 410:
                        // 发送频次限制
                        layer.alert("The number of messages sent has reached its maximum limit for the day. ", {
                            closeBtn: 0,
                            btnAlign: 'c',
                            title: 'Attention',
                            btn: ['I Know'],
                            skin: 'oris-layer'},
                            function () {
                              location.href = '{{ url('account/message_center/seller') }}'
                            });
                        return;
                    case 420:
                        // 提示语言不符合后无法点击下一步发送
                        block.unBlockUI();
                        layer.alert(res.msg, {
                            closeBtn: 1,
                            btnAlign: 'c',
                            title: 'Attention',
                            btn: ['I Know'],
                            skin: 'oris-layer'});
                        return;
                    case 430:
                        // 提示语言不符合后点击下一步发送
                        block.unBlockUI();
                        layer.confirm(res.msg, {
                            closeBtn: 1,
                            btnAlign: 'c',
                            title: 'Message',
                            btn: ['Yes', 'No'],
                            skin: 'oris-layer',
                            yes: function (index) {
                                layer.closeAll();
                                buildMsg(formData);
                            },
                            btn2: function () {
                                layer.closeAll();
                            }
                        });
                        return;
                    default:
                        text = res.msg;
                }
                if (text !== '') {
                    block.unBlockUI();
                    $.toast({
                        heading: false,
                        text: text,
                        position: 'top-center',
                        showHideTransition: 'fade',
                        icon: 'error',
                        hideAfter: 3000,
                        allowToastClose: false,
                        loader: false,
                    });
                }
            },
            error: function() {
                block.unBlockUI();
                layer.alert("Oop! Something went wrong and it wa probably our fault. Please try again later or report the problem to us!", {
                    closeBtn: 1,
                    btnAlign: 'c',
                    title: 'Message',
                    btn: ['OK'],
                    skin: 'oris-layer'
                });
            }
        })
    }

    function buildMsg(formData) {
        $("#send-btn").prop("disabled", true);
        $.ajax({
            url: "{{ url('account/message_center/message/save') }}",
            type: "POST",
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            enctype: 'multipart/form-data',
            success: function (res) {
                if (res.code == 200) {
                    $.toast({
                        heading: false,
                        text: 'Send Successfully!',
                        position: 'top-center',
                        showHideTransition: 'fade',
                        icon: 'success',
                        hideAfter: 3000,
                        allowToastClose: false,
                        loader: false,
                    });
                    window.location.href = '{{ url("account/message_center/seller", {tab_type:'sent'}) }}'
                    block.unBlockUI();
                } else {
                    $.toast({
                        heading: false,
                        text: res.msg,
                        position: 'top-center',
                        showHideTransition: 'fade',
                        icon: 'error',
                        hideAfter: 3000,
                        allowToastClose: false,
                        loader: false,
                    });
                    $("#send-btn").prop("disabled", false);
                }
            },
            error: function () {
                block.unBlockUI();
                layer.alert("Oop! Something went wrong and it wa probably our fault. Please try again later or report the problem to us!", {
                    closeBtn: 1,
                    btnAlign: 'c',
                    title: 'Message',
                    btn: ['OK'],
                    skin: 'oris-layer'
                });
            }
        });
    }

    //打开选择联系人弹窗 
    function addContacts() {
      // 设置店铺页面转跳的无法点击
      let sellers = {{ seller | default('null') }};
      if(sellers) {
        return;
      }

      block.blockUI();
      $.ajax({
        url: "{{ url('account/message_center/message/checkCustomerNewMsg') }}",
        type: "POST",
        contentType: false,
        processData: false,
        success: function (res) {
            block.unBlockUI();
            if (res.data.status == 1) {
              setDefaultLocalReceivers();
              // 检查是否设置默认联系人
              layer.open({
                type: 2,
                area: ['1000px', '800px'],
                title: 'All Contacts',
                fixed: false,
                skin: 'oris-layer msgcent msg-layer',
                scrollbar: true,
                content: `index.php?route='account/message_center/seller/sellerList`,
                cancel: function() {
                  localStorage.removeItem('temp-receivers');
                }
              });
            } else {
              layer.alert("The number of messages sent has reached its maximum limit for the day. ", {
                closeBtn: 0,
                btnAlign: 'c',
                title: 'Attention',
                btn: ['I Know'],
                skin: 'oris-layer'},
              function () {
                location.href = '{{ url('account/message_center/seller') }}'
              });
            }
        },
        error: function () {
            block.unBlockUI();
            layer.alert("Oop! Something went wrong and it wa probably our fault. Please try again later or report the problem to us!", {
                closeBtn: 1,
                btnAlign: 'c',
                title: 'Message',
                btn: ['OK'],
                skin: 'oris-layer'
            });
        }
      });
    }

</script>
