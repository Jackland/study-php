{{ header }}
{{ separate_column_left }}
<style>
  .button-filter {
    margin-top: 23px;
  }

  .button-download {
    margin-top: 23px;
  }

  .buyer-list-header {
    background-color: #E5F0F4;
    padding-left: 20px;
    padding-top: 20px;
  }

  .buyer-list-header button {
    margin-left: 20px;
  }

  .buyer-list-body {
    background-color: #E5F0F4;
    padding-top: 20px;
    max-height: 300px;
    overflow-x: auto;
  }

  .detail-view .buyer-list-body .row .col-sm-2 {
    margin-bottom: 15px;
    white-space: nowrap;
  }

  .detail-view .buyer-list-body .row .col-sm-2 span {
    background-color: #FFF7EF;
    color: #A6794E;
    font-size: smaller;
    padding: 5px 10px;
  }

  .detail-view .buyer-list-body .row .col-sm-2 span i {
    padding-left: 10px;
  }

  .action a {
    margin-left: 15px;
  }

  .layui-layer-lan .layui-layer-btn {
    text-align: center;
  }

  .layui-layer-lan .layui-layer-btn0 {
    background: #1f90bb !important;
    border-color: #1f90bb !important;
    color: #fff !important;
  }

  .layui-layer-lan .layui-layer-btn1 {
    color: #fff !important;
  }

  .buyer_img_show {
    max-width: 100px;
    max-height: 100px;
    background-color: #e5f0f4;
  }

  .break-row {
    word-wrap: break-word;
    word-break: break-all;
  }
  .add-buyer-btn{
    font-style: normal;
  }
  .table tbody tr td .btn:hover .add-buyer-btn{
    color: #fb6400;
  }
  .add-buyer-btn:hover{
    color: #fb6400;
  }
  .bootstrap-table{
    padding-bottom: 40px;
  }

</style>
<script type="text/javascript" src="catalog/view/javascript/bootstrap/js/bootstrap-paginator.min.js"></script>
{#<link rel="stylesheet" href="catalog/view/javascript/bootstrap-table/bootstrap-table.min.css">#}
<link rel="stylesheet" href="catalog/view/javascript/bootstrap-table/bootstrap-table-1.15.2.css">
{#<script type="text/javascript" src="catalog/view/javascript/bootstrap-table/bootstrap-table.js"></script>#}
<script type="text/javascript" src="catalog/view/javascript/bootstrap-table/bootstrap-table-1.15.2.js"></script>
<link href="catalog/view/javascript/bootstrap/css/bootstrap-switch.css" rel="stylesheet">
<script src="catalog/view/javascript/bootstrap/js/bootstrap-switch.min.js"></script>
{% if separate_view is defined and separate_view %}
<div class="container-fluid" id="content" style="margin-left: 15%">
  {% else %}
  <div class="container">
    {% endif %}
    <ul class="breadcrumb">
      {% for breadcrumb in breadcrumbs %}
        <li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
      {% endfor %}
    </ul>
    {% if success %}
      <div class="alert alert-success"><i class="fa fa-exclamation-circle"></i> {{ success }}</div>
    {% endif %}
    <div class="row" id="main-content">
      {{ column_left }}
      {% if column_left and column_right %}
        {% set class = 'col-sm-6' %}
      {% elseif column_left or column_right %}
        {% set class = 'col-sm-9' %}
      {% else %}
        {% set class = 'col-sm-12' %}
      {% endif %}

      <div id="content" class="{{ class }}">
        {{ content_top }}
        <h1>
          {{ heading_title }}
          <div class="pull-right">
            <a href="{{ url_page_add_group }}" data-toggle="tooltip" title="{{ tip_add_group }}" class="btn btn-primary">
              <i class="fa fa-plus"></i>
            </a>
          </div>
        </h1>
        <div id="box-shadow">
          <div class="well" style="margin-top: 15px">
            <div class="row">
              <div class="form-group col-md-4">
                <label for="input_name">{{ column_name }}</label>
                <input type="text" class="form-control" id="input_name" placeholder="{{ column_name }}">
              </div>
              <div class="form-group col-md-4">
                <label for="input_nickname">{{ column_nickname }}</label>
                <input type="text" class="form-control" id="input_nickname" placeholder="{{ column_nickname }}">
              </div>
              <div class="form-group col-md-4">
                  <button class="btn btn-primary button-filter " type="button" id="filter" onclick="func_filter(this)" data-toggle="tooltip"
                          title="{{ tip_filter }}">
                    {{ button_filter }}
                  </button>
                  <button class="btn btn-default button-download " type="button" id="download" onclick="func_filter_download(this)" data-toggle="tooltip"
                          title="{{ tip_download }}">
                    <i class="fa fa-download"></i>
                  </button>

              </div>
            </div>
          </div>

          <table id="tb_group_list" class="table table-striped table-hover"></table>
          {# Add Link #}
          <div class="well" id="add_link_div" style="display: none;margin-bottom:0;padding-top: 5px;padding-bottom: 0">
            <div class="row">
              <div style="margin-left: 15px">
                <table id="tb_buyer_list" class="table table-striped table-hover">
                </table>
              </div>
            </div>
          </div>

          <div id="img_buyer_div" style="visibility:hidden; position: absolute;top:-9999px;left:-9999px;">
            <div class="row">
              <div class="col-xs-3 center-block" style="padding-right: 0">
                <img class="img-responsive img-rounded" style="margin-top: 10px" src="" alt="">
              </div>
              <div class="col-xs-9 text-center" style="padding-left: 5px"></div>
            </div>
          </div>

          {{ content_bottom }}
        </div>
      </div>
      {{ column_right }}
    </div>
  </div>

  {% if separate_view is defined and separate_view %}
</div>
{% endif %}
{{ footer }}
<script>
  layer.config({
      // extend: 'yzc/style.css',
      // skin: 'yzc_layer',
      scrollbar: false,
      offset: 'auto',
      title: 'Message',
      btnAlign: 'c',
  });
  let url_get_list = '{{ url_get_list }}';
  let url_update = '{{ url_update }}';
  let url_remove = '{{ url_remove }}';
  let url_get_link_list = '{{ url_get_link_list }}';
  let url_remove_link = '{{ url_remove_link }}';
  let url_get_buyer_by_group = '{{ url_get_buyer_by_group }}';
  let url_add_link = '{{ url_add_link }}';

  let url_image_prefix = '{{ url_image_prefix }}';
  let url_buyer_page = '{{ url_buyer_page }}';
  let url_download = '{{ url_download }}';

  let btn_filter_group_list = null;

  let this_group_id = 0;

  let is_first_load = true;
  let load_group_id = '{{ load_group_id }}';

  $(function () {
    init_group_list();
    init_tb_buyer_list();
  });

  function init_group_list() {
    $("#tb_group_list").bootstrapTable({
      url: url_get_list,
      sidePagination: "server",
      queryParams: function (params) {
        params.name = $("#input_name").val().trim();
        params.nickname = $("#input_nickname").val().trim();
        params.pageSize = params.limit;
        params.page = parseInt((params.offset + 1) / params.limit + 1);
        return params;
      },
      striped: true, // 是否显示行间隔色
      // search: "true",
      // searchAlign: "left",
      uniqueId: "id",
      idField: "num",
      // showRefresh: true,
      pagination: true, // 是否分页
      pageSize: "10",
      pageList: [20, 30, 50],
      sortable: true, // 是否启用排序
      // height: 400,
      selectItemName: 'select_buyers',
      columns: [
        {
          field: 'num',
          title: 'No.',
          halign: 'center',
          valign: 'center',
          align: 'center',
        },
        {
          field: 'name',
          title: 'Buyer Group Name',
          halign: 'center',
          valign: 'center',
          align: 'center',
          formatter: function (value, row, index) {
            return '<span class="form-display break-row">' + value + '</span>' +
              '<input class="form-edit form-control" value="' + value + '" style="display: none" maxlength="50" name="input_name" autocomplete="off">'
          }
        },
        {
          field: 'description',
          title: 'Description',
          halign: 'center',
          valign: 'center',
          align: 'center',
          width: '500px',
          formatter: function (value, row, index) {
            return '<span class="form-display break-row">' + value + '</span>' +
              '<input class="form-edit form-control" value="' + value + '" style="display: none" maxlength="100" name="input_description" autocomplete="off">'
          }
        },
        {
          field: 'is_default',
          title: 'Is Default<i class="giga icon-V10-wenhaotishi"></i>',
          halign: 'center',
          valign: 'center',
          align: 'center',
          titleTooltip: '{{ tip_is_default }}',
          formatter: function (value, row, index) {
            return '<span class="form-display">' + (row.is_default ? 'Yes' : 'No') + '</span>' +
            '<input class="form-edit" type="checkbox" name="input_is_default" ' + (row.is_default ? 'checked' : '') + ' style="display: none">'
          }
        },
        {
          field: 'update_time',
          title: 'Updated Date<i class="giga icon-V10-wenhaotishi"></i>',
          halign: 'center',
          valign: 'center',
          align: 'center',
          titleTooltip: '{{ tip_update_time }}',
        },
        {
          field: '',
          title: 'Action',
          halign: 'center',
          valign: 'center',
          align: 'center',
          class: 'action',
          width: '280px',
          formatter: function (value, row, index) {
            let active_html = '';
            let this_table = 'tb_group_list';
            active_html += '<a onclick="func_edit(' + index + ',' + row.id + ',\'' + this_table + '\',this);" data-toggle="tooltip" title="{{ tip_btn_edit }}"' +
              ' class="btn btn-primary btn-form-display"><i class="fa fa-pencil"></i></a>' +
              '<a style="display: none" onclick="func_save(' + index + ',' + row.id + ',\'' + this_table + '\',this);" data-toggle="tooltip"' +
              ' title="{{ tip_btn_save }}" class="btn btn-primary btn-form-edit"><i class="fa fa-save"></i></a>' +
              '<a style="display: none" onclick="func_back(' + index + ',' + row.id + ',\'' + this_table + '\',this);" data-toggle="tooltip"' +
              ' title="{{ tip_btn_cancel }}" class="btn btn-default btn-form-edit"><i class="fa fa-reply"></i></a>' +
              '<a onclick="func_remove(' + index + ',' + row.id + ',\'' + this_table + '\',this);" data-toggle="tooltip"' +
              ' title="{{ tip_btn_remove }}" class="btn btn-danger btn-form-display"><i class="fa fa-trash-o"></i></a>' +
              '<a onclick="func_download(' + index + ',' + row.id + ',\'' + this_table + '\',this);" data-toggle="tooltip"' +
              ' title="{{ tip_btn_download }}" class="btn btn-default btn-form-display"><i class="fa fa-download"></i></a>' +
              '<a onclick="func_display_buyers(' + index + ',' + row.id + ',\'' + this_table + '\',this);" data-toggle="tooltip"' +
              ' title="{{ tip_btn_down }}" class="btn btn-warning btn-form-display buyers-display"><i class="giga icon-action-stretch"></i></a>';
            return active_html;
          }
        }
      ],
      // maintainSelected: true,
      detailView: true,
      detailViewIcon: false,
      detailViewByClick: false,
      detailFormatter: function (index, row, element) {
        return render_buyers(row.id);
      },
      onLoadSuccess: function (data) {
        if (btn_filter_group_list) {
          $(btn_filter_group_list).button('reset');
          btn_filter_group_list = null;
        }

        if (is_first_load && load_group_id!=0) {
          is_first_load = false;
          $("#tb_group_list tr[data-uniqueid='" + load_group_id + "'] td.action a:last-child").trigger('click');
        }
      },
      formatNoMatches: function () {
        return 'No Results Found!!';
      }
    });
  }

  function init_tb_buyer_list() {
    $("#tb_buyer_list").bootstrapTable({
      url: url_get_buyer_by_group,
      queryParams: function (params) {
        params = {};
        params.group_id = this_group_id;
        return params;
      },
      sidePagination: false,
      striped: true, // 是否显示行间隔色
      search: true,
      searchAlign: 'left',
      uniqueId: "buyer_id",
      pageSize: 'All',
      pageList: [10, 25, 100, 'All'],
      showRefresh: false,
      pagination: true, // 是否分页
      sortable: true, // 是否启用排序
      height: 400,
      selectItemName: 'window_buyer',
      columns: [
        {
          field: '',
          title: '',
          halign: 'center',
          valign: 'center',
          align: 'center',
          checkbox: true
        },
        {
          field: 'num',
          title: 'No.',
          halign: 'center',
          valign: 'center',
          align: 'center',
          sortable: true
        },
        {
          field: 'nickname',
          title: 'Nick Name',
          halign: 'center',
          valign: 'center',
          align: 'center',
          sortable: true,
          formatter: function (value, row, index) {
            return row.nickname+'('+row.user_number+')';
          }
        },
        {
          field: 'remark',
          title: 'Remark',
          halign: 'center',
          valign: 'center',
          align: 'center',
          width:300,
          sortable: true
        },
        {
          field: 'add_time',
          title: 'Added Date<i class="giga icon-V10-wenhaotishi"></i>',
          titleTooltip:'{{ tip_update_time }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
          sortable: true
        }
      ],
      clickToSelect: true,
      maintainSelected: true,
    });
  }

  function func_filter(_this) {
    $(_this).button('loading');
    btn_filter_group_list = _this;
    func_table_refresh('tb_group_list');
  }

  function func_filter_download(_this) {
    let url = url_download;

    let input_name = $('#input_name').val().trim();
    let input_nickname = $('#input_nickname').val().trim();
    if (input_name) {
      url += '&name=' + input_name;
    }
    if (input_nickname) {
      url += '&nickname=' + input_nickname;
    }
    window.location.href = url;
  }

  function func_edit(index, id, table, _this) {
    let _table = "#" + table + " ";
    // 显示编辑
    $(_table + "tr[data-index=" + index + "] .form-edit").css("display", "block");
    $(_table + "tr[data-index=" + index + "] .btn-form-edit").css("display", "inline-block");

    // 隐藏展示
    $(_table + "tr[data-index=" + index + "] .form-display").css("display", "none");
    $(_table + "tr[data-index=" + index + "] .btn-form-display").css("display", "none");

    if ($(_this).parent().parent().next().hasClass('detail-view')) {
      $(_this).siblings('.buyers-display').children().removeClass('icon-arrow-compress').addClass('icon-action-stretch');
      $(_table).bootstrapTable('toggleDetailView', index);
    }
    // 初始化按钮
    $(_table + "tr[data-index=" + index + "] .form-edit[name=input_is_default]").bootstrapSwitch({size:'mini',onText:'Y',offText:'N'});
  }

  function func_back(index, id, table, _this) {
    let _table = "#" + table + " ";
    $(_table + "tr[data-index=" + index + "] .form-display").css("display", "block");
    $(_table + "tr[data-index=" + index + "] .btn-form-display").css("display", "inline-block");
    $(_table + "tr[data-index=" + index + "] .form-edit").css("display", "none");
    $(_table + "tr[data-index=" + index + "] .btn-form-edit").css("display", "none");
    //销毁按钮
    $(_table + "tr[data-index=" + index + "] .form-edit[name=input_is_default]").bootstrapSwitch('destroy');
  }

  function func_save(index, id, table, _this) {
    let _table = "#" + table + " ";

    let postData = {id: id};

    if (id === 0 || id === '') {
      alert('{{ error_common }}');
      return;
    }
    postData.name = $(_table + "tr[data-index=" + index + "] .form-edit[name=input_name]").val().trim();
    postData.description = $(_table + "tr[data-index=" + index + "] .form-edit[name=input_description]").val().trim();
    postData.is_default = $(_table + "tr[data-index=" + index + "] .form-edit[name=input_is_default]").bootstrapSwitch('state');
    postData.is_default = postData.is_default ? 1 : 0;

    if (postData.name === undefined || postData.name === '') {
      layerMsg('{{ error_name_empty }}');
      return;
    }
    if (postData.is_default) {
      let alert_string = '{{ alert_change_default }}';
      layer.confirm(alert_string.replace('_group_name_', postData.name), {
          skin: 'yzc_layer',
          title: 'Message',
          btn: ['Yes', 'No'],
          scrollbar: false
      }, function (lay_index) {
          ajax(postData, url_update, callback_update, {table: table, index: index});
      });
    } else {
      ajax(postData, url_update, callback_update, {table: table, index: index});
    }
  }

  function func_remove(index, id, table, _this) {

    if (id === 0 || id === '') {
      alert('{{ error_common }}');
      return;
    }
    let postData = {group_id: id};
    layer.confirm('{{ alert_remove }}', {
      skin: 'yzc_layer',
      title: 'Message',
      btn: ['Yes', 'No'],
      scrollbar: false
    }, function (lay_index) {
      ajax(postData, url_remove, callback_remove, {table: table, index: index});
    });
  }

  function func_download(index, id, table, _this) {
    if (id >= 1) {
      window.location.href = url_download + '&group_id=' + id;
    }
  }

  function func_display_buyers(index, id, table, _this) {
    let _table = "#" + table + " ";

    let rows = $(_this + ' tbody').find('tr');
    $.each(rows, function (i, row) {
      if ($(row).next().hasClass('detail-view') && $(row).attr('data-index') != index) {
        $(row).find('.action').find('.buyers-display').children().removeClass('icon-arrow-compress').addClass('icon-action-stretch');
        $(row).find('.action').find('.buyers-display').attr('data-original-title', '{{ tip_btn_down }}');
        $(_table).bootstrapTable('toggleDetailView', $(row).attr('data-index'));
      }
    });

    // $(_table).bootstrapTable('collapseAllRows');

    if ($(_this).parent().parent().next().hasClass('detail-view')) {
      $(_this).children().removeClass('icon-arrow-compress').addClass('icon-action-stretch');
      $(_this).attr('data-original-title', '{{ tip_btn_down }}');
    } else {
      $(_this).children().removeClass('icon-action-stretch').addClass('icon-arrow-compress');
      $(_this).attr('data-original-title', '{{ tip_btn_up }}');
    }
    $(_table).bootstrapTable('toggleDetailView', index);
  }

  function func_show_buyers_window(group_id, _this) {
    this_group_id = group_id;
    $("#tb_buyer_list").bootstrapTable('refresh');
    layer.open({
      type: 1,
      skin: 'yzc_layer',
      title: 'Select Buyers',
      closeBtn: 0,
      shadeClose: true,
      area: 'auto',
      offset: 'auto',
      maxWidth: 900,
      maxHeight: 500,
      content: $("#add_link_div"),
      btn: ['Submit', 'Cancel'],
      btnAlign: 'c',
      scrollbar: false,
      move: false,
      resize: false,
      success: function (layero, index) {
        // console.log(layero);
      },
      yes: function (index, layer_obj) {
        let selectedRows = $("#tb_buyer_list").bootstrapTable('getSelections');
        let postData = {
          group_id: group_id,
          buyers: []
        };

        $.each(selectedRows, function (i, row) {
          postData.buyers.push(row.buyer_id);
        });

        if (postData.buyers.length < 1) {
          layerMsg('{{ error_buyers_empty }}');
          return;
        }

        layer.confirm('{{ alert_add_link }}', {
          skin: 'yzc_layer',
          title: 'Message',
          btn: ['Yes', 'No'],
          scrollbar: false
        }, function (lay_index) {
          layer.close(lay_index);
          ajax(postData, url_add_link, callback_add_link, {_this: _this, group_id: group_id});
        });
      }
    });
  }

  function func_filter_buyer(group_id, _this) {
    let nickname = $(_this).prev('input').val().trim();
    let link_html = get_buyers(group_id, nickname ? nickname : null);
    $(_this).parent().next().find('.row').html(link_html);
  }

  function func_show_buyer(_this) {
    let img_url = Base64.decode($(_this).attr('data-img-url'));
    let name = Base64.decode($(_this).attr('data-img-name'));

    $("#img_buyer_div .row .col-xs-3").find('img').attr('src', url_image_prefix + img_url);
    $("#img_buyer_div .row .col-xs-9").text(name);

    layer.tips($("#img_buyer_div").html(), _this, {
      skin: 'yzc_layer',
      tips: [1, ''],
      maxWidth: 300,
      time: 3500,
    });
  }

  function func_remove_buyer(id, _this) {
    layer.confirm('{{ alert_remove_link }}', {
      skin: 'yzc_layer',
      title: 'Message',
      btn: ['Yes', 'No'],
      scrollbar: false
    }, function (lay_index) {
      ajax({id: id}, url_remove_link, callback_remove_link, {_this: _this});
    });
    cancelBubble();
  }

  function render_buyers(group_id) {
    let row_html = get_buyers(group_id, null);
    return '<div class="form-inline buyer-list-header">' +
      '<input type="text" class="form-control" name="filter_name">' +
      '<button class="btn btn-primary" type="button" onclick="func_filter_buyer(' + group_id + ',this)" data-toggle="tooltip" title="{{ tip_filter }}"><i class="fa fa-search"></i></button>' +
      '<button class="btn btn-primary pull-right" type="button" onclick="func_show_buyers_window(' + group_id + ',this)" data-toggle="tooltip" title="{{ tip_btn_add_link }}" style="margin-right:80px"><i class="fa fa-plus"></i><i class="add-buyer-btn">&nbsp;&nbsp;Add buyer</i></button>' +
      '</div>' +
      '<div class="container-fluid buyer-list-body">' +
      '<div class="row">' + row_html + '</div>' +
      '</div>';
  }

  function get_buyers(group_id, nickname = null) {
    let data = {
      id: group_id
    };
    if (nickname !== null) {
      data.nickname = nickname;
    }

    let html = '';
    $.ajax({
      url: url_get_link_list,
      type: 'GET',
      dataType: 'json',
      data: data,
      async: false,
      beforeSend: function () {
        layer.load();
      },
      success: function (json) {
        layer.closeAll('loading');
        if (json.error == 0) {
          if (json.data.length > 0) {
            $.each(json.data, function (i, buyer) {
              html += '<div class="col-sm-2">' +
                '<span>' + buyer.nickname + '(' + buyer.user_number + ')' +
                '<i data-toggle="tooltip" title="Remove" onclick="func_remove_buyer(' + buyer.link_id + ',this)" class="giga icon-action-remove"></i>' +

                '</span>' +
                '</div>';
            });
          } else {
            html += nickname ? '<div class="col-sm-12 text-center" style="padding-bottom: 20px">No results match your search for "' + nickname + '".</div>' : '';
          }
        } else {
          layerMsg(json.msg);
        }
      },
      error: function (xhr, ajaxOptions, thrownError,) {
        if (!errorCallback === undefined) {
          alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
        }
      }
    });
    return html;
  }

  //region callback
  function callback_update(results, otherParams) {
    layer.closeAll('loading');
    layerMsg(results.msg);
    if (results.error == 0) {
      otherParams.table != undefined && func_table_refresh(otherParams.table);
      // && results.data != undefined
      // && $("#" + otherParams.table).bootstrapTable('updateByUniqueId', {id: results.data.id, row: results.data});
    }
  }

  function callback_remove(results, otherParams) {
    layer.closeAll('loading');
    layerMsg(results.msg);
    if (results.error == 0) {
      func_table_refresh(otherParams.table);
    }
  }

  function callback_remove_link(results, otherParams) {
    layer.closeAll();
    layerMsg(results.msg);
    if (results.error == 0) {
      $(otherParams._this).parent().parent().remove();
    }
  }

  function callback_add_link(results, otherParams) {
    if (results.error == 0) {
      layer.closeAll();
      layerMsg(results.msg);
      let link_html = get_buyers(otherParams.group_id);
      $(otherParams._this).parent().next().find('.row').html(link_html)
    } else {
      layer.closeAll('loading');
      layerMsg(results.msg);
    }
  }

  //endregion
  //region common functions
  function func_table_refresh(table_id) {
    $("#" + table_id).bootstrapTable('refresh');
  }

  function trim_keyup(e) {
    lucene_objInput = $(this);
    if (e.keyCode != 38 && e.keyCode != 40 && e.keyCode != 13) {
      let im = $.trim(lucene_objInput.val());
      lucene_objInput.val(im);
    }
  }

  function layerMsg(message, time = 2000) {
    layer.msg(message, {time: time});
  }

  function ajax(data, url, successCallback, otherParams = null, errorCallback = undefined) {
    $.ajax({
      url: url,
      type: 'POST',
      dataType: 'json',
      data: data,
      beforeSend: function () {
        layer.load();
      },
      success: function (json) {
        successCallback(json, otherParams);
      },
      error: function (xhr, ajaxOptions, thrownError,) {
        if (!errorCallback === undefined) {
          alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
        }
      }
    })
  }

  function cancelBubble(e) {
    let evt = e ? e : window.event;
    if (evt.stopPropagation) { //W3C 
      evt.stopPropagation();
    } else { //IE      
      evt.cancelBubble = true;
    }
  }

  let Base64 = {
    encode(str) {
      // first we use encodeURIComponent to get percent-encoded UTF-8,
      // then we convert the percent encodings into raw bytes which
      // can be fed into btoa.
      return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g,
        function toSolidBytes(match, p1) {
          return String.fromCharCode('0x' + p1);
        }));
    },
    decode(str) {
      // Going backwards: from bytestream, to percent-encoding, to original string.
      return decodeURIComponent(atob(str).split('').map(function (c) {
        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
      }).join(''));
    }
  };

  //endregion
</script>