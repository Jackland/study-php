{#匹配弹窗页面#}
{{ header }}
<style>
  .body-scroll{
    overflow: hidden;
    height: 100%;
  }
  .my-main-container{
    min-height: 500px;
    padding: 10px;
    text-align: center;
  }
  /*弹窗样式*/
  #saleOrderModal{
    font-size: 14px;
  }
  .modal-header{
    background: #183464;
    padding: 12px;
  }
  .modal-title{
    font-size: 16px;
    font-weight: normal;
    text-align: left;

  }
  .modal-header .close{
    background-color: #183464;
  }
  .modal-body,.modal-footer{
    background-color: #fff;
  }
  .modal-footer{
    border-top: none;
  }
  .modal-dialog{
    width: 1000px;
    margin: 10px auto;
  }
  #saleOrderModal .modal-body-title{
    text-align: left;
    color: #333;
    padding: 10px;
    margin-bottom: 6px;
    background: rgba(255,65,77,0.1);
    border-radius: 4px;
  }
  #saleOrderModal .modal-body-title .height-light{
    color: #fa6400;
  }
  .modal-footer{
    text-align: center;
  }
  .center{
    text-align: center;
  }
  .left{
    text-align: left;
  }
  .br4{
    border-radius: 4px;
  }
  .mb4{
    margin-bottom: 4px;
  }
  .mb6{
    margin-bottom: 6px;
  }
  .text-left{
    text-align: left;
  }
  .pl10{
    padding-left: 10px;
  }
  /* .left-time-content{
    display: inline-block;
    text-align: left;
  } */
  .mt4{
    margin-top: 4px;
  }
  #saleOrderModal select{
    font-size: 12px;
    height: 32px;
    padding: 6px 10px;
  }
  /*按钮样式*/
  .btn-primary {
    background-color: #3a75dc;
    border-color: #3a75dc;
    font-weight: normal;
  }

  .btn-primary:hover,
  .btn-primary:focus {
    background-color: #225cc1;
    border-color: #3a75dc;
  }
  /*计数器样式*/
  #saleOrderModal .input-group{
    width: 128px;
    vertical-align: middle;
    display: inline-table;
  }
  #saleOrderModal .input-group-addon{
    font-weight: bold;
    width: 40px;
    border-radius: 4px;
    font-size: 20px;
  }
  #saleOrderModal .input-group-addon:hover{
    cursor: pointer;
  }
  #saleOrderModal .input-group span{
    margin: 0 15px;
  }
  #saleOrderModal .input-group .form-control{
    padding:4px;
  }
  .error-color{
    color: #E64545;
    font-size: 12px;
  }
  .valid-money:hover{
    cursor: pointer;
    color: #3A75DC;
    text-decoration: underline;
  }
  #saleOrderModal .input-group-addon.add{
    border-radius: 0 4px 4px 0;
  }
  #saleOrderModal .input-group-addon.reduce{
    border-radius: 4px 0 0 4px;
  }
  /*表格固定头部*/
  .p0{
    padding: 0 !important;
  }
   .table > thead > tr > th{
    border-bottom:none;
  }
  /*滚动条样式*/
  #saleOrderModal ::-webkit-scrollbar { display: none; }
  /*滚动条样式*/

  /*气泡样式*/
  .bor-bt{
    border-bottom: 1px solid #eee;
  }
  .flex-bt{
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .tip-text{
    width: 290px;
    padding-bottom: 1px;
    margin-bottom: 1px;
  }
  #saleOrderModal #freight .dropdown-freight{
    margin-top: 0;
  }
  #saleOrderModal .v-m{
    vertical-align: middle;
  }
  #freight .dropdown-freight-hide{
    display: none;
  }
  /*自定义table样式--start--*/
  #content {
    width: 100%;
  }

  .table_row {
    display: table;
    table-layout: fixed;
    word-break: break-word;
    width: 100%;
    vertical-align: inherit;
    border-color: inherit;
  }

  .table_head {
    font-size: 15px;
    background: #eee;
    height: 60px;
  }

  .table_col {
    display: table-cell;
    text-align: center;
    border: 1px solid #eee;
    vertical-align: middle;
    line-height: 1.428571429;
    padding: 6px 8px;
    border-right: none;
    border-bottom: none;
  }

  .table_row inner_table .table_col:last-child{
    border-right: 1px solid #eee;
    border-bottom: 1px solid #eee;
  }

  .table_col img {
    width: 60px;
    height: 60px;
  }

  .flex_col {
    display: flex;
    flex-direction: column;
  }

  .flexAll {
    flex: 1;
  }
  .inner_table{
    padding: 0;
    border: unset;
  }
  /*自定义table样式--end--*/
  .m24-l {
    margin-left: 24px;
  }
  .main-fs {
    font-size: 14px;
  }
  .has-border-right{
    border-right: 1px solid #eee;
  }
  .has-border-bottom{
    border-bottom: 1px solid #eee;
  }
  .modal-sale-order-area{
    padding-left: 17px;
  }
  .form-control[disabled], fieldset[disabled] .form-control {
    font-size: 12px;
    height: 32px;
    padding: 6px 10px;
    margin-bottom: 0;
  }
  .span-time{
    padding: 4px 16px;
    color: #E64545;
    font-size: 12px;
    background: #FFE7E7;
    border-radius: 12px;
    margin-left: 10px;
  }
  .span-time .icon-naozhong{
    margin-right: 4px;
    vertical-align: middle;
  }
</style>
{#  正式弹窗部分#}
  <div class="modal fade" id="saleOrderModal" tabindex="-1" role="dialog" aria-labelledby="saleOrderModalLabel" aria-hidden="true"  data-backdrop="static" hidden>
    <div class="modal-dialog modal-sale-order-area" style="width: 1200px">
      <div class="modal-header sale-order-header">
        <button type="button" class="close sale-order-close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title" id="saleOrderModalLabel">Sale Order List</h4>
      </div>
      <div class="modal-body" style="padding-bottom: 0">
        <p class="modal-body-title"><i style="margin-right: 4px" class="height-light giga icon-chuku"></i> Please <span class="height-light">check inventory</span> to ensure there is enough available to fulfill your imported orders or <span class="height-light">purchase additional quantities</span> .
        <br>
          {% if international_notice %}
          <span class="m24-l">{{ international_notice }}</span>
          {% endif %}
        </p>
        <div class="list">
{#          要实现table内容滚动,拆开写table#}
          <div id="content">
            <div class="table_row table_head">
              <div class="table_col" style="width: 16%">Sales Order ID</div>
              <div class="table_col" style="width: 20%">Item Code</div>
              <div class="table_col" style="width: 8%">Qty</div>
              <div class="table_col" style="width: 14%">Inventory in Account</div>
              <div class="table_col" style="width: 8%">To Be Paid</div>
              <div class="table_col" style="width: 20%">Store &Transaction Type</div>
              <div class="table_col" style="width: 10%">Payment Amount</div>
              <div class="table_col" style="width: 4%">
                <input class="oris-checkbox size-small" name="check_box" onclick="selectAll(this)" data-set=".checkboxes" type="checkbox">
              </div>
            </div>
          </div>
          <div class="table-body" style="max-height: 400px;overflow: auto">
            <form id="matchBoxData" style="padding-bottom: 80px">
              <div id="content_row" class="has-border-right has-border-bottom"></div>
            </form>
            <div id="saleOrderFotter" class="modal-footer" style="position: fixed;width: 1168px;bottom: 0 ;padding: 18px 15px;z-index: 99">
              <div id = "error_msg" style="text-align: left"></div>
              <button id="to_buy" class="btn btn-primary " onclick="to_buy()" disabled="true">Submit</button>
              <button class="btn btn-primary " onclick="no_remind()">No Remind</button>
            </div>
          </div>
        </div>

      </div>
    </div>
  </div>
{#  正式弹窗部分#}
<script>
  $('#saleOrderModal').modal('show');
  $("#clickMe").click(function(){

    $('#saleOrderModal').modal('show');
  });
  $('body').addClass('body-scroll')
</script>
{#计数器#}
<script>
  $('#content_row').on('click','.reduce',function() {
    let input = $($(this).parent().find("input")[0]);
    input.val(Math.max(input.val() - 1,0));
    reInitMatchBox(input);
  });
  $('#content_row').on('click','.add', function() {
    let input = $($(this).parent().find("input")[0]);
    if (input.val() == "" || input.val() == undefined || input.val() == null) {
      input.val(0);
    }
    input.val(parseInt(input.val()) + 1);
    reInitMatchBox(input);
  });
  $('.sale-order-close').click(function(){
    $('body').removeClass('body-scroll')
  })
</script>
{#气泡#}
<script>
  $(function() {
    $('[data-toggle="tooltip"]').tooltip()
  })
</script>
<script>
  let jsonData;
  function to_buy() {
    var dataArray = $('#matchBoxData').serializeArray();
    var lineInfos = [] ;
    for(var i=0;i<dataArray.length;i++){
      var row ={};
      var name = dataArray[i].name;
      var splitArr = name.split('&');
      var splitName = splitArr[0];
      var lineId = splitArr[1];
      var count = splitArr[2]==undefined?'':"|"+splitArr[2];
      row[splitName+count] = dataArray[i].value;
      row.id = lineId;
      lineInfos.push(row);
    }
    jsonData = handlerDatas(lineInfos);
    var selectBox = $('#saleOrderModal').find("[name='salesOrderId[]']");
    var json = [];
    for (var i=0;i<selectBox.length;i++){
      var ischecked =  selectBox.eq(i).is(":checked");
      if (ischecked) {
        var headerIdArr = selectBox.eq(i).val().split(',');
       for(var j=0;j<headerIdArr.length;j++){
         for(var k=0;k<jsonData.length;k++){
           if(headerIdArr[j] == jsonData[k].id){
             json.push(jsonData[k]);
           }
         }
       }
      }
    }
    if (window.CNZZ) {
      $.each(json, function (k, v) {
        var type = '';
        if (v.salesOrderLine.trade == 0) {
          type = 'Normal';
        } else {
          type = $('option[value="' + v.salesOrderLine.trade + '"]').text().split(':')[0].trim();
        }
        window.CNZZ.triggerEvent('Sales Order Management', 'SO_AddtoCart', type)
      });
    }
    $.ajax({
      url: 'index.php?route=account/sales_order/match_inventory_window/toBuy',
      type: 'post',
      data: {"salesOrder":json},
      beforeSend: function() {
        $('#to_buy').button('loading');
      },
      success: function(json) {
        if(!json['status']){
          //添加错误提醒
          var html = "<i class='giga icon-gantanhao1' style='color: #FF414D' data-toggle='tooltip' data-html='true'></i><span class='error-color'>"+json['msg']+"</span>";
          $('#error_msg').html(html);
          $('#matchBoxData').css('padding-bottom', '102px');
        }else if(json['record_flag']){
          toPurchase(json['purchase_record_url']);
        }else{
          $('body').removeClass('body-scroll');
          $('#saleOrderModal').modal('hide');
          layerMsg(json['msg']);
          let params = getSearchQueryParams();
          block.blockUI();
          $('#salesOrderListPanel').load(order_url + '&' + $.param(params), function () {
            block.unBlockUI();
          });
        }
      },
      error: function(xhr, ajaxOptions, thrownError) {
        //添加错误
        var msg = 'Error(s) detected in your order submission. Please edit and try again.';
        var html = "<i class='giga icon-gantanhao1' style='color: #FF414D' data-toggle='tooltip' data-html='true'></i><span class='error-color'>"+msg+"</span>";
        $('#error_msg').html(html);
        $('#matchBoxData').css('padding-bottom', '102px');
      },
      complete: function() {
        $('#to_buy').button('reset');
      }
    });
  }
  function selectAll(checkbox) {
      var checked = $(checkbox).is(":checked");
      var selectBox = $('#saleOrderModal').find("[name='salesOrderId[]']");
      var submitFlag = false;
      if(checked){
        for (var i=0;i<selectBox.length;i++){
          if(!selectBox.eq(i).prop('disabled')){
            selectBox.eq(i).prop('checked', true);
          }
        }
        if(selectBox.length != 0){
          submitFlag = true;
        }
      }else{
        for (var i=0;i<selectBox.length;i++){
          if(!selectBox.eq(i).prop('disabled')) {
            selectBox.eq(i).prop('checked', false);
          }
        }
        submitFlag = false;
      }
    if(submitFlag){
      $('#to_buy').prop('disabled',false);
    }else{
      $('#to_buy').prop('disabled',true);
    }
  }
  function handlerDatas(arr){
    // arr 传过来的原数组
    let tempArr = [];
    let endData = [];
    for (let i = 0; i < arr.length; i++) {
      if (tempArr.indexOf(arr[i].id) === -1) {
        endData.push({
          id: arr[i].id,
          salesOrderLine:arr[i]
        });
        tempArr.push(arr[i].id);
      } else {
        for (let j = 0; j < endData.length; j++) {
          if (endData[j].id == arr[i].id) {
            endData[j].salesOrderLine = Object.assign(endData[j].salesOrderLine,arr[i]);
            break;
          }
        }
      }
    }
   return endData;
  }
  function toPurchase(url) {
    window.location = url;
  }
</script>
<script>
  function layerMsg(message, time = 5000) {
    layer.msg(message, {time: time, skin: ''});
  }
</script>
<script>
  function no_remind() {
    $('body').removeClass('body-scroll');
    $('#saleOrderModal').modal('hide');
    let url = order_url + '&' + $.param(getSearchQueryParams());
    block.blockUI();
    clearTimer();
    $('#salesOrderListPanel').load(url, function () {
      block.unBlockUI();
    });
  }
  //多seller选择
  function searchSeller(element,lineId) {
    var count = $(element).attr('mean');
    var to_be_paid = $(element).parent().parent().prev().find('input').eq(0).val();
    $.ajax({
      url: 'index.php?route=account/sales_order/match_inventory_window/getPriceAndQtyByProductId&product_id=' + element.value+'&toBePaid='+to_be_paid+'&lineId='+lineId,
      dataType: 'json',
      beforeSend: function () {
        layer.load(1);
      },
      success: function(json) {
        //更新Transaction Type框
        layer.closeAll();
        json['line_id'] = lineId
        json['sku'] = json.freight_sku
        json['product_id'] = json.freight_product_id
        json['sku_product_id'] = element.value
        json['screenname'] = json.seller_name
        json['freight_flag'] = true
        changedItemCode(lineId, json)
        changeProductImage(lineId, json, count)
        if(json['detail_show']){
          $('#dropdown_freight_'+count).addClass('dropdown-freight').removeClass('dropdown-freight-hide');;
        }else{
          $('#dropdown_freight_'+count).removeClass('dropdown-freight').addClass('dropdown-freight-hide');
        }
        // //修改欧洲补运费列展示数据
        // $('#freight_store_'+lineId).val(json['seller_id']);
        // $('#freight_store_name_'+lineId).val(json['seller_name']);
        // $('#freight_sku_'+lineId).text(json['freight_sku']);
        // $('#freight_item_code_'+lineId).val(json['freight_sku']);
        // $('#freight_qty_'+lineId).val(json['freight_qty']);
        // $('#freight_product_id_'+lineId).val(json['freight_product_id']);
        // $('#freight_seller_id_'+lineId).val(json['seller_id']);
        // $('#freight_image_'+lineId).attr('src',json['freight_image']);
        // $('#freight_price_all_'+lineId).text(json['freight_curr']);


        $('#store_'+count).val(json['seller_id']);
        $('#price_all_'+count).text(json['price_all']);
        $('#unit_price_'+count).text(json['price']);
        $('#freight_'+count).text(json['freight']);
        // $('#image_'+lineId).attr('src',json['image']);
        if(eval(to_be_paid)>eval(json['quantity'])){
          $('#trade_quantity_msg_'+count).show();
        }else{
          $('#trade_quantity_msg_'+count).hide();
        }
        $('#trade_quantity_'+count).text(json['quantity']);
        $('#trade_quantity_type_'+count).text(json['qty_type_str'] ?? 'Available');
        // $('select[id=\'' + transaction_type_select + '\']').attr('disabled',false);
        $("#transaction_type_select"+count).empty();
        var html_str = '';
        for (var i= 0; i < json['transaction_type'].length; i++) {
          if(json['transaction_type'][i]['selected'] == 1){
            html_str += "<option selected='selected' value="+ json['transaction_type'][i]['key']  +">"+json['transaction_type'][i]['value']+"</option>";
          }else{
            html_str += "<option value="+ json['transaction_type'][i]['key']  +">"+json['transaction_type'][i]['value']+"</option>";
          }

        }
        // if(json['transaction_type'].length == 1){
        //   $('select[id=\'' + transaction_type_select + '\']').attr('disabled',true);
        // }
        $("#transaction_type_select"+count).append(html_str);

        if(json['status'] == 'No'){
          $("#select_td_"+count).find('input').eq(0).attr('disabled',true);
        }else{
          $("#select_td_"+count).find('input').eq(0).attr('disabled',false);
        }
      },
      error: function(xhr, ajaxOptions, thrownError) {
        layer.closeAll();
        var tmplayer = layer.alert(thrownError + "<br>" + xhr.statusText + "<br>" + xhr.responseText, {
          title: 'Message',
          btn : 'OK',
          skin: 'yzc_layer' //样式类名
          ,closeBtn: 0
        }, function(){
          layer.close(tmplayer);
        });
      }
    });
  }

  function searchTransactionType(element) {
    var count = $(element).attr('mean');
    var product_id = $('#product_id'+count).val();
    var id = $('#store_'+count).val();
    var transaction_type = $(element).val();
    var to_be_paid = $(element).parent().parent().prev().find('input').eq(0).val();
    var transation_code=$(element).find("option:selected").attr("data-code");
    //现货与期货展示倒计时，其余隐藏
    if( transation_code == 2 || transation_code == 3){ //0:普通 1：返点  2：现货 3：期货  4：议价
      //console.log($(element).parent().parent());
    }else{
      var clearHtml = $(element).parent().parent().find('.left-time-content').html('');
    }
    $.ajax({
      url: 'index.php?route=account/sales_order/match_inventory_window/getPriceAndQtyByTransactionType&product_id=' + product_id+'&sellerId='+id + '&transaction_type=' + transaction_type +'&toBePaid='+to_be_paid,
      dataType: 'json',
      beforeSend: function () {
        layer.load(1);
      },
      success: function(json) {
        //更新Transaction Type框
        layer.closeAll();
        if(json['is_expire']){
          layer.msg(json['expire_error'], {time: 3000});
        }
        if(json['detail_show']){
          $('#dropdown_freight_'+count).addClass('dropdown-freight').removeClass('dropdown-freight-hide');
        }else{
          $('#dropdown_freight_'+count).removeClass('dropdown-freight').addClass('dropdown-freight-hide');
        }
        $('#price_all_'+count).text(json['price_all']);
        $('#unit_price_'+count).text(json['price']);
        $('#freight_'+count).text(json['freight']);
        if(eval(to_be_paid)>eval(json['quantity'])){
          $('#trade_quantity_msg_'+count).show();
        }else{
          $('#trade_quantity_msg_'+count).hide();
        }
        $('#trade_quantity_'+count).text(json['quantity']);
        $('#trade_quantity_type_'+count).text(json['qty_type_str'] ?? 'Available');

        if(json['status'] == 'No'){
          $("#select_td_"+count).find('input').eq(0).attr('disabled',true);
        }else{
          $("#select_td_"+count).find('input').eq(0).attr('disabled',false);
        }
      },
      error: function(xhr, ajaxOptions, thrownError) {
        layer.closeAll();
        var tmplayer = layer.alert(thrownError + "<br>" + xhr.statusText + "<br>" + xhr.responseText, {
          title: 'Message',
          btn : 'OK',
          skin: 'yzc_layer' //样式类名
          ,closeBtn: 0
        }, function(){
          layer.close(tmplayer);
        });
      }
    });
  }

  function changeNumber(obj) {
    var num = parseInt($(obj).val());
    if (isNaN(num)) {
      $(obj).val(1);
      reInitMatchBox(obj);
      return true;
    }
    reInitMatchBox(obj);
  }


  function checkAvailableQty(obj) {
    //修改该sku所有页面的数据展示
    //显示的使用库存数
    var num = parseInt($(obj).val());
    var item_code = $(obj).parent().parent().prev().prev().find('input').eq(0).val();
    //所有库存数量
    var cost_qty = $(obj).parent().parent().prev().prev().find('input').eq(2).val();
    //总体需要库存数量
    var need_qty = $(obj).parent().parent().prev().prev().find('input').eq(3).val();
    //可用库存数量
    var available_qty = $(obj).parent().parent().prev().prev().find('input').eq(4).val();
    //该明细需要的库存
    var order_qty = $(obj).parent().parent().prev().find('input').eq(0).val();
    //还需要购买的数量
    var to_buy_qty = $(obj).parent().parent().next().find('input').eq(0).val();
    //
    var available_qty_show  = $(obj).parent().next().find('span').eq(0).text();

    if(num>eval(order_qty)){
      $(obj).val(order_qty);
    }
    if(num<0){
      $(obj).val(0);
    }
    //变化的数量
    num = $(obj).val();
    var change_qty = eval(num)-eval(available_qty);
    $(obj).parent().next().next().find('span').eq(0).text('');
    if(change_qty>available_qty_show){
      change_qty = available_qty_show;
      num = eval(available_qty)+eval(available_qty_show);
      $(obj).val(num);
      $(obj).parent().next().next().find('span').eq(0).text('Maximum quantity used');
    }
    num = $(obj).val();
    //需要购买数量修改
    to_buy_qty = eval(to_buy_qty)-eval(change_qty);
    $(obj).parent().parent().next().find('span').eq(0).text(to_buy_qty);
    $(obj).parent().parent().next().find('input').eq(0).val(to_buy_qty);
    if(to_buy_qty>0){
      $(obj).parent().parent().next().next().find('select').eq(0).attr('disabled',false);
      $(obj).parent().parent().next().next().find('select').eq(1).attr('disabled',false);
    }else{
      $(obj).parent().parent().next().next().find('select').eq(0).attr('disabled',true);
      $(obj).parent().parent().next().next().find('select').eq(1).attr('disabled',true);
    }
    need_qty = eval(need_qty)+eval(change_qty);
    var quantity_show_new = eval(available_qty_show)-eval(change_qty);
    //修改need_qty
    $('[name="'+item_code+'_need"]').val(need_qty);
    //修改available_qty
    $(obj).parent().parent().prev().prev().find('input').eq(4).val(num);
    //修改所有对应的显示
    $('[name="'+item_code+'"]').text(quantity_show_new);
    //修改payment amount
    var count = $(obj).attr('mean');
    var product_id = $('#product_id'+count).val();
    var id = $('#store_'+count).val();
    var transaction_type = $('#transaction_type_select'+count).val();
    $.ajax({
      url: 'index.php?route=account/sales_order/match_inventory_window/getPriceAndQtyByTransactionType&product_id=' + product_id+'&sellerId='+id + '&transaction_type=' + transaction_type +'&toBePaid='+to_buy_qty,
      dataType: 'json',
      beforeSend: function () {
        layer.load(1);
      },
      success: function(json) {
        //更新Transaction Type框
        layer.closeAll();
        if(json['is_expire']){
          layer.msg(json['expire_error'], {time: 3000});
        }
        if(json['detail_show']){
          $('#dropdown_freight_'+count).addClass('dropdown-freight').removeClass('dropdown-freight-hide');
        }else{
          $('#dropdown_freight_'+count).removeClass('dropdown-freight').addClass('dropdown-freight-hide');
        }
        $('#price_all_'+count).text(json['price_all']);
        $('#unit_price_'+count).text(json['price']);
        $('#freight_'+count).text(json['freight']);
        if(eval(to_buy_qty)>eval(json['quantity'])){
          $('#trade_quantity_msg_'+count).show();
        }else{
          $('#trade_quantity_msg_'+count).hide();
        }
        $('#trade_quantity_'+count).text(json['quantity']);
        $('#trade_quantity_type_'+count).text(json['qty_type_str'] ?? 'Available');

        if(json['status'] == 'No' && json['detail_show']){
          $("#select_td_"+count).find('input').eq(0).attr('disabled',true);
        }else{
          $("#select_td_"+count).find('input').eq(0).attr('disabled',false);
        }
      },
      error: function(xhr, ajaxOptions, thrownError) {
        layer.closeAll();
        var tmplayer = layer.alert(thrownError + "<br>" + xhr.statusText + "<br>" + xhr.responseText, {
          title: 'Message',
          btn : 'OK',
          skin: 'yzc_layer' //样式类名
          ,closeBtn: 0
        }, function(){
          layer.close(tmplayer);
        });
      }
    });
  }

  $(document).on('click', "[name='salesOrderId[]']", function() {
    var selectBox = $('#saleOrderModal').find("[name='salesOrderId[]']");
    var submitFlag = false;
    for(var i=0;i<selectBox.length;i++){
      var isSelect = selectBox.eq(i).is(":checked");
      if(isSelect){
        submitFlag = true;
        break;
      }
    }
    if(submitFlag){
      $('#to_buy').prop('disabled',false);
    }else{
      $('#to_buy').prop('disabled',true);
    }
    checkIsSelectAll();
  });
  function checkIsSelectAll() {
    var $modal = $('#saleOrderModal');
    var $selectOne = $modal.find("input[name='salesOrderId[]']:enabled");
    var $selectOneChecked = $modal.find("input[name='salesOrderId[]']:enabled:checked");
    if ($selectOne.length === $selectOneChecked.length && $selectOne.length >0) {
      $modal.find('input[name=check_box]').prop('checked', true);
    } else {
      $modal.find('input[name=check_box]').prop('checked', false);
    }
  };
</script>
<script>
  $(function () {
   init_match_data();
   // init_europe_freight_data();
  });

  function init_match_data() {
    var salesOrderIdArr = {{ sales_order_id }};
    $.ajax({
      url: '{{ init_url }}',
      type: 'post',
      data: {"sales_order_id":salesOrderIdArr},
      beforeSend: function() {
        block.blockUI();
      },
      success: function(json) {
          combineTableHtml(json)
      },
      error: function(xhr, ajaxOptions, thrownError) {

      },

    });
  }
var itemArr = [];
  // 动态表格Html
  function combineTableHtml(resultData) {
    itemArr = [];
    var headList = resultData.headerInfo;
    var needCostMap = resultData.needCostMap;
    var productCostMap = resultData.productCostMap;
    var result = ''; // 动态tabele html变量
    var count = 0 // 记录明细总数量
    for(var i=0;i<headList.length;i++){
      if(headList[i]['salesInfo'].length==0){
        continue
      }
      var resultHtml = ''
      var isInTable = headList[i]['salesInfo'].length>1 //判断
      var item = {}
      var isLastFreight = false; // 是否是该订单最后一笔运费单
      // 首先判断父级下salesInfo数量
      if(headList[i]['salesInfo'].length>1){
        for(var sindex=0;sindex<headList[i]['salesInfo'].length;sindex++){
          count++;
          item = headList[i]['salesInfo'][sindex];
          itemArr.push(item);
          //表记运费单
          if(item.freight_flag){
            isLastFreight = true
          }
          resultHtml = resultHtml + `<div class="table_row inner_table">${getInnerItem(item, isInTable,needCostMap,productCostMap,count, headList[i]['sales_order_id'], isLastFreight)}</div>`
        }
        resultHtml = `<div class="table_col inner_table" style="width: 80%;">${resultHtml}</div>`
        resultHtml = handleRow(headList[i], resultHtml, count)
      } else if(headList[i]['salesInfo'].length==1) {
        count++;
        item = headList[i]['salesInfo'][0]
        itemArr.push(item);
        resultHtml = handleRow(headList[i], getInnerItem(item, isInTable, needCostMap, productCostMap,count, headList[i]['sales_order_id'], isLastFreight), count)
      }
      result = result + resultHtml
    }
    $('#content_row').html(result)
    timeCount(itemArr)
    block.unBlockUI();
  }

  function handleRow(headerInfo, resultHtml, count){
    // 循环headerInfo判断是否存在getErrorCol
    var hasErrorCol = false
    var concatId = '' //获取concatId
    for (var eIndex=0;eIndex<headerInfo.salesInfo.length;eIndex++){
        if (headerInfo['salesInfo'][eIndex]['concatId']) {
          concatId = headerInfo['salesInfo'][eIndex]['concatId']
        }
        if (headerInfo['salesInfo'][eIndex]['error_flag']||headerInfo['salesInfo'][eIndex]['address_error_flag']||(headerInfo['salesInfo'][eIndex]['freight_flag']&&headerInfo['salesInfo'][eIndex]['msg'])) {
            hasErrorCol = true
        }
    }
    return `<div class="table_row">
              <div class="table_col" style="width: 16%;">
                ${headerInfo.sales_order_id}${headerInfo.international_flag?'&nbsp;<span data-trigger = "hover" data-toggle="tooltip" title="[International Order] The shipping address is located outside of country of origin." style="color:#FA6400;"><img src="catalog/view/theme/yzcTheme/image/cart/interorder.png" style="width: 22px;height: 22px;" alt=""></span>':''}
                ${headerInfo.error_msg&&headerInfo.salesInfo.length>0&&headerInfo.salesInfo[0]['address_error']?`<span data-trigger = "hover" data-toggle="tooltip" title="${headerInfo.salesInfo[0]['address_error']}" class="error-color main-fs"><img src="catalog/view/theme/yzcTheme/image/cart/noprice.png" alt="" style="width: 22px;height: 22px;"></span>`:''}
              </div>${resultHtml}
              <div class="table_col" style="width: 4%;" id="select_td_${count}">${hasErrorCol?'':`<input class="oris-checkbox size-small" name="salesOrderId[]" data-set=".checkboxes" type="checkbox" value="${concatId}">`}
              </div>
            </div>`
  }

  function getInnerItem(item, isInTable, needCostMap, productCostMap, count, sales_order_id, isLastFreight){
    var result = ''
    if (item['error_flag']||(item['freight_flag']&&item['msg'])){
        result = getItemCodeCol(item, isInTable, needCostMap, productCostMap, sales_order_id, count, isLastFreight)
                +getQtyCol(item, isInTable)
                +getErrorCol(item, isInTable)
    } else {
        result = getItemCodeCol(item, isInTable, needCostMap, productCostMap, sales_order_id, count, isLastFreight)
                +getQtyCol(item, isInTable)
                +getStockCol(item, isInTable, needCostMap, productCostMap,count)
                +getTobePaidCol(item, isInTable)
                +getStoreTransCol(item, isInTable, count)
                +getPaymentCol(item, isInTable, count)
    }
    return result
  }

  // 返回error_msg对象中所有错误信息
  function getErrorMessage(errObj){
    var resultError = '';
    for(var key in errObj) {
      resultError += errObj[key]
    }
    return resultError;
  }

  function getErrorCol(data, isInTable) {
    return `<div class="table_col" style="width: ${isInTable?'65%' : '52%'}">
                <span class="error-color">${data.freight_flag?data['msg']:getErrorMessage(data['error_msg'])}</span>
            </div>`
  }

  function getPaymentCol(data, isInTable, count){
    var payHtml = `<div class="table_col" style="width: ${isInTable?'12.5%':'10%'};">`
    if (data.freight_flag) {
        payHtml = payHtml + `<span id="freight_price_all_${data.line_id}">${data.freight_curr}</span>`
    } else {
        for(var i=0;i<data.store_trades.length;i++){
            if (data.store_trades[i].product_id == data.first_get.product_id) {
                payHtml = payHtml
                 + `<div id="freight" style="position: relative">
                      <span class="valid-money popover-tip" id="price_all_${count}" data-toggle="popover">${data.first_get.price_all_show}</span>
                      <div id="dropdown_freight_${count}" style="width: 310px;margin-left: -174px;padding: 0px" ${data.first_get.detail_show?`class="dropdown-freight"`:'hidden'}>
                        <div class="arrow"></div>
                        <div class="popover-content" style="padding:0 6px">
                          <p style="font-size: 12px;color: #fb6400">Payment Amount=（Unit Price+Fulfillment Per Unit ）*QTY</p>
                          <p class="tip-text bor-bt flex-bt"><span style="color: #333">Unit Price</span>
                            <span id="unit_price_${count}" style="color: #333">${data.store_trades[i].trade_mode.price}</span></p>
                          <p class="tip-text  flex-bt"><span style="color: #333">Fulfillment Per Unit</span>
                            <span id="freight_${count}" style="color: #333">${data.store_trades[i].trade_mode.freight}</span></p>
                        </div>
                      </div>
                    </div>`
            }
        }
    }
    return payHtml + '</div>'
  }

  var timerContent=null;
  function getStoreTransCol(data, isInTable, count){
    var availHtml = '';
    var left_time_secsHtml = '';
    var colhtml = `<div class="table_col text-left" style="width: ${isInTable?'25%':'20%'};">`
    if (data.freight_flag) {
        colhtml = colhtml
                    + `<div>
                        <input id="freight_store_name_${data.line_id}_${count}" class="form-control br4 mb4" value="${data.screenname}" disabled/>
                      </div>`
    } else {
        var trade_mode = [] //默认选中的trade_mode
        var storeOption = '' // 店铺store下拉框选项option
        for(var storeIndex=0;storeIndex<data.store_trades.length;storeIndex++){
          storeOption = storeOption + `<option value="${data.store_trades[storeIndex]['product_id']}" ${data.first_get.product_id==data.store_trades[storeIndex]['product_id']?'selected':''}>${data.store_trades[storeIndex]['screenname']}</option>`
          if (data.first_get.product_id==data.store_trades[storeIndex]['product_id']) {
            console.log(data)
            //默认选中产品，获取trade_mode
            trade_mode = data.store_trades[storeIndex]['trade_mode']['transaction_type']
            availHtml = `<div id="trade_quantity_msg_${count}" class="text-left pl10 mt4 error-color" ${data.qty-data.cost_map<=data.store_trades[storeIndex].trade_mode.quantity?'hidden':''}><span id="trade_quantity_${count}">${data.store_trades[storeIndex].trade_mode.max_quantity ?? data.store_trades[storeIndex].trade_mode.quantity}</span> <span id="trade_quantity_type_${count}">${data.store_trades[storeIndex].trade_mode.qty_type_str ?? 'Available'  }</span> to Purchase</div>`
          }
          left_time_secsHtml = '<span class="left-time-content"></span>';
          for(var i =0;i<trade_mode.length;i++){
              if(trade_mode[i]['key'] == data.first_get.trade_mode){
                if("left_time_secs" in trade_mode[i]){
                  var time =(trade_mode[i]['left_time_secs']);
                  if(time>24*60*60){//大于1天
                    var datyTime=time/86400;
                    var parseIntDay=parseInt(time/86400);
                    var showDay;
                    if(datyTime>parseIntDay && datyTime>1){ // 进1
                      if(trade_mode[i]['type'] ==3) {
                        showDay = parseIntDay + 1 > 7 ? 7 : parseIntDay + 1;
                      }else{
                        showDay = parseIntDay + 1;
                      }
                    }else{
                      if(trade_mode[i]['type'] ==3) {
                        showDay=datyTime > 7 ? 7 : datyTime;
                      }else{
                        showDay=datyTime;
                      }
                    }
                    if(showDay > trade_mode[i]['day'] && trade_mode[i]['type'] == 2){ //现货过期时间不能大于协议时间
                       showDay =trade_mode[i]['day'];
                    }
                    if(trade_mode[i]['type'] == 2 || trade_mode[i]['type'] ==3){  // 类型为2 、3 才显示
                      var dayLeft = showDay > 1 ? 'days Left ' : 'day Left ';
                      left_time_secsHtml=`<span class="left-time-content"><span class="span-time"><i class="giga giga icon-naozhong"></i>${showDay} ${dayLeft}</span></span>`;
                    }
                  }else{//小于或等于1天
                    var resaultTime=secondToDate(time);
                    if((trade_mode[i]['type'] == 2 || trade_mode[i]['type'] ==3) &&  time >0){ // 类型为2 、3 才显示
                      left_time_secsHtml=`<span class="left-time-content"><span class="span-time"><i class="giga giga icon-naozhong"></i>${resaultTime}</span></span>`
                    }
                  }
                }
              }
          }
        }
        colhtml = colhtml + `<div class="mb6"><select id="product_id${count}" class="form-control br4 mb4 product_select" name="product_id&${data.id}" mean="${count}" onchange="searchSeller(this,${data.id});" ${data.qty-data.cost_map==0?'disabled':''}>${data.store_trades.length>0?storeOption:"<option value=''>N/A</option>"}</select><input id="store_${count}" name="store&${data.id}" value="${data.first_get.seller_id}" hidden/></div>`
        var trade_option = '' // trade下拉框option
        for(var tradeIndex=0;tradeIndex<trade_mode.length;tradeIndex++){
          trade_option = trade_option + `<option value="${trade_mode[tradeIndex]['key']}" ${trade_mode[tradeIndex]['key']==data.first_get.trade_mode? 'selected': ''}  data-code ="${trade_mode[tradeIndex]['type']}">${trade_mode[tradeIndex]['value']}</option>`
        }
        colhtml = colhtml + `<div class="mb6"><select id="transaction_type_select${count}" class="form-control br4 mb4 transaction_type_select" name="trade&${data.id}" mean="${count}" onchange="searchTransactionType(this)" ${data.qty-data.cost_map==0?'disabled':''}>${data.store_trades.length>0?trade_option:"<option value=''>N/A</option>"}</select></div>`+left_time_secsHtml+ availHtml
    }
    return colhtml + '</div>'
  }
  function secondToDate(date) {//时间转换
    if(date <0){
      date =0;
    }
		var h = Math.floor(date / 3600) < 10 ? '0'+Math.floor(date / 3600) : Math.floor(date / 3600);
		var m = Math.floor((date / 60 % 60)) < 10 ? '0' + Math.floor((date / 60 % 60)) : Math.floor((date / 60 % 60));
		var s = Math.floor((date % 60)) < 10 ? '0' + Math.floor((date % 60)) : Math.floor((date % 60));
    var time=h + ":" + m + ":" + s;
		return time;
	}


  $('#saleOrderModal').on('hide.bs.modal', function () {
      clearInterval(timerContent);
   });
  function getTobePaidCol(data, isInTable) {
    return `<div class="table_col" style="width: ${isInTable?'10%':'8%'};">
                ${data.freight_flag?'--':`<span>${data.qty-data.cost_map}</span>
                    <input name="to_buy_qty&${data.id}" value="${data.qty-data.cost_map}" hidden/>`}
            </div>`
  }

  function getStockCol(data, isInTable, needCostMap, productCostMap, count) {
    var htmlBody= `<div class="table_col" style="width: ${isInTable?'17.5%':'14%'};">`
    if(productCostMap[data.item_code]>0&&!data.freight_flag) {
        htmlBody = htmlBody +
                    `<div class="input-group">
                      <span class="input-group-addon reduce" mean="${count}"> - </span>
                      <input onkeyup="value=value.replace(/\D/g,'')" type="text" size="1" mean="${count}" onchange="changeNumber(this)" class="form-control center" name="cost_qty&${data.id}" value="${data.cost_map}" max="${data.qty}">
                      <span class="input-group-addon add" mean="${count}"> + </span>
                      <input name="line_id" value="${data.id}" hidden />
                    </div>
                     <div class="available-number center error-color " hidden>
                        <span name="${data.item_code}">${productCostMap[data.item_code]-needCostMap[data.item_code]<0?0
                          :productCostMap[data.item_code]-needCostMap[data.item_code]}</span>Available
                     </div>
                     <div class="available-number center error-color "><span></span></div>`
    } else if (data.freight_flag) {
        htmlBody = htmlBody + '--'
    } else {
        htmlBody = htmlBody + `<div class="available-number center">
                                <span name="${data.item_code}">0</span>
                               </div>`
    }
    return htmlBody + '</div>'
  }

  function getQtyCol(data, isInTable){
    return `<div class="table_col" style="width: ${isInTable?'10%':'8%'};">
              ${data.freight_flag?`--`:`${data.qty}<input name="qty&${data.id}" value="${data.qty}" hidden/>`}
           </div>`
  }

  function getItemCodeFreightHtml(data, sales_order_id, count) {
    return   `<div style="display: flex">
                <div style="margin-right: 8px;display: flex;flex-direction: column;justify-content: space-around">
                    <img id="freight_image_${data.line_id}_${count}" src="${data.freight_image||data.image}">
                </div>
                <div style="display: flex;flex-direction: column;justify-content: space-between">
                    <div style="text-align: left" id="freight_sku_${data.line_id}_${count}">${data.sku}</div>
                    <div style="background: #ffebde;width: 62px;"><span style="font-size:12px;color: #ff6600;margin: 5px 3px">Fulfillment</span></div>
                </div>
              </div>
              <input id="freight_item_code_${data.line_id}_${count}" name="freight_item_code&${data.line_id}&${count}" value="${data.sku}" hidden/>
              <input name="freight_sales_order_id&${data.line_id}&${count}" value="${sales_order_id}" hidden/>
              <input id="freight_qty_${data.line_id}_${count}" name="freight_qty&${data.line_id}&${count}" value="${data.freight_qty}" hidden/>
              <input id="freight_product_id_${data.line_id}_${count}" name="freight_product_id&${data.line_id}&${count}" value="${data.product_id}" hidden/>
              <input id="freight_sku_product_id_${data.line_id}_${count}" name="freight_sku_product_id&${data.line_id}&${count}" value="${data.sku_product_id}" hidden/>
              <input name="freight_flag&${data.line_id}&${count}" value="${data.freight_flag}" hidden/>
              <input id="freight_seller_id_${data.line_id}_${count}" name="freight_seller_id&${data.line_id}&${count}" value="${data.seller_id}" hidden/>
              <input id="freight_order_product_id_${data.line_id}_${count}" name="freight_order_product_id&${data.line_id}&${count}" value="${data.order_product_id ? data.order_product_id : ''}" hidden/>
              <input id="freight_per_qty_${data.line_id}_${count}" name="freight_per_qty&${data.line_id}&${count}" value="${data.per_qty ? data.per_qty : ''}" hidden/>`
  }

  function getItemCodeCol(data, isInTable, needCostMap, productCostMap, sales_order_id, count, isLastFreight) {
    // 给该订单最后一笔运费添加记好 class: last_freght_id
    return `<div style='text-align: left' class="table_col ${isLastFreight? `last_freght_${data.line_id}`:''}" mean=${count} style="width: ${isInTable?'25%':'20%'};">${data.freight_flag?`${getItemCodeFreightHtml(data,sales_order_id, count)}`:`
              <img style='margin-right: 8px' id="image_${data.id}" src="${data.first_get.image_show}">${data.item_code}
              <input name="item_code&${data.id}" value="${data.item_code}" hidden/>
              <input name="sales_order_line_id&${data.id}" value="${data.id}" hidden/>
              <input name="sales_order_id&${data.id}" value="${data.header_id}" hidden/>
              <input value="${productCostMap[data.item_code]}" hidden/>
              <input name="${data.item_code}_need" value="${needCostMap[data.item_code]}" hidden/>
              <input name="${data.item_code}_available" value="${data.cost_map}" hidden/>`}
            </div>`
  }

  function reInitMatchBox(obj) {
    var salesOrderIdArr = {{ sales_order_id }};
    var changeData = traverseStockCol();
    $.ajax({
      url: '{{ init_url }}',
      type: 'post',
      data: {"sales_order_id":salesOrderIdArr,"changeData":changeData},
      beforeSend: function() {
        block.blockUI();
      },
      success: function(json) {
        combineTableHtml(json)
      },
      error: function(xhr, ajaxOptions, thrownError) {

      },

    });
  }

  // 遍历所有Warehouse Stock数量
  function traverseStockCol(){
    var salesOrderID = $('#content_row').find('div.input-group')
    var result = []
    for (var i=0; i<salesOrderID.length;i++){
      var inputArray = $(salesOrderID[i]).find('input')
      result.push({
        'sales_order_line_id': inputArray.eq(1).val(),
        'qty': inputArray.eq(0).val()
      })
    }
    return result
  }

  function changedItemCode(lineId, itemData){
    // 找到最后一个运费订单
    var oldFreight = $('#content_row').find(`.last_freght_${lineId}:last`)
    // 记录原来count
    var count = $(oldFreight).attr('mean')
    var newFreightHtml = getInnerItem(itemData, true, {}, {}, count, itemData.sales_order_id, true)
    oldFreight.parent().html(newFreightHtml)
    itemArr.forEach(item=>{ //刷新itemArr
      if(item.id === lineId){
        item = itemData
      }
    })
  }

  function timeCount(itemArr){
    timerContent && clearInterval(timerContent);
    timerContent = setInterval(() => {
      var trade_mode = [] //默认选中的trade_mode
      var productSelect = $(".product_select")
      var typeSelect = $(".transaction_type_select");
      for(var k=0;k<itemArr.length;k++){
        data = itemArr[k];
        if(data.store_trades){
          for(var storeIndex=0;storeIndex<data.store_trades.length;storeIndex++){
            if (productSelect.eq(k).val()==data.store_trades[storeIndex]['product_id']) {
                //默认选中产品，获取trade_mode
                trade_mode = data.store_trades[storeIndex]['trade_mode']['transaction_type']
                for(var i =0;i<trade_mode.length;i++){
                    if(trade_mode[i]['key'] == typeSelect.eq(k).val()){
                      if("left_time_secs" in trade_mode[i]){
                        var time =(trade_mode[i]['left_time_secs']);
                        if(time>0){
                          time--
                        }
                        trade_mode[i]['left_time_secs'] = time
                        if(time>24*60*60){//大于1天
                          var datyTime=time/86400;
                          var parseIntDay=parseInt(time/86400);
                          var showDay;
                          if(datyTime>parseIntDay && datyTime>1){ // 进1
                            if(trade_mode[i]['type'] ==3) {
                              showDay = parseIntDay + 1 > 7 ? 7 : parseIntDay + 1;
                            }else{
                              showDay = parseIntDay + 1;
                            }
                          }else{
                            if(trade_mode[i]['type'] ==3) {
                              showDay=datyTime > 7 ? 7 : datyTime;
                            }else{
                              showDay=datyTime;
                            }
                          }
                          if(showDay >trade_mode[i]['day'] && trade_mode[i]['type'] == 2 ){ //过期时间不能大于协议时间
                            showDay =trade_mode[i]['day'];
                          }
                          if(trade_mode[i]['type'] == 2 || trade_mode[i]['type'] ==3){// 类型 2 3 显示倒计时
                            $(".left-time-content").eq(k).html(`<span class="span-time"><i class="giga giga icon-naozhong"></i>`+showDay+`&nbsp;days Left`+`</span>`);
                          }else{
                            $(".left-time-content").eq(k).html("");
                          }
                        }else{//小于或等于1天
                          var resaultTime=secondToDate(time);
                          if((trade_mode[i]['type'] == 2 || trade_mode[i]['type'] ==3) && time >=0){ // 类型 2 3 显示倒计时
                            $(".left-time-content").eq(k).html(`<span class="span-time"><i class="giga giga icon-naozhong"></i>`+resaultTime+`</span>`);
                          }else{
                            $(".left-time-content").eq(k).html("");
                          }
                        }
                      }else{
                        $(".left-time-content").eq(k).html("")
                      }
                    }
                }
              }
          }
        }
      }
    }, 1000);
  }

  function changeProductImage(lineId, itemData, count){
    // 修改图片src
    $(`#content_row #image_${lineId}`).attr('src',itemData.image)
    // 修改 Available to Purchase
    // if (itemData.quantity === 0) {
    //   $(`#content_row #trade_quantity_${count}`).text(itemData.quantity);
    //   $(`#content_row #trade_quantity_msg_${count}`).show();
    // } else {
    //   $(`#content_row #trade_quantity_msg_${count}`).hide();
    // }
  }

</script>
{{ footer }}
