{% for style in styles %}
  <link href="{{ style }}" type="text/css" rel="stylesheet"/>
{% endfor %}
{% for script in scripts %}
  <script type="text/javascript" src="{{script}}"></script>
{% endfor %}
<style>
  .break-line {
    word-wrap: break-word;
    word-break: break-all;
  }
  .buyer-group-row {
    align-items: center;
  }
  {# vat 覆盖样式 #}
  .bootstrap-table .fixed-table-container .fixed-table-body {
    overflow-x: initial;
    overflow-y: initial;
  }
</style>

<link rel="stylesheet" type="text/css" href="catalog/view/javascript/bootstrap-select18/bootstrap-select.min.css">
<link rel="stylesheet" type="text/css" href="catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css">

<div class="page_active msgcent msgcent-mymessage">
  <div class="oris-row msgb-search-row">
    <div class="oris-col-3 mymessage-col">
      <label for="input-filter-buyer_name" class="control-label mymessage-label">{{ f_column_name_or_buyer_number }}</label>
      <input type="text" placeholder="{{ f_column_name_or_buyer_number }}" id="input-filter-buyer_name"
        class="form-control oris-input"/>
    </div>

    <div class="oris-col-3 mymessage-col oris-select">
      <label for="input-filter-buyer_groups" class="control-label mymessage-label">{{ f_column_buyer_group }}</label>
      <select name="filter_status" id="input-filter-buyer_groups" class="selectpicker">
        <option value="">{{ text_select }}</option>
        {% for buyer_group in buyer_groups %}
          <option value="{{ buyer_group.buyer_group_id }}">
            {{ buyer_group.name ~ (buyer_group.is_default?'(Default)':'') }}
          </option>
        {% endfor %}
      </select>
    </div>

    <div class="oris-col-3 mymessage-col">
      <label class="mymessage-label" for="input-filter-date">{{ f_column_last_transaction_time }}</label>
      <div class="oris-ingroup action-clear">
        <input type="text" name="filter_date" readonly class="oris-input" id="input-filter-date" value=""
              placeholder="{{ __('请选择', {}, 'common') }}"/>
        <i class="giga icon-v10quxiao-01 oris-clear" data-action-range="1"></i>
      </div>
    </div>

    <div class="oris-col-3 mymessage-col oris-select">
      <label class="mymessage-label" for="filter_language">Languages Acceptable</label>
      <select name="filter_language" id="input-filter-language" class="selectpicker">
        <option value="">{{ text_select }}</option>
        <option value="0">All are acceptable</option>
        <option value="2">English Only</option>
        <option value="1">Chinese Only</option>
      </select>
    </div>

    <div class="oris-row">
      <div class="oris-col-3 mymessage-col search-button mt-10">
        <button type="button" onclick="func_filter(this);" class="oris-button-bigger oris-button btn-filter mr-10">
          Filter
        </button>
        <button type="button" onclick="func_reset_filter();"
            class="oris-button-default oris-button-bigger oris-button mr-10 reset" data-toggle="tooltip" data-placement="top" data-original-title="Reset">
          Reset
        </button>
        <button type="button" onclick="func_download();"
                class="oris-button oris-button-default"  data-toggle="tooltip" data-placement="top" data-original-title="Download">
          <i class="fa fa-download"></i>
        </button>
      </div>
    </div>
  </div>

  <div class="oris-row mt-10 mb-20">
    <button type="button" onclick="func_batch_set_group(this)" class="oris-button oris-button-outline mr-10">
      {{ text_set_buyer_group }}</button>
    <button type="button" onclick="func_batch_set_status(this)" class="oris-button oris-button-outline mr-10">
      {{ text_set_disable }}</button>
    <button type="button" onclick="func_batch_contact()" class="oris-button oris-button-outline mr-10">
      {{ text_contact_buyer }}</button>
  </div>

</div>

{#set buyer group 弹窗#}
<div class="hidden-set_buyer_group" style="display: none">
  <div class="form-inline text-center msgcent" style="margin: 0 15px">
    <div class="oris-ingroup oris-select buyer-group-row mb-24">
      <label class="mr-10">Group</label>
      <select name="input_buyer_group" id="input_buyer_group_id" >
        <option value="">{{ text_no_group }}</option>

        {% for buyer_group in buyer_groups %}
          <option value="{{ buyer_group.buyer_group_id }}" {{ buyer_group.is_default ? 'selected' : '' }} >
            {{ buyer_group.name ~ (buyer_group.is_default ? '(Default)' : '') }}
          </option>
        {% endfor %} }}
      </select>


    </div>
  </div>
  <div id="buyer_group_msg"></div>
</div>
<div id="all-checked"></div>

<table class="table table-striped table-hover oris-table msgcent" id="table_active">
</table>

<script src="catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.js" type="text/javascript"></script>
<script type="text/javascript" src="catalog/view/javascript/bootstrap-select18/bootstrap-select.min.js"></script>

<script>
  $(function() {
    //初始化select控件
    $('#input-filter-buyer_groups').selectpicker();
    $('#input_buyer_group_id').selectpicker();
    $('#input-filter-language').selectpicker();

  })

  let url_page_active = '{{ url_page_active }}';
  let url_list_active = '{{ url_list_active }}';
  let json_buyer_groups = eval('{{ json_buyer_groups }}');
  //全选的数据
  var allCheckedData = []

  const dateRangeto = '   To   ';
  $(function(){
      $('[data-toggle="tooltip"]').tooltip();
  });
  $(function () {
    init_time_picker();
    init_table();

    orisComponents.initClearInputIcon();
    orisComponents.clearInputIcon();
  });

  $(document).keyup(function (e) {
    if (parseInt(e.which) === 13) {
      func_filter();
    }
  });

  //勾选全部的联系人
  function selectAll() {
    let query_params = {};
    let filter_name = $("#input-filter-buyer_name").val().trim();
    let filter_buyer_group_id = $("#input-filter-buyer_groups").val().trim();
    let dateArr = $('.page_active #input-filter-date').val().split(dateRangeto);
    let filter_date_from = dateArr[0] ? dateArr[0] + ' 00:00:00' : '';
    let filter_date_to = dateArr[1] ? dateArr[1] + ' 23:59:59' : '';
    let language = $("#input-filter-language").val();

    filter_name && (query_params.filter_name = filter_name);
    filter_buyer_group_id && (query_params.filter_buyer_group_id = filter_buyer_group_id);
    filter_date_from && (query_params.filter_date_from = filter_date_from);
    filter_date_to && (query_params.filter_date_to = filter_date_to);
    if (language !== '') {
      query_params.filter_language = language;
    }
    let url = 'index.php?route=customerpartner/message_center/message/getAllBuyers'
    $.ajax({
      type:'GET',
      url:url,
      data:query_params,
      async:false,
      success:function (res) {
        allCheckedData = res.data;
      }
    })
    $('#all-checked').html(`<div  class="checked-item">
      <span>Already selected ${allCheckedData.length} contacts on this page</span>
      <span class="checkall-btn" onclick="cancelSelect()">Cancel the selection</span>
      </div>`)
  }

  //取消勾选全部
  function cancelSelect() {
      $("[name='btSelectAll']").click();
      allCheckedData = []
  }

  function init_time_picker() {
    $('#input-filter-date').daterangepicker({
      separator: dateRangeto,
      format: 'YYYY-MM-DD'
    }, function (start, end, label) {
      orisComponents.triggerInputClear($('#input-filter-date'));
    });
  }

  //region Filter
  function func_filter() {
    if ($(".btn-filter").attr('disabled')) {
      return false;
    } else {
      $(".btn-filter").button('loading');
    }
    $("#table_active").bootstrapTable('refreshOptions', {
      pageNumber: 1,
    });
  }

  function func_reset_filter(_this) {
    $('#pane-active_page').load(url_page_active);
  }

  function func_download() {
    let url_download = '{{ url_download }}';

    let filter_name = $(".page_active #input-filter-buyer_name").val().trim();
    let filter_buyer_group_id = $(".page_active #input-filter-buyer_groups").val().trim();

    let dateArr = $('.page_active #input-filter-date').val().split(dateRangeto);
    let filter_date_from = dateArr[0] ? dateArr[0] + ' 00:00:00' : '';
    let filter_date_to = dateArr[1] ? dateArr[1] + ' 23:59:59' : '';

    // @todo 语言过滤
    let filter_language = $(".page_active #input-filter-language").val().trim();
    if (filter_language) {
      url_download += '&filter_language=' + filter_language;
    }

    if (filter_name) {
      url_download += '&filter_name=' + filter_name;
    }

    if (filter_buyer_group_id) {
      url_download += '&filter_buyer_group_id=' + filter_buyer_group_id;
    }
    if (filter_date_from) {
      url_download += '&filter_date_from=' + filter_date_from;
    }
    if (filter_date_to) {
      url_download += '&filter_date_to=' + filter_date_to;
    }
    let language = $("#input-filter-language").val();
    if (language !== '') {
      url_download += '&filter_language=' + language;
    }

    window.location.href = url_download;
  }

  //end of region Filter

  //region operation of batch
  function func_batch_set_group(_this) {
    let selected_rows = $("#table_active").bootstrapTable('getSelections');
    let ids = [];
    if(allCheckedData.length>0){
      $.each(allCheckedData, function (k, v) {
        ids[k] = v.id;
      });
    } else {
      $.each(selected_rows, function (k, v) {
        ids[k] = v.id;
      });
    }
    if (ids.length <= 0) {
      layerMsg('{{ error_choose_checkboxes }}', 1500);
      return;
    }

    let data = {ids: ids.join('_'), buyer_group_id: 0};

    let lay = {};
    lay.layTitle = '{{ text_set_buyer_group }}';
    lay.alertMsg = '{{ alert_set_buyer_group }}';
    $("#buyer_group_msg").html(`<div align="center" style="margin: 0 15px 15px 10px">
        <span style="color: red">${lay.alertMsg.replace('_count_', ids.length)} </span>
      </div>`)
    lay.layContent = $(".hidden-set_buyer_group")

    lay.layBtn = ['Save', 'Cancel'];
    lay.area = ['auto', 'auto'];
    let saveClickFlag = false;
    
    layer.open({
      skin: 'oris-layer set-group-layer',
      type: 1,
      shadeClose: false,
      closeBtn: 0,
      id: 'LAY_layuipro',
      area: lay.area,
      title: lay.layTitle,
      content: lay.layContent,
      btn: lay.layBtn,
      success: function() {
        $('#input_buyer_group_id').selectpicker('refresh');
      },
      yes: function (layerIndex, layerObj) {
        if (saveClickFlag) {
          return;
        }
        saveClickFlag = true;
        data.buyer_group_id = $(layerObj).find("select").val();
        $.ajax({
          url: 'index.php?route=account/customerpartner/buyer_management/list/batchSetGroup',
          type: 'post',
          dataType: 'json',
          data: data,
          beforeSend: function () {
            layer.load();
          },
          success: function (json) {
            layer.close(layerIndex);
            layer.closeAll('loading');
            layerMsg(json.msg, 2000);
            if (parseInt(json.error) === 0) {
              refresh_table('table_active');
            }
          },
          error: function (xhr, ajaxOptions, thrownError) {
            alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
          }
        });
      },
      btn2: function (index, layerObj) {
        layerMsg('Cancel');
      }
    });
  }

  function func_batch_set_status(_this) {
    let selected_rows = $("#table_active").bootstrapTable('getSelections');
    let ids = [];
    if(allCheckedData.length>0){
      $.each(allCheckedData, function (k, v) {
        ids[k] = v.id;
      });
    } else {
      $.each(selected_rows, function (k, v) {
        ids[k] = v.id;
      });
    }
    if (ids.length <= 0) {
      layerMsg('{{ error_choose_checkboxes }}', 1500);
      return;
    }

    let data = {ids: ids.join('_'), type: 3};

    let content = '{{ text_set_status_0_content }}';
    let lay = {
      layTitle: '{{ text_set_status_0_layer_title }}',
      area: ['450px', '280px'],
      layBtn: ['Yes', 'No'],
      layContent: '<div>' + '<span>' + content.replace('#', ids.length) + '</span>' + '</div>'
    };
    layerOpen(data, lay);
  }

  function func_one_contact(buyer_id, user_number, nickname)
  {
    let customerId = '{{ customer_id }}';
    let buyers = [];
    buyers.push({buyer_id: buyer_id, nickname: nickname.trim(), user_number: user_number});

    localStorage.setItem('new-message-from-' + customerId, JSON.stringify(buyers));
    window.location.href = '{{ url('customerpartner/message_center/message/new', {is_jump: 1}) }}';
  }

  function func_batch_contact() {
    let selected_rows = $("#table_active").bootstrapTable('getSelections');
    let buyers = [];

    let dateArr = $('.page_active #input-filter-date').val().split(dateRangeto);
    let filter_date_from = dateArr[0] ? dateArr[0] + ' 00:00:00' : '';
    let filter_date_to = dateArr[1] ? dateArr[1] + ' 23:59:59' : '';

    // 6774 需求中去掉对全部数据的全选
    // if ($('[name="btSelectAll"]:checked').length > 0) {
    //   let params = {
    //     filter_name: $("#input-filter-buyer_name").val().trim(),
    //     filter_buyer_group_id: $("#input-filter-buyer_groups").val().trim(),
    //     filter_date_from: filter_date_from,
    //     filter_date_to: filter_date_to,
    //     is_active: 1
    //   }
    //   $.ajax({
    //     type: 'POST',
    //     url: 'index.php?route=account/customerpartner/buyer_management/list/getBuyersInfo',
    //     data: params,
    //     async: false,
    //     success: function (response) {
    //       buyers = response.data;
    //     },
    //   });
    // } else {
    //   $.each(selected_rows, function (k, v) {
    //     buyers.push({buyer_id: v.buyer_id, nickname: v.nickname, user_number: v.user_number});
    //   });
    // }
    if(allCheckedData.length>0){
      $.each(allCheckedData, function (k, v) {
        buyers.push({buyer_id: v.buyer_id, nickname: v.nickname, user_number: v.user_number});
      });
    }else{
      $.each(selected_rows, function (k, v) {
        buyers.push({buyer_id: v.buyer_id, nickname: v.nickname, user_number: v.user_number});
      });
    }
    
    if (buyers.length <= 0) {
      layerMsg('{{ error_choose_checkboxes }}', 1500);
      return;
    }

    let customerId = '{{ customer_id }}';
    localStorage.setItem('new-message-from-' + customerId, JSON.stringify(buyers));
    window.location.href = '{{ url('customerpartner/message_center/message/new', {is_jump: 1}) }}';
  }

  function layerOpen(data, lay) {
    let saveClickFlag = false;
    layer.open({
      skin: 'oris-layer',
      type: 1,
      shadeClose: false,
      closeBtn: 0,
      id: 'LAY_layuipro',
      area: lay.area,
      title: lay.layTitle,
      content: lay.layContent,
      btn: lay.layBtn,
      yes: function (layerIndex, layerObj) {
        if (saveClickFlag) {
          return;
        }
        saveClickFlag = true;
        setRequestToServer(data, layerIndex);
      },
      btn2: function (index, layerObj) {
        layerMsg('Cancel');
      }
    });
  }

  function setRequestToServer(data, layerIndex) {
    $.ajax({
      url: 'index.php?route=account/customerpartner/buyer_management/list/batchUpdate',
      type: 'post',
      dataType: 'json',
      data: data,
      beforeSend: function () {
        layer.load();
      },
      success: function (json) {
        layer.close(layerIndex);
        layer.closeAll('loading');
        layerMsg(json.msg, 2000);
        if (parseInt(json.code) === 1) {
          refresh_table('table_active');
        }
      },
      error: function (xhr, ajaxOptions, thrownError) {
        alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
      }
    });
  }
  //end of region operation of batch

  //region table
  function query_params(params) {
    let query_params = {};
    let filter_name = $("#input-filter-buyer_name").val().trim();
    let filter_buyer_group_id = $("#input-filter-buyer_groups").val().trim();
    let dateArr = $('.page_active #input-filter-date').val().split(dateRangeto);
    let filter_date_from = dateArr[0] ? dateArr[0] + ' 00:00:00' : '';
    let filter_date_to = dateArr[1] ? dateArr[1] + ' 23:59:59' : '';
    let language = $("#input-filter-language").val();

    filter_name && (query_params.filter_name = filter_name);
    filter_buyer_group_id && (query_params.filter_buyer_group_id = filter_buyer_group_id);
    filter_date_from && (query_params.filter_date_from = filter_date_from);
    filter_date_to && (query_params.filter_date_to = filter_date_to);
    if (language !== '') {
      query_params.filter_language = language;
    }

    query_params.pageSize = params.limit;
    query_params.page = parseInt((params.offset + 1) / params.limit + 1);
    return query_params;
  }

  function init_table() {
    var onsit ={{ can_show_contacts_phone | js_var }};
    $("#table_active").bootstrapTable({
      url: url_list_active,
      sidePagination: "server",
      queryParams: query_params,
      striped: true, // 是否显示行间隔色
      uniqueId: "id",
      idField: "num",
      // showRefresh: true,
      pagination: true, // 是否分页
      pageSize: "10",
      pageList: [10, 20, 30, 50, 100],
      sortable: true, // 是否启用排序
      selectItemName: 'select_active',
      columns: [
        {
          field: '',
          title: '',
          halign: 'center',
          valign: 'center',
          align: 'center',
          checkbox: true,
        },
        {
          field: 'num',
          title: 'No.',
          halign: 'center',
          valign: 'center',
          align: 'center',
        },
        {
          field: 'nickname',
          title: '{{ column_name }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
          formatter: function (value, row, index) {
            // let html = row.nickname + '(' + row.user_number + ')';
              let html = '<span class="user_portrait" data-user_customer_id="'+row.buyer_id+'">'+row.nickname + '(' + row.user_number + ')'+'</span>';
            html += '<span>' +
              '<img data-toggle="tooltip" style="padding-left: 1px"' +
              ' src="' + (row.is_home_pickup ? img_home_pickup : img_drop_shipping) + '"' +
              ' data-original-title="' + (row.is_home_pickup ? tip_home_pickup_logo : tip_drop_shipping_logo) + '">' +
              '</span>';
            return html + row.ex_vat;
          }
        },
        {
          field: 'contacts_phone_info.contacts_phone',
          title: 'Phone',
          halign: 'center',
          valign: 'center',
          align: 'center',
          width: '130px',
          formatter: function (value,row,index){
            if(row.contacts_phone_info){
              return row.contacts_phone_info.telephone_country_code?('+' + row.contacts_phone_info.telephone_country_code.code +' '+value):"";
            }
            return ' '
          }
        },
        {
          field: 'buyer_group_name',
          title: '{{ column_buyer_group }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
          width: '180px',
          formatter: function (value, row, index) {
            let html = '';
            if (row.buyer_group_id) {
              html += '<span class="form-display break-line">' + row.buyer_group_name + (row.is_default ? '(Default)' : '') + '</span>' +
                '    <input hidden value="' + row.buyer_group_id + '" name="origin_buyer_group_id" type="text"/>';
            } else {
              html += '<span class="form-display">N/A</span>';
            }
            html += '<select class="form-edit form-control" style="display: none" name="buyer_group_id">' +
              '    <option value="0">{{ text_no_group }}</option>';
            $.each(json_buyer_groups, function (k, v) {
              html += '<option value="' + v.buyer_group_id + '" ' + (row.buyer_group_id === v.buyer_group_id ? 'selected' : '') + '>'
                + v.name + (v.is_default ? '(Default)' : '') + '</option>';
            });
            html += '</select>';
            return html;
          }
        },
        {
          field: 'number_of_transaction',
          title: '{{ column_number_of_transaction }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
        },
        {
          field: 'money_of_transaction',
          title: '{{ column_money_of_transaction }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
        },
        {
          field: 'last_transaction_time',
          title: '{{ column_column_last_transaction_time }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
          formatter: function (value,row,index){
            if (value == '0000-01-01 00:00:00') {
              return 'N/A';
            }
            return value;
          }
        },
        {
          field: 'remark',
          title: '{{ column_remark }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
          formatter: function (value, row, index) {
            return '<span class="form-display break-line">' + row.remark + '</span>' +
              '  <input class="form-edit form-control oris-input" value="' + row.remark + '" style="display: none" maxlength="50" name="remark"/>';
          }
        },
        {
          field: 'language',
          title: 'Languages Acceptable',
          halign: 'center',
          valign: 'center',
          align: 'center',
          width: '110px',
        },
        {
          field: '',
          title: '{{ column_action }}',
          halign: 'center',
          valign: 'center',
          align: 'center',
          class: 'action',
          //width: '180px',
          // @TODO 更换图标 - display none的情况需要确认
          formatter: function (value, row, index) {
            let html = '';
            html += '<a onclick="func_edit(' + index + ',' + row.id + ',this);" data-toggle="tooltip" title="{{ tip_btn_edit }}"' +
              ' class="btn-text btn-form-display mr-10"><i class="giga icon-seller_bianji-01"></i></a>' +

              '<a style="display: none;margin-left: 5px;" onclick="func_save(' + index + ',' + row.id + ',this);" data-toggle="tooltip"' +
              ' title="{{ tip_btn_save }}" class="btn-text btn-form-edit mr-10"><i class="fa fa-save"></i></a>' +

              '<a style="display: none;margin-left: 5px;" onclick="func_back(' + index + ',' + row.id + ',this);" data-toggle="tooltip"' +
              ' title="{{ tip_btn_cancel }}" class="btn-text btn-form-edit mr-10"><i class="fa fa-reply"></i></a>' +

              '<a style="margin-left: 5px;" onclick="func_refine(' + row.buyer_id + ');" data-toggle="tooltip"' +
              ' title="{{ tip_delicacy_management }}" class="btn-text mr-10"><i style="font-size:16px;" class="giga icon-guanli"></i></a>' +
              '<a style="margin-left: 5px;"  onclick="func_one_contact('+row.buyer_id +','+row.user_number+',`'+row.nickname+'`);" data-toggle="tooltip"' +
              ' title="{{ text_contact_buyer }}" class="btn-text"><i class="giga icon-youjian"></i></a>';
            return html;
          }
        }
      ],
      // maintainSelected: true,
      detailView: true,
      detailViewIcon: false,
      detailViewByClick: false,
      onLoadSuccess: function (data) {
        //恢复 filter按钮的禁用效果
        $(".btn-filter").button('reset');
      },
      formatNoMatches: function () {
        return ` <div class="msg-empty">
          <div class="msg-empty-container">
            <div class="msg-empty-icon">
              <img src="{{ asset("image/icons/empty.png") }}"></img>
            </div>
            <div class="msg-empty-title">No Records Found !</div>
          </div>
        </div>`;
      },
      //点击全选框时触发的操作
      onCheckAll: function (row) {
        let total=$('#table_active').bootstrapTable('getOptions').totalRows;
        $('#all-checked').html(`<div  class="checked-item">
        <span>Already selected ${row.length} contacts on this page</span>
        <span class="checkall-btn" id="selectAll" onclick="selectAll(this)">Select all ${total} contacts</span>
        </div>`)
      },
      //取消全选框时触发的操作
      onUncheckAll: function () {
        $('#all-checked').html('');
        allCheckedData = []
      },
      onUncheck: function () {
        $('#all-checked').html('');
        allCheckedData = []
      },
      //在对表格体进行渲染前触发
      onPreBody: function () {
        $('#all-checked').html('');
        allCheckedData = []
      }

    });
    if (onsit==0) {
      $('#table_active').bootstrapTable('hideColumn', 'contacts_phone_info.contacts_phone');
      $("#table_active").bootstrapTable();
    }
  }

  function func_edit(index, id, _this) {
    let _table = "#table_active ";
    // 显示编辑
    $(_table + "tr[data-index=" + index + "] .form-edit").css("display", "block");
    $(_table + "tr[data-index=" + index + "] .btn-form-edit").css("display", "inline-block");

    // 隐藏展示
    $(_table + "tr[data-index=" + index + "] .form-display").css("display", "none");
    $(_table + "tr[data-index=" + index + "] .btn-form-display").css("display", "none");
  }

  function func_back(index, id, _this) {
    let _table = "#table_active ";
    $(_table + "tr[data-index=" + index + "] .form-display").css("display", "block");
    $(_table + "tr[data-index=" + index + "] .btn-form-display").css("display", "inline-block");
    $(_table + "tr[data-index=" + index + "] .form-edit").css("display", "none");
    $(_table + "tr[data-index=" + index + "] .btn-form-edit").css("display", "none");
  }

  function func_status_change(_this) {
    let ele_buyer_group = $(_this).parent().parent().find("select[name='buyer_group_id']");
    if (parseInt($(_this).val()) === 1) {
      ele_buyer_group.removeAttr("disabled");
    } else {
      ele_buyer_group.prop("disabled", true);
    }
    ele_buyer_group.val(0);
  }

  function func_save(index, id, _this) {
    if (!id) {
      layerMsg('{{ error_common }}', 2000);
      return false;
    }
    let post = {id: id};
    let forms = $("#table_active tr[data-index=" + index + "] .form-edit");
    if (forms !== undefined) {
      for (let i = 0; i < forms.length; i++) {
        post[forms[i].name] = forms[i].value;
      }
    }

    let origin_buyer_group_id = $("#table_active tr[data-index=" + index + "] input[name='origin_buyer_group_id']").val();
    origin_buyer_group_id = origin_buyer_group_id === undefined ? 0 : origin_buyer_group_id;
    let origin_buyer_group_name = '';

    let buyer_group_name = '';

    if (origin_buyer_group_id || post.buyer_group_id) {
      $.each(json_buyer_groups, function (k, v) {
        if (origin_buyer_group_id && parseInt(v.buyer_group_id) === parseInt(origin_buyer_group_id)) {
          origin_buyer_group_name = v.name;
        }

        if (post.buyer_group_id && parseInt(v.buyer_group_id) === parseInt(post.buyer_group_id)) {
          buyer_group_name = v.name;
        }
      });
    }

    let is_alert = false;
    let alert_lay = {};

    if (parseInt(post.coop_status_seller) === 0) {
      is_alert = true;
      alert_lay = {
        area: ['450px', '220px'],
        title: '{{ text_set_status_0_layer_title }}',
        content: '{{ text_set_status_0_content_single }}',
      };
    } else {
      if (parseInt(origin_buyer_group_id) !== parseInt(post.buyer_group_id)) {
        is_alert = true;
        alert_lay = {
          area: 'auto',
          title: 'Message',
          content: '{{ alert_change_group }}',
        };
        if (parseInt(post.buyer_group_id)!==0) {
          let alert_msg = '{{ alert_change_group }}';
          alert_lay.content = alert_msg.replace('_group_name_', buyer_group_name);
        } else {
          let alert_msg = '{{ alert_remove_group }}';
          alert_lay.content = alert_msg.replace('_group_name_', origin_buyer_group_name);
        }
      }
    }

    if (is_alert) {
      let saveClickFlag = false;
      layer.open({
        skin: 'oris-layer',
        type: 1,
        shadeClose: false,
        scrollbar: false,
        resize: false,
        closeBtn: 0,
        id: 'LAY_layuipro1',
        area: alert_lay.area,
        title: alert_lay.title,
        content: alert_lay.content,
        btn: ['Yes', 'No'],
        yes: function (layerIndex, layerObj) {
          if (saveClickFlag) {
            return;
          }
          saveClickFlag = true;
          save_ajax(post, _this);
        },
        btn2: function (index, layerObj) {
          layerMsg('Cancel', 1500);
        }
      });
    } else {
      save_ajax(post, _this);
    }
  }

  function func_refine(buyer_id) {
    window.location.href = '{{ url_delicacy_management }}' + '&buyer_id=' + buyer_id;
  }

  function save_ajax(data, button) {
    $.ajax({
      url: 'index.php?route=account/customerpartner/buyer_management/list/update',
      type: 'post',
      dataType: 'json',
      data: data,
      beforeSend: function () {
        $(button).button('loading');
        layer.load(0, {scrollbar: false});
      },
      success: function (json) {
        layerMsg(json.msg);
        if (parseInt(json.error) === 0) {
          setTimeout(function () {
            refresh_table('table_active');
            layer.closeAll();
          }, 1000)
        } else if (parseInt(json.error) === 5) {
          alert(json.msg);
          refresh_table('table_active');
        }
      },
      error: function (xhr, ajaxOptions, thrownError) {
        layer.closeAll();
        alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
        $(button).button('reset');
      }
    });
  }

  //end of region table

  //region common
  function refresh_table(table_id) {
    $("#" + table_id).bootstrapTable('refresh');
  }

  function layerMsg(message, time = 2000) {
    layer.msg(message, {time: time});
  }

  function ajax(data, url, successCallback, otherParams = null, errorCallback = undefined) {
    $.ajax({
      url: url,
      type: 'POST',
      dataType: 'json',
      data: data,
      beforeSend: function () {
        layer.load();
      },
      success: function (json) {
        successCallback(json, otherParams);
      },
      error: function (xhr, ajaxOptions, thrownError,) {
        if (!errorCallback === undefined) {
          alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
        }
      }
    })
  }
  //end of region common
</script>

<style>
  /*用户画像弹出层*/
  .set-group-layer .layui-layer-content{
    overflow: visible !important;
  }

  .btn-text {
    font-size: 16px;
  }

  .btn-text:hover {
    cursor: pointer;
  }

  .table thead {
    height: 42px;
    line-height:42px;
  }

  .table thead th .th-inner {
    height: 42px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .table .action {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .checked-item {
    height: 40px;
    background-color: #FFEFE4;
    line-height: 40px;
    color: #333;
    font-size: 14px;
    padding-left: 20px;
    margin-bottom: 20px
  }

  .checked-item .checkall-btn {
    margin-left: 10px;
    color: #004BD8;
    cursor:pointer
  }

   .checked-item .checkall-btn:hover{
    color: #004BD8;
    text-decoration: underline;
  }

</style>
