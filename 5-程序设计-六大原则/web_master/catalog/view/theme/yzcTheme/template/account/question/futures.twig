<style>
    /*问卷调查*/
    .questionnaire {
        margin: 30px auto;
        background-color: #fff;
    }

    .questionnaire .modal-main{
        overflow-y: auto;
    }

    .form-group span {
        margin-right: 20px;
    }

    .modal .error-msg {
        float: right;
        color: #FF414D;
        display: none;
    }

    .success-msg {
        float: right;
        color: #65B017;
        display: none;
    }

    .text-highlight {
        color: #65B017;
    }

    .text-highred {
        color: #FF414D;
    }

    .text-highred input[type="checkbox"]:checked::after {
        background-color: #FF414D;
    }

    .text-highred input[type="checkbox"]:checked::before ,
    .text-highred input[type="radio"]:checked::before{
        background-color: #FF414D;
    }

    .text-highnormal {
        color: #333333;
    }

    .modal-header {
        padding:6px 13px;
    }

    .modal-footer {
        text-align: center;
    }

    a.link {
        color: #3A75DC !important;
    }

    a:hover {
        text-decoration: underline;
    }

    .modal-content .form-group label {
        color: #333;
        font-weight: inherit;
        text-transform: none;
    }

    .questionnaire .modal-body > div {
        border-bottom: 1px solid #ccc !important;
        padding: 10px 0;
        margin: 0;
    }
 
    div[index_question='0'] .fuxuan,
    div[index_question='1'] .fuxuan{
        width: 200px;
        display: inline-block;
    }

    input[type=radio]{
        vertical-align: inherit;
    }

    {% if is_seller %}
    div[index_question='4'] .xuanze:first-child{
        display: block;
    }
    {% endif %}

    .btn.btn-primary:hover{
        background-color: #2d57a9;
    }

    .modal-main::-webkit-scrollbar{
        width: 5px;
    }
</style>


<div class="modal fade" id="myModalFuturesQuestion" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="false">
    <div class="modal-dialog" style="width: 900px;">
        <div class="modal-content questionnaire">
            <div class="modal-header">
                <h4 class="modal-title"><i class="giga icon-bianji" style="margin-right: 5px;font-size: 22px"></i>To make sure you have a good understanding of the future goods transaction on Marketplace, please answer the following questions:
                </h4>
            </div>
            <div class="modal-main">
                <div class="modal-body">
                    {#由JS填充#}
                </div>
                <div class="modal-footer" style="border-top:none ;padding-top: 0">
                    <div style="text-align: left;margin-bottom: 10px">
                        If you have any questions or advices about the future goods transaction, please <a class="link"
                                                                                                           target="_blank"
                                                                                                           href="{{ url('account/ticket/lists') }}&is_others=1">
                            Submit a Request </a> to the Marketplace.
                    </div>
                    <a data-toggle="tooltip" title="" class="btn btn-primary" target="_blank" id="submit"
                       data-original-title="" disabled>
                        Submit
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    // 设置问卷长度
    let height = $(window).height();
    let mainHeight =Number(height)-140;
    console.log(mainHeight);
    $("#myModalFuturesQuestion .modal-main").css('height',mainHeight);
    let question_json = {{ question_json }};
    $("#myModalFuturesQuestion").modal({
        //点击背景不关闭
        backdrop: "static",
        //触发键盘esc事件时不关闭
        keyboard: false
    });

    let question_html = '';
    for (let indexQuestion in question_json) {
        if (question_json.hasOwnProperty(indexQuestion)) {
            let question_obj = question_json[indexQuestion];
            if (question_obj.hasOwnProperty('type')) {
                switch (question_obj['type']) {
                    case 'checkbox'://复选题
                        question_html +=
                            '        <div class="form-group row_question" index_question="' + indexQuestion + '">\n' +
                            '          <label class="control-label" for="">\n' +
                            '            ' + question_obj['question'] + '\n' +
                            '          </label>\n' +
                            '          <div>\n';
                        let icont = 1;
                        let ioptionlength = question_obj['option'].length;
                        for (let indexOption in question_obj['option']) {
                            let option = question_obj['option'][indexOption];
                            question_html +=
                                '            <span class="fuxuan xuanze">\n' +
                                '              <input type="checkbox" name="' + indexQuestion + '">&nbsp;' + option + '\n' +
                                '            </span>\n';
                            if (ioptionlength > 2) {
                                if (icont == 2) {
                                    question_html += '<br>';
                                }
                            }
                            icont++;
                        }
                        question_html +=
                            '            <span class="error-msg ">The answer is incorrect, please read the tips and select again.</span>\n' +
                            '            <span class="success-msg"><i class="giga icon-duigou"></i></span>\n' +
                            '          </div>\n' +
                            '        </div>\n';
                        break;
                    case 'radio'://单选题
                        question_html +=
                            '        <div class="form-group row_question" index_question="' + indexQuestion + '">\n' +
                            '          <label class="control-label" for="">\n' +
                            '            ' + question_obj['question'] + '\n' +
                            '          </label>\n' +
                            '          <div>\n';
                        for (let indexOption in question_obj['option']) {
                            let option = question_obj['option'][indexOption];
                            question_html +=
                                '            <span class="xuanze">\n' +
                                '              <input type="radio" name="' + indexQuestion + '">&nbsp;' + option + '\n' +
                                '            </span>\n';
                        }
                        question_html +=
                            '            <span class="error-msg ">The answer is incorrect, please read the tips and select again.</span>\n' +
                            '            <span class="success-msg"><i class="giga icon-duigou"></i></span>\n' +
                            '          </div>\n' +
                            '        </div>\n';
                        break;
                    default:
                        break;
                }
            }
        }
    }
    $("#myModalFuturesQuestion").find(".modal-body").html(question_html);

    $("#myModalFuturesQuestion").find('input').change(function () {
        $(this).parentsUntil(".row_question").parent().find('span.xuanze').removeClass("text-highred").removeClass("text-highlight").addClass("text-highnormal");
        let index_question_this = $(this).parentsUntil(".row_question").parent().attr("index_question");
        $("div[index_question='" + index_question_this + "']").find('.success-msg').hide();
        $("div[index_question='" + index_question_this + "']").find(".error-msg ").hide();
        questionCanSubmit();
    });
    function checkQuestion() {
        $('div.row_question').each(function(index, domEle){
            let index_question = $(domEle).attr('index_question');//当前这道题的索引
            //复选题
            let type = $(domEle).find('input').attr('type');
            if(type=='checkbox'){
                //复选题
                let answer_true = question_json[index_question].answer;//数组
                let answer_select = [];
                $("div[index_question='" + index_question + "']").find('input[type="checkbox"]').each(function (index, domEle) {
                    if ($(domEle).prop("checked")) {
                        answer_select.push(index);
                    }
                });
                if (answer_select.length != answer_true.length) {//选择选项的数量与 参考答案选项的数量 不同
                    if (answer_select.length > answer_true.length) {
                        //选多了，正确选项标绿，错误选项标红，警告语
                        for (let i in answer_select) {
                            if (answer_true.indexOf(answer_select[i]) == -1) {//选择的选项不在参考答案中
                                $($("div[index_question='" + index_question + "']").find('.fuxuan')[answer_select[i]]).removeClass("text-highnormal").removeClass("text-highlight").addClass("text-highred");
                            } else {//选择的选项在参考答案中
                                $($("div[index_question='" + index_question + "']").find('.fuxuan')[answer_select[i]]).removeClass("text-highnormal").removeClass("text-highred").addClass("text-highlight");
                            }
                        }
                        $("div[index_question='" + index_question + "']").find('.success-msg').hide();
                        $("div[index_question='" + index_question + "']").find(".error-msg ").show();
                    }
                    if (answer_select.length < answer_true.length) {//选少了
                        for (let i in answer_true) { //参考答案的选项都标绿
                            $($("div[index_question='" + index_question + "']").find('.fuxuan')[answer_true[i]]).removeClass("text-highnormal").removeClass("text-highred").addClass("text-highlight");
                        }
                        for (let i in answer_select) {//选择的错误选项都标红
                            if (answer_true.indexOf(answer_select[i]) == -1) {
                                $($("div[index_question='" + index_question + "']").find('.fuxuan')[answer_select[i]]).removeClass("text-highnormal").removeClass("text-highlight").addClass("text-highred");
                            }
                        }
                        //警告语
                        $("div[index_question='" + index_question + "']").find('.success-msg').hide();
                        $("div[index_question='" + index_question + "']").find(".error-msg ").show();
                    }
                } else {//选择选项的数量与 参考答案选项的数量 相同
                    //完全正确
                    if (answer_select.join() === answer_true.join()) {
                        $($("div[index_question='" + index_question + "']").find('.xuanze')[answer_true[index_question]]).removeClass("text-highred").removeClass("text-highlight").addClass("text-highnormal");
                        $("div[index_question='" + index_question + "']").find('.success-msg').show();
                        $("div[index_question='" + index_question + "']").find(".error-msg ").hide();
                    } else {//选项有对有错
                        //参考答案的选项都标绿，选择错误的选项都标红
                        for (let i in answer_true) { //参考答案的选项都标绿
                            $($("div[index_question='" + index_question + "']").find('.fuxuan')[answer_true[i]]).removeClass("text-highnormal").removeClass("text-highred").addClass("text-highlight");
                        }
                        for (let i in answer_select) {//选择错误的选项都标红
                            if (answer_true.indexOf(answer_select[i]) == -1) {
                                $($("div[index_question='" + index_question + "']").find('.xuanze')[answer_select[i]]).removeClass("text-highnormal").removeClass("text-highlight").addClass("text-highred");
                            }
                        }
                        //警告语
                        $("div[index_question='" + index_question + "']").find('.success-msg').hide();
                        $("div[index_question='" + index_question + "']").find(".error-msg ").show();
                    }
                }
            } else {
                //单选题
                //选择单选框
                let domEleQuestion = domEle;
                let domEleOptions = $(domEleQuestion).find('input[type="radio"]');
                let indexQuestion = $(domEleQuestion).attr("index_question");//当前这道题的索引
                //当前这道题选中的选项个数 与 答案的个数是否相同
                let numSelected = $(domEleQuestion).find('input[type="radio"]:checked').length;
                let numAnswer = question_json[indexQuestion]['answer'].length;
                if (numSelected == numAnswer) { //选择选项的数量 与 参考答案选项的数量 相同
                    $(domEleQuestion).find(".success-msg").show();
                    $(domEleQuestion).find(".error-msg ").hide();
                    $(domEleOptions).each(function (indexOption, domEleOption) {//每一道复选题的选项
                        let ischecked = $(domEleOption).prop("checked");
                        if (ischecked) {//判断已选的选项是否在参考答案之中
                            let is_select_true = false;
                            if (question_json.hasOwnProperty(indexQuestion) && question_json[indexQuestion].hasOwnProperty('answer')) {
                                for (let aindex in question_json[indexQuestion]['answer']) {
                                    if (question_json[indexQuestion]['answer'][aindex] == indexOption) {//该选项是答案之一
                                        is_select_true = true;
                                        $(domEleOptions).parent().removeClass("text-highnormal").removeClass("text-highlight").removeClass("text-highred").addClass("text-highnormal");
                                        $(domEleOption).parent().removeClass("text-highnormal").removeClass("text-highlight").removeClass("text-highred").addClass("text-highnormal");
                                    } else {
                                        $(domEleOption).parent().removeClass("text-highnormal").removeClass("text-highlight").removeClass("text-highred").addClass("text-highred");//选错的答案标红
                                    }
                                }
                            }
                            if (is_select_true === false) {//当前这道题，选中了错误答案，给予提示，并停止判断
                                $(domEleQuestion).find(".success-msg").hide();
                                $(domEleQuestion).find(".error-msg ").show();
                                return false;
                            }
                        }
                    });
                } else { //选择选项的数量 与 参考答案选项的数量 不同
                    $(domEleQuestion).find(".success-msg").hide();
                    $(domEleQuestion).find(".error-msg ").show();
                }
            }
        });
    }


    function questionCanSubmit() {
        let numSelected = 0;
        $("#myModalFuturesQuestion").find("div.row_question").each(function(index, domEle){
            $(domEle).find('input').each(function (i, d) {
                if($(d).prop("checked")){
                    numSelected++;
                    return false;
                }
            });
        });
       // let numDoTrue = $("#myModalFuturesQuestion").find(".success-msg:visible").length;
        if (Number(numSelected) == Number(question_json.length)) {//全部做完
            $("#myModalFuturesQuestion #submit").attr("disabled", false);
            $("#myModalFuturesQuestion #submit").attr("data-original-title", "");
            return true;
        } else {
            $("#myModalFuturesQuestion #submit").attr("disabled", true);
            $("#myModalFuturesQuestion #submit").attr("data-original-title", "Not all questions have been answered.");
            return false;
        }
    }
    function questionNumDoTrue(){
        //做对多少道题
        let numDoTrue = $("#myModalFuturesQuestion").find(".success-msg:visible").length;
        if (Number(numDoTrue) == Number(question_json.length)) {//全部答对
            $("#myModalFuturesQuestion #submit").attr("disabled", false);
            $("#myModalFuturesQuestion #submit").attr("data-original-title", "");
        } else {
            $("#myModalFuturesQuestion #submit").attr("disabled", true);
            $("#myModalFuturesQuestion #submit").attr("data-original-title", "Not all questions have been answered.");
        }
    }
    $('#myModalFuturesQuestion #submit').on('click', function () {
        if(!questionCanSubmit()){
            return false;
        }
        checkQuestion();
        questionNumDoTrue();
        let that = this;
        if ($(that).attr('disabled')) {
            return false;
        }
        $(that).attr('disabled', true);
        $.ajax({
            url: "{{ url('account/question/saveFuturesQuestionnaire') }}",
            type: 'get',
            dataType: 'json',
            success: function (json, textStatus, jqXHR) {
                $('#myModalFuturesQuestion').modal('hide');
            },
            error: function (xhr, ajaxOptions, thrownError) {
            },
            complete: function (XMLHttpRequest, textStatus) {
                $(that).attr('disabled', false);
            }
        });
    });
    $("#myModalFuturesQuestion #submit").on('mouseover', function () {
        questionCanSubmit();
    })
</script>